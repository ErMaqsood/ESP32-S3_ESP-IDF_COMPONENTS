<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="bme680_8c" kind="file" language="C++">
    <compoundname>bme680.c</compoundname>
    <includes refid="bme680_8h" local="yes">include/bme680.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sdkconfig.h</includes>
    <includes local="no">esp_types.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/peripherals/i2c/esp_bme680/bme680.c</label>
        <link refid="bme680_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/bme680.h</label>
        <link refid="bme680_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>bme680_version.h</label>
        <link refid="bme680__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="17">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="16">
        <label>esp_log.h</label>
      </node>
      <node id="8">
        <label>esp_mac.h</label>
      </node>
      <node id="18">
        <label>esp_timer.h</label>
      </node>
      <node id="15">
        <label>esp_types.h</label>
      </node>
      <node id="19">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="20">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>sdkconfig.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="bme680_8c_1a7d3657c7ccdd9061d9b9d6aea25505c1" prot="public" static="no">
        <name>BME680_REG_STATUS0</name>
        <initializer>UINT8_C(0x1D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>possible BME680 registers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a74ae9627ad9cf3c1fce49eec5492022e" prot="public" static="no">
        <name>BME680_REG_RESET</name>
        <initializer>UINT8_C(0xE0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reset value: 0xB6 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="56" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1aa7964902f5eea50ddcbfd8f110794f15" prot="public" static="no">
        <name>BME680_REG_ID</name>
        <initializer>UINT8_C(0xD0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="57" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a49e14eae63e5a711a6df085525f3868c" prot="public" static="no">
        <name>BME680_REG_CONFIG</name>
        <initializer>UINT8_C(0x75)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="58" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1abceadfebb7294faf7d4d2aea771e0479" prot="public" static="no">
        <name>BME680_REG_CTRL_MEAS</name>
        <initializer>UINT8_C(0x74)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="59" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a21d0d74e2a7a66c01ea518384bb40e7e" prot="public" static="no">
        <name>BME680_REG_CTRL_HUMI</name>
        <initializer>UINT8_C(0x72)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="60" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a8a406fefb88485c2bbd47ac962f614cf" prot="public" static="no">
        <name>BME680_REG_CTRL_GAS1</name>
        <initializer>UINT8_C(0x71)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="61" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1acb3152490b74df22b4eab7a0c6c25c00" prot="public" static="no">
        <name>BME680_REG_CTRL_GAS0</name>
        <initializer>UINT8_C(0x70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="62" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a8c68dd42ccaee27e0eea9b3b2347226f" prot="public" static="no">
        <name>BME680_REG_GAS_WAIT</name>
        <initializer>UINT8_C(0x64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gas_wait_x: 0x64 to 0x6D </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="63" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1af34fa240897eac46b20995e226b00fb3" prot="public" static="no">
        <name>BME680_REG_RES_HEAT</name>
        <initializer>UINT8_C(0x5A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>res_heat_x: 0x5A to 0x63 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="64" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a55cb378c3b9f470630bdceb919466689" prot="public" static="no">
        <name>BME680_REG_IDAC_HEAT</name>
        <initializer>UINT8_C(0x50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>idac_heat_x: 0x50 to 0x59 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="65" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a9199b0aaeadeedfca96dde54278bcff5" prot="public" static="no">
        <name>BME680_REG_GAS_R_LSB</name>
        <initializer>UINT8_C(0x2B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="66" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1aa9fd065c88163d82c7d63bce0b845bae" prot="public" static="no">
        <name>BME680_REG_GAS_R_MSB</name>
        <initializer>UINT8_C(0x2A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="67" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1af71b874ec05e586ee25a84f0c66e7e38" prot="public" static="no">
        <name>BME680_REG_GAS_R</name>
        <initializer>UINT8_C(BME680_REG_GAS_R_MSB)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a8fc53acc8c84c6aaa2dd27258fd66752" prot="public" static="no">
        <name>BME680_REG_HUMI_LSB</name>
        <initializer>UINT8_C(0x26)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="69" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a5cab7067ca17fb7061b59330934589d4" prot="public" static="no">
        <name>BME680_REG_HUMI_MSB</name>
        <initializer>UINT8_C(0x25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a9e8d9a745d247ecc4481a63fd1804ca8" prot="public" static="no">
        <name>BME680_REG_HUMI</name>
        <initializer>UINT8_C(BME680_REG_HUMI_MSB)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="71" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a6692ab59ae4f922bf0f00df19fa8855c" prot="public" static="no">
        <name>BME680_REG_TEMP_XLSB</name>
        <initializer>UINT8_C(0x24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="72" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1aa971072b67043d91542610ce08b33e9b" prot="public" static="no">
        <name>BME680_REG_TEMP_LSB</name>
        <initializer>UINT8_C(0x23)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="73" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1ab9d0cd345a9b685ccf0f4ae2bd4e96ce" prot="public" static="no">
        <name>BME680_REG_TEMP_MSB</name>
        <initializer>UINT8_C(0x22)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="74" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a71c65f6c31473d59dfaef5d2f62f616a" prot="public" static="no">
        <name>BME680_REG_TEMP</name>
        <initializer>UINT8_C(BME680_REG_TEMP_MSB)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a17e0f5e6ac0149424b9741a545fd8fea" prot="public" static="no">
        <name>BME680_REG_PRESS_XLSB</name>
        <initializer>UINT8_C(0x21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="76" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a4ea2139e0e047af3c72b28bd02cd1e60" prot="public" static="no">
        <name>BME680_REG_PRESS_LSB</name>
        <initializer>UINT8_C(0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="77" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a93ac762abd8faca5c8d4fbc4f141e6e2" prot="public" static="no">
        <name>BME680_REG_PRESS_MSB</name>
        <initializer>UINT8_C(0x1F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="78" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a81622cb6f07b1d47e3c27b80641f3eba" prot="public" static="no">
        <name>BME680_REG_PRESS</name>
        <initializer>UINT8_C(BME680_REG_PRESS_MSB)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="79" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1ab63e8d5aa89ad82681363d9816ed8cf6" prot="public" static="no">
        <name>BME680_RESET_VALUE</name>
        <initializer>UINT8_C(0xB6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="80" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a02bbc527d806b41356b88565f5a85b5d" prot="public" static="no">
        <name>BME680_REG_SHD_HEATR_DUR</name>
        <initializer>UINT8_C(0x6E)  /* Shared heating duration address */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="81" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a698d0e644efa63b1556bb2d24c7b4f3f" prot="public" static="no">
        <name>BME680_REG_VARIANT_ID</name>
        <initializer>UINT8_C(0xF0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="83" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a51d4efbb8152ecb2fa390be3c192264c" prot="public" static="no">
        <name>BME680_VARIANT_GAS_LOW</name>
        <initializer>UINT8_C(0x00)  /* Low Gas variant */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="85" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a3ab963eed7bb08d855160663fb54a369" prot="public" static="no">
        <name>BME680_VARIANT_GAS_HIGH</name>
        <initializer>UINT8_C(0x01)  /* High Gas variant */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="86" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1afd8d39a964ac5d976df369e24a026c93" prot="public" static="no">
        <name>BME680_ENABLE_GAS_MEAS_L</name>
        <initializer>UINT8_C(0x01) /* Enable gas measurement low */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="88" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a7da0e80f20730fb3d1d0cf0769f158c7" prot="public" static="no">
        <name>BME680_ENABLE_GAS_MEAS_H</name>
        <initializer>UINT8_C(0x02) /* Enable gas measurement high */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="89" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1af039e6b0d7bcff855966d53c2f4eaa8a" prot="public" static="no">
        <name>BME680_REG_MEAS_STATUS_1</name>
        <initializer>UINT8_C(0x2e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="92" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a3cb82b0cf2f3db83bea5e2e1b2edeac2" prot="public" static="no">
        <name>BME680_REG_MEAS_INDEX_1</name>
        <initializer>UINT8_C(0x2f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="93" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a1c9a86e09fd5e4cd821a625651db80b8" prot="public" static="no">
        <name>BME680_REG_MEAS_STATUS_2</name>
        <initializer>UINT8_C(0x3f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="96" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a98ff8b7b0a5ee8e900ce705c6082f8c0" prot="public" static="no">
        <name>BME680_REG_MEAS_INDEX_2</name>
        <initializer>UINT8_C(0x40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="97" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a762d33b22cceaa1f90dc2044ace463ee" prot="public" static="no">
        <name>BME680_CHIP_ID</name>
        <initializer>UINT8_C(0x61)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="99" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1af1f487cb77dbd5f21482e78042214899" prot="public" static="no">
        <name>BME680_AQI_TEMP_CORR</name>
        <initializer>(-3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="101" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1aa1d09fccdd0e6404ecfb349613ddc4d7" prot="public" static="no">
        <name>BME680_DATA_POLL_TIMEOUT_MS</name>
        <initializer>UINT16_C(250)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="106" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a3214be2127fd8caf716be7f22ce18a9f" prot="public" static="no">
        <name>BME680_DATA_READY_DELAY_MS</name>
        <initializer>UINT16_C(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="107" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a6c5b2bcabba22d9c8e5ba5bc4f9a7558" prot="public" static="no">
        <name>BME680_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="108" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a23944291c0d3d436b146bf7d233e8453" prot="public" static="no">
        <name>BME680_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="109" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a9a1c80dd1d3b078f99485c3700d5ba67" prot="public" static="no">
        <name>BME680_RESET_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="110" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a4de55142dc769df8b4aee4c9d8457999" prot="public" static="no">
        <name>BME680_CMD_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="111" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1a6d84e11d91f2997ca0f6987b2a2afb7a" prot="public" static="no">
        <name>BME680_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="112" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1aee7b193fcb571e0c3bc88c29f1662af4" prot="public" static="no">
        <name>ESP_TIMEOUT_CHECK</name>
        <param><defname>start</defname></param>
        <param><defname>len</defname></param>
        <initializer>((uint64_t)(esp_timer_get_time() - (start)) &gt;= (len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="117" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bme680_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="118" column="9" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="118" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="bme680_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;bme680&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="123" column="19" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="123" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="bme680_8c_1af938595e950ebca3960d05bcdd14a243" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_i2c_read_from</definition>
        <argsstring>(bme680_handle_t handle, const uint8_t reg_addr, uint8_t *buffer, const uint8_t size)</argsstring>
        <name>bme680_i2c_read_from</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>BME680 I2C read from register address transaction. This is a write and then read process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 read transaction return buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="135" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="135" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1ade206b9ebe37d6ffccf250f402f73266" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_i2c_read_word_from</definition>
        <argsstring>(bme680_handle_t handle, const uint8_t reg_addr, uint16_t *const word)</argsstring>
        <name>bme680_i2c_read_word_from</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *const</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>BME680 I2C read halfword from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>halfword</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 read transaction return halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="154" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="154" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a2f7e8cea1cedef6af841f0fd706d8f45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_i2c_read_byte_from</definition>
        <argsstring>(bme680_handle_t handle, const uint8_t reg_addr, uint8_t *const byte)</argsstring>
        <name>bme680_i2c_read_byte_from</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>BME680 I2C read byte from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 read transaction return byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="177" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="177" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1aca3f4807b98371ea4c56cf46c9844350" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_i2c_write_byte_to</definition>
        <argsstring>(bme680_handle_t handle, const uint8_t reg_addr, const uint8_t byte)</argsstring>
        <name>bme680_i2c_write_byte_to</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>BME680 I2C write byte to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 write transaction input byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="200" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="200" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a7b3907fab7bbdf9b60c439aa1207db64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float bme680_calculate_dewpoint</definition>
        <argsstring>(const float temperature, const float humidity)</argsstring>
        <name>bme680_calculate_dewpoint</name>
        <param>
          <type>const float</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>humidity</declname>
        </param>
        <briefdescription>
<para>Calculates dew-point temperature from air temperature and relative humidity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>air temperature in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>relative humidity in percent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float calculated dew-point temperature in degrees Celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="219" column="21" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="219" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1af38743e6fa9f435b332703981f74e6ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float bme680_compensate_temperature</definition>
        <argsstring>(bme680_handle_t handle, const uint32_t adc_temperature)</argsstring>
        <name>bme680_compensate_temperature</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>adc_temperature</declname>
        </param>
        <briefdescription>
<para>Temperature compensation algorithm is taken from datasheet. See datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adc_temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>raw adc temperature. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Temperature in degrees Celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="235" column="21" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="235" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a4fb1687ad123a88d05eb575f3694dac7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float bme680_compensate_humidity</definition>
        <argsstring>(bme680_handle_t handle, const uint16_t adc_humidity)</argsstring>
        <name>bme680_compensate_humidity</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>adc_humidity</declname>
        </param>
        <briefdescription>
<para>Humidity compensation algorithm is taken from datasheet. See datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adc_humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw ADC humidity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Humidity in percentage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="258" column="21" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="258" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1ab624ce3330d224f14150ed6a5b355c1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float bme680_compensate_pressure</definition>
        <argsstring>(bme680_handle_t handle, const uint32_t adc_pressure)</argsstring>
        <name>bme680_compensate_pressure</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>adc_pressure</declname>
        </param>
        <briefdescription>
<para>Pressure compensation algorithm is taken from datasheet. see datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adc_pressure</parametername>
</parameternamelist>
<parameterdescription>
<para>raw adc pressure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Pressure in Pascal. Divide by 100 for Hecto-Pascals. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="286" column="21" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="286" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a38b1bbe3457b1f342b1137a51a51d886" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float bme680_compensate_gas_resistance</definition>
        <argsstring>(bme680_handle_t handle, uint16_t adc_gas_res, uint8_t gas_range)</argsstring>
        <name>bme680_compensate_gas_resistance</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>adc_gas_res</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>gas_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="309" column="21" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="309" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a15923164881930096755e0b4c5043f4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t bme680_compensate_heater_resistance</definition>
        <argsstring>(bme680_handle_t handle, uint16_t temperature)</argsstring>
        <name>bme680_compensate_heater_resistance</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="321" column="23" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="321" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a9be7142d248a205c9d05209f2b38ad41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t bme680_compute_gas_wait</definition>
        <argsstring>(const uint16_t duration)</argsstring>
        <name>bme680_compute_gas_wait</name>
        <param>
          <type>const uint16_t</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Calculates the gas wait time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t Gas wait time duration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="347" column="23" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="347" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a987ca52bb39f12295ecec06d57e91eb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t bme680_compute_heater_shared_duration</definition>
        <argsstring>(const uint16_t duration)</argsstring>
        <name>bme680_compute_heater_shared_duration</name>
        <param>
          <type>const uint16_t</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="365" column="23" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="365" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a73c038ad065fccbe0aaf3b87303dc662" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t bme680_get_measurement_duration</definition>
        <argsstring>(bme680_handle_t handle)</argsstring>
        <name>bme680_get_measurement_duration</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Gets an estimated measurement duration in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>bmp280 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Estimated measurement duration in milliseconds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="392" column="24" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="392" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a521f33276f6a8398cd9b917352d25cb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_get_cal_factors</definition>
        <argsstring>(bme680_handle_t handle)</argsstring>
        <name>bme680_get_cal_factors</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Gets the calibration factors onboard the bme680. see datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bme680_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>bmp280 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="422" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="422" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1af53730a66516e5bdc24ee9946f400a14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_setup_heater_profiles</definition>
        <argsstring>(bme680_handle_t handle, bme680_heater_setpoints_t *const heater_setpoint)</argsstring>
        <name>bme680_setup_heater_profiles</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="group__drivers_1ga457964ffe1aeb9433d63ed769051c6d6" kindref="member">bme680_heater_setpoints_t</ref> *const</type>
          <declname>heater_setpoint</declname>
        </param>
        <briefdescription>
<para>Setup and configuration of BME680 gas and heater profile registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="495" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="495" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1ae7b265255b3a41c12d618bdaafeb7ea0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_setup_heater</definition>
        <argsstring>(bme680_handle_t handle)</argsstring>
        <name>bme680_setup_heater</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Setup and configuration of BME680 gas and heater registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="574" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="574" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a8f43e23bc03fc4d6d78350a2702ef2d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t bme680_setup</definition>
        <argsstring>(bme680_handle_t handle)</argsstring>
        <name>bme680_setup</name>
        <param>
          <type><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Setup and configuration of BME680 context and registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="615" column="25" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="615" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a940bb81d07789fed02d65bea4413f750" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bme680_compute_iaq</definition>
        <argsstring>(bme680_data_t *const data)</argsstring>
        <name>bme680_compute_iaq</name>
        <param>
          <type><ref refid="group__drivers_1ga3238b870a3bc18b1c513b52ebb74e125" kindref="member">bme680_data_t</ref> *const</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>IAQ calculations following Dr. Julie Riggs, The IAQ Rating Index, www.iaquk.org.uk. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Weighting: Temperature, Humidity each one tenth of the rating ==&gt; 6.5 points max each giving gas resistance readings 8 tenths of the rating ==&gt; 52 points max</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>BME680 data structure, air temperature, dew-point temperature, and relative humidity parameters must be initialized as a minimum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_bme680/bme680.c" line="677" column="20" bodyfile="components/peripherals/i2c/esp_bme680/bme680.c" bodystart="677" bodyend="712"/>
      </memberdef>
      <member refid="group__drivers_1ga1428013d7162e45e0aa98d692ebe6e6f" kind="function"><name>bme680_get_chip_id_register</name></member>
      <member refid="group__drivers_1ga9645bd4e638ebc98c2ecf61195de5776" kind="function"><name>bme680_get_variant_id_register</name></member>
      <member refid="group__drivers_1ga6c954f3140a0b05f025691007165c466" kind="function"><name>bme680_get_status0_register</name></member>
      <member refid="group__drivers_1gac36e4d6c1442349c26e027f8bc0ed54e" kind="function"><name>bme680_get_gas_lsb_register</name></member>
      <member refid="group__drivers_1ga5bfb7440dc318d739486c5632d789e13" kind="function"><name>bme680_set_gas_lsb_register</name></member>
      <member refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kind="function"><name>bme680_get_control_measurement_register</name></member>
      <member refid="group__drivers_1ga0e7ab74cc925aee01a695b997b7ea162" kind="function"><name>bme680_set_control_measurement_register</name></member>
      <member refid="group__drivers_1gac9241adfbbf7d21531e5c997f704a348" kind="function"><name>bme680_get_control_humidity_register</name></member>
      <member refid="group__drivers_1gafa9c1fab99a1cb32bb82203888173bca" kind="function"><name>bme680_set_control_humidity_register</name></member>
      <member refid="group__drivers_1gab445e7b178ff65ebd6a729c3df48f762" kind="function"><name>bme680_get_control_gas0_register</name></member>
      <member refid="group__drivers_1ga6b1f88599ddbe2aec815577d99ceaccf" kind="function"><name>bme680_set_control_gas0_register</name></member>
      <member refid="group__drivers_1ga4286bdbfb0299500c38524fb574727b9" kind="function"><name>bme680_get_control_gas1_register</name></member>
      <member refid="group__drivers_1gac47fa145af66cf63719d286ad72f07e4" kind="function"><name>bme680_set_control_gas1_register</name></member>
      <member refid="group__drivers_1ga5d99d3bd2ca005930e5b735e1d0049d2" kind="function"><name>bme680_get_configuration_register</name></member>
      <member refid="group__drivers_1ga244e6a799e41182cbb51d26989edcdf1" kind="function"><name>bme680_set_configuration_register</name></member>
      <member refid="group__drivers_1ga634c8a6901632299925de54d36aa85c4" kind="function"><name>bme680_init</name></member>
      <member refid="group__drivers_1ga1035dfc4e91ae0606e10d9b6298ff96f" kind="function"><name>bme680_air_quality_to_string</name></member>
      <member refid="group__drivers_1ga36125455be024323f83d41ebf4a261de" kind="function"><name>bme680_get_adc_signals</name></member>
      <member refid="group__drivers_1ga110830ca8c0c7f369b8e9e694d183c82" kind="function"><name>bme680_get_data</name></member>
      <member refid="group__drivers_1ga96ab8615b99ad6d0bfb15f2e9674d920" kind="function"><name>bme680_get_data_status</name></member>
      <member refid="group__drivers_1ga3900195ee2d52c50a52336b520ea9862" kind="function"><name>bme680_get_gas_measurement_index</name></member>
      <member refid="group__drivers_1ga11e221835d68171e4a1500d5210ad2ab" kind="function"><name>bme680_get_power_mode</name></member>
      <member refid="group__drivers_1ga78b2866a9e56e873ec90b39049196fa7" kind="function"><name>bme680_set_power_mode</name></member>
      <member refid="group__drivers_1gacb2dc88ee8756b1d878642755c578e64" kind="function"><name>bme680_get_pressure_oversampling</name></member>
      <member refid="group__drivers_1gaeaaa875bf00f30d1a8b3a7d0a56765a3" kind="function"><name>bme680_set_pressure_oversampling</name></member>
      <member refid="group__drivers_1gad929ae529dd3a1ac96d70bbb57677c03" kind="function"><name>bme680_get_temperature_oversampling</name></member>
      <member refid="group__drivers_1ga469d38f764c34555d25bd3add78713ea" kind="function"><name>bme680_set_temperature_oversampling</name></member>
      <member refid="group__drivers_1ga824c402878d6a0f4725b29d0a255075b" kind="function"><name>bme680_get_humidity_oversampling</name></member>
      <member refid="group__drivers_1ga1714d1fac241515bc7482e33751b413f" kind="function"><name>bme680_set_humidity_oversampling</name></member>
      <member refid="group__drivers_1gabcbd257633d63e36ceecfe5a3a9cd9ae" kind="function"><name>bme680_get_iir_filter</name></member>
      <member refid="group__drivers_1ga42d032ca7dca23fe748a5d386db89720" kind="function"><name>bme680_set_iir_filter</name></member>
      <member refid="group__drivers_1ga606c1061cf4c410083cd645dd379f19a" kind="function"><name>bme680_reset</name></member>
      <member refid="group__drivers_1ga71deded33055c869346bef7d326cb4ec" kind="function"><name>bme680_remove</name></member>
      <member refid="group__drivers_1ga43ca650aa6143976272296a64313fe69" kind="function"><name>bme680_delete</name></member>
      <member refid="group__drivers_1ga71a0175fc3b38bd5fb9530849ab78f94" kind="function"><name>bme680_get_fw_version</name></member>
      <member refid="group__drivers_1ga0893a15c64ff19d7056a8ce9e9c81ac1" kind="function"><name>bme680_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for BME680 temperature, humidity, pressure, and gas sensor</para>
<para>Ported from esp-open-rtos</para>
<para><ulink url="https://github.com/boschsensortec/BME68x_SensorAPI/blob/master/bme68x.c">https://github.com/boschsensortec/BME68x_SensorAPI/blob/master/bme68x.c</ulink></para>
<para>iaq: <ulink url="https://github.com/3KUdelta/heltec_wifi_kit_32_BME680/blob/master/Wifi_Kit_32_BME680.ino">https://github.com/3KUdelta/heltec_wifi_kit_32_BME680/blob/master/Wifi_Kit_32_BME680.ino</ulink></para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bme680_8h" kindref="compound">include/bme680.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdkconfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_STATUS0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_RESET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xE0)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xD0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_CONFIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x75)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_CTRL_MEAS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x74)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_CTRL_HUMI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x72)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_CTRL_GAS1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x71)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_CTRL_GAS0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_GAS_WAIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x64)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_RES_HEAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x5A)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_IDAC_HEAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x50)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_GAS_R_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x2B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_GAS_R_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x2A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_GAS_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(BME680_REG_GAS_R_MSB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_HUMI_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x26)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_HUMI_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_HUMI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(BME680_REG_HUMI_MSB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_TEMP_XLSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_TEMP_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x23)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_TEMP_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x22)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_TEMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(BME680_REG_TEMP_MSB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_PRESS_XLSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x21)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_PRESS_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_PRESS_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_PRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(BME680_REG_PRESS_MSB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_RESET_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xB6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_SHD_HEATR_DUR<sp/><sp/><sp/><sp/>UINT8_C(0x6E)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Shared<sp/>heating<sp/>duration<sp/>address<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_VARIANT_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xF0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_VARIANT_GAS_LOW<sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x00)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Low<sp/>Gas<sp/>variant<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_VARIANT_GAS_HIGH<sp/><sp/><sp/><sp/><sp/>UINT8_C(0x01)<sp/><sp/></highlight><highlight class="comment">/*<sp/>High<sp/>Gas<sp/>variant<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_ENABLE_GAS_MEAS_L<sp/><sp/><sp/><sp/>UINT8_C(0x01)<sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>gas<sp/>measurement<sp/>low<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_ENABLE_GAS_MEAS_H<sp/><sp/><sp/><sp/>UINT8_C(0x02)<sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>gas<sp/>measurement<sp/>high<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>field<sp/>data<sp/>1<sp/>registers<sp/>(not<sp/>documented,<sp/>used<sp/>in<sp/>SEQUENTIAL_MODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_MEAS_STATUS_1<sp/><sp/><sp/><sp/>UINT8_C(0x2e)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_MEAS_INDEX_1<sp/><sp/><sp/><sp/><sp/>UINT8_C(0x2f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>field<sp/>data<sp/>2<sp/>registers<sp/>(not<sp/>documented,<sp/>used<sp/>in<sp/>SEQUENTIAL_MODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_MEAS_STATUS_2<sp/><sp/><sp/><sp/>UINT8_C(0x3f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_REG_MEAS_INDEX_2<sp/><sp/><sp/><sp/><sp/>UINT8_C(0x40)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_CHIP_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x61)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_AQI_TEMP_CORR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-3)<sp/></highlight><highlight class="comment">//<sp/>Calibration<sp/>offset<sp/>-<sp/>calibrate<sp/>yourself<sp/>the<sp/>temp<sp/>reading<sp/>--&gt;<sp/>humidity<sp/>will<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>automatically<sp/>adjusted<sp/>using<sp/>the<sp/>August-Roche-Magnus<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>http://bmcnoldy.rsmas.miami.edu/Humidity.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_DATA_POLL_TIMEOUT_MS<sp/>UINT16_C(250)<sp/></highlight><highlight class="comment">//<sp/>?<sp/>see<sp/>datasheet<sp/>tables<sp/>13<sp/>and<sp/>14,<sp/>standby-time<sp/>could<sp/>be<sp/>2-seconds<sp/>(2000ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_DATA_READY_DELAY_MS<sp/><sp/>UINT16_C(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/>UINT16_C(25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/>UINT16_C(25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_CMD_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BME680_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_TIMEOUT_CHECK(start,<sp/>len)<sp/>((uint64_t)(esp_timer_get_time()<sp/>-<sp/>(start))<sp/>&gt;=<sp/>(len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bme680&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_i2c_read_from(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;bme680_i2c_read_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_i2c_read_word_from(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;bme680_i2c_read_word_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>*word<sp/>=<sp/>(uint16_t)rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_i2c_read_byte_from(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>bit8_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;bme680_i2c_read_byte_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>rx[0];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_i2c_write_byte_to(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit16_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bme680_calculate_dewpoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temperature<sp/>&gt;<sp/>80.0f<sp/>||<sp/>temperature<sp/>&lt;<sp/>-40.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(humidity<sp/>&gt;<sp/>100.0f<sp/>||<sp/>humidity<sp/>&lt;<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>dew-point<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>H<sp/>=<sp/>(log10f(humidity)-2.0f)/0.4343f<sp/>+<sp/>(17.62f*temperature)/(243.12f+temperature);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>243.12f*H/(17.62f-H);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bme680_compensate_temperature(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>adc_temperature)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>var1<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>((((float)adc_temperature<sp/>/<sp/>16384.0f)<sp/>-<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T1<sp/>/<sp/>1024.0f))<sp/>*<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T2));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>var2<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((((float)adc_temperature<sp/>/<sp/>131072.0f)<sp/>-<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T1<sp/>/<sp/>8192.0f))<sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((float)adc_temperature<sp/>/<sp/>131072.0f)<sp/>-<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T1<sp/>/<sp/>8192.0f)))<sp/>*<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T3<sp/>*<sp/>16.0f));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>t_fine<sp/>value*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;temperature_fine<sp/>=<sp/>(var1<sp/>+<sp/>var2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compensated<sp/>temperature<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;temperature_fine)<sp/>/<sp/>5120.0f);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bme680_compensate_humidity(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>adc_humidity)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compensated<sp/>temperature<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp_comp<sp/>=<sp/>((handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;temperature_fine)<sp/>/<sp/>5120.0f);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>(float)((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)adc_humidity)<sp/>-</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H1<sp/>*<sp/>16.0f)<sp/>+<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H3<sp/>/<sp/>2.0f)<sp/>*<sp/>temp_comp));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>var1<sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((float)(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H2<sp/>/<sp/>262144.0f)<sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1.0f<sp/>+<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H4<sp/>/<sp/>16384.0f)<sp/>*<sp/>temp_comp)<sp/>+</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H5<sp/>/<sp/>1048576.0f)<sp/>*<sp/>temp_comp<sp/>*<sp/>temp_comp))));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>(float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H6<sp/>/<sp/>16384.0f;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var4<sp/>=<sp/>(float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H7<sp/>/<sp/>2097152.0f;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_hum<sp/>=<sp/>var2<sp/>+<sp/>((var3<sp/>+<sp/>(var4<sp/>*<sp/>temp_comp))<sp/>*<sp/>var2<sp/>*<sp/>var2);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_hum<sp/>&gt;<sp/>100.0f)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>100.0f;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_hum<sp/>&lt;<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_hum;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bme680_compensate_pressure(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>adc_pressure)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;temperature_fine<sp/>/<sp/>2.0f)<sp/>-<sp/>64000.0f);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>var1<sp/>*<sp/>var1<sp/>*<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P6)<sp/>/<sp/>(131072.0f));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var2<sp/>+<sp/>(var1<sp/>*<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P5)<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(var2<sp/>/<sp/>4.0f)<sp/>+<sp/>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P4)<sp/>*<sp/>65536.0f);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P3<sp/>*<sp/>var1<sp/>*<sp/>var1)<sp/>/<sp/>16384.0f)<sp/>+<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P2<sp/>*<sp/>var1))<sp/>/<sp/>524288.0f);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((1.0f<sp/>+<sp/>(var1<sp/>/<sp/>32768.0f))<sp/>*<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P1));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_pres<sp/>=<sp/>(1048576.0f<sp/>-<sp/>((float)adc_pressure));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Avoid<sp/>exception<sp/>caused<sp/>by<sp/>division<sp/>by<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)var1<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>(((calc_pres<sp/>-<sp/>(var2<sp/>/<sp/>4096.0f))<sp/>*<sp/>6250.0f)<sp/>/<sp/>var1);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P9)<sp/>*<sp/>calc_pres<sp/>*<sp/>calc_pres)<sp/>/<sp/>2147483648.0f;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>calc_pres<sp/>*<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P8)<sp/>/<sp/>32768.0f);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>((calc_pres<sp/>/<sp/>256.0f)<sp/>*<sp/>(calc_pres<sp/>/<sp/>256.0f)<sp/>*<sp/>(calc_pres<sp/>/<sp/>256.0f)<sp/>*<sp/>(handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P10<sp/>/<sp/>131072.0f));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>(calc_pres<sp/>+<sp/>(var1<sp/>+<sp/>var2<sp/>+<sp/>var3<sp/>+<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P7<sp/>*<sp/>128.0f))<sp/>/<sp/>16.0f);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_pres;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bme680_compensate_gas_resistance(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>adc_gas_res,<sp/>uint8_t<sp/>gas_range)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lookup_k1_range[16]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f,<sp/>1.0f,<sp/>1.0f,<sp/>1.0f,<sp/>1.0f,<sp/>0.99f,<sp/>1.0f,<sp/>0.992f,<sp/>1.0f,<sp/>1.0f,<sp/>0.998f,<sp/>0.995f,<sp/>1.0f,<sp/>0.99f,<sp/>1.0f,<sp/>1.0f</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lookup_k2_range[16]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8000000.0f,<sp/>4000000.0f,<sp/>2000000.0f,<sp/>1000000.0f,<sp/>499500.4995f,<sp/>248262.1648f,<sp/>125000.0f,<sp/>63004.03226f,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>31281.28128f,<sp/>15625.0f,<sp/>7812.5f,<sp/>3906.25f,<sp/>1953.125f,<sp/>976.5625f,<sp/>488.28125f,<sp/>244.140625f</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>(1340.0f<sp/>+<sp/>5.0f<sp/>*<sp/>handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;range_switching_error)<sp/>*<sp/>lookup_k1_range[gas_range];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var1<sp/>*<sp/>lookup_k2_range[gas_range]<sp/>/<sp/>(adc_gas_res<sp/>-<sp/>512.0f<sp/>+<sp/>var1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>bme680_compensate_heater_resistance(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>temperature)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cap<sp/>temperature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temperature<sp/>&gt;<sp/>400)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temperature<sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>(((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_G1<sp/>/<sp/>(16.0f))<sp/>+<sp/>49.0f);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>((((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_G2<sp/>/<sp/>(32768.0f))<sp/>*<sp/>(0.0005f))<sp/>+<sp/>0.00235f);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>((float)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_G3<sp/>/<sp/>(1024.0f));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var4<sp/>=<sp/>(var1<sp/>*<sp/>(1.0f<sp/>+<sp/>(var2<sp/>*<sp/>(float)temperature)));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var5<sp/>=<sp/>(var4<sp/>+<sp/>(var3<sp/>*<sp/>(float)handle-&gt;ambient_temperature));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>res_heat<sp/>=</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)(3.4f<sp/>*</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((var5<sp/>*<sp/>(4<sp/>/<sp/>(4<sp/>+<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;res_heat_range))<sp/>*</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>/<sp/>(1<sp/>+<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;res_heat_val<sp/>*<sp/>0.002f))))<sp/>-</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25.0f));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res_heat;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>bme680_compute_gas_wait(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>factor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>durval;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>dura<sp/>=<sp/>duration;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dura<sp/>&gt;=<sp/>0xfc0)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>durval<sp/>=<sp/>0xff;<sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dura<sp/>&gt;<sp/>0x3F)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dura<sp/>=<sp/>dura<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>durval<sp/>=<sp/>(uint8_t)(dura<sp/>+<sp/>(factor<sp/>*<sp/>64));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>durval;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>bme680_compute_heater_shared_duration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>factor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>heatdurval;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>dura<sp/>=<sp/>duration;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dura<sp/>&gt;=<sp/>0x783)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heatdurval<sp/>=<sp/>0xff;<sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>size<sp/>of<sp/>0.477ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dura<sp/>=<sp/>(uint16_t)(((uint32_t)dura<sp/>*<sp/>1000)<sp/>/<sp/>477);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dura<sp/>&gt;<sp/>0x3F)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dura<sp/>=<sp/>dura<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heatdurval<sp/>=<sp/>(uint8_t)(dura<sp/>+<sp/>(factor<sp/>*<sp/>64));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heatdurval;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>bme680_get_measurement_duration(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>os_to_meas_cycles[6]<sp/>=<sp/>{<sp/>0,<sp/>1,<sp/>2,<sp/>4,<sp/>8,<sp/>16<sp/>};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>meas_dur<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>in<sp/>us<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>meas_cycles;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((handle)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_cycles<sp/>=<sp/>os_to_meas_cycles[handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.temperature_oversampling];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_cycles<sp/>+=<sp/>os_to_meas_cycles[handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.pressure_oversampling];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_cycles<sp/>+=<sp/>os_to_meas_cycles[handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.humidity_oversampling];</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TPH<sp/>measurement<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_dur<sp/>=<sp/>meas_cycles<sp/>*<sp/>(uint32_t)(1963);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_dur<sp/>+=<sp/>(uint32_t)(477<sp/>*<sp/>4);<sp/></highlight><highlight class="comment">/*<sp/>TPH<sp/>switching<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_dur<sp/>+=<sp/>(uint32_t)(477<sp/>*<sp/>5);<sp/></highlight><highlight class="comment">/*<sp/>Gas<sp/>measurement<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a43ecd923f632053e1120e76b712eb2fa" kindref="member">power_mode</ref><sp/>!=<sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6aec4ae7ef1889a0be7d0e6fd06d32b9de" kindref="member">BME680_POWER_MODE_PARALLEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meas_dur<sp/>+=<sp/>(uint32_t)(1000);<sp/></highlight><highlight class="comment">/*<sp/>Wake<sp/>up<sp/>duration<sp/>of<sp/>1ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>meas_dur;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_get_cal_factors(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bme680<sp/>attempt<sp/>to<sp/>request<sp/>T1-T3<sp/>calibration<sp/>values<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0xe9,<sp/>&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T1)<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x8a,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T2)<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x8c,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_T3)<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bme680<sp/>attempt<sp/>to<sp/>request<sp/>H1-H7<sp/>calibration<sp/>values<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_from(handle,<sp/>0xe2,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE)<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H1<sp/>=<sp/>(uint16_t)(((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(rx[0]<sp/>&amp;<sp/>0x0F));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_from(handle,<sp/>0xe1,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE)<sp/>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H2<sp/>=<sp/>(uint16_t)(((uint16_t)rx[0]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(rx[1]<sp/>&gt;&gt;<sp/>4));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xe4,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H3)<sp/>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xe5,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H4)<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xe6,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H5)<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xe7,<sp/>&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H6)<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xe8,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_H7)<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bme680<sp/>attempt<sp/>to<sp/>request<sp/>P1-P10<sp/>calibration<sp/>values<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x8e,<sp/>&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P1)<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x90,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P2)<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x92,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P3)<sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x94,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P4)<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x96,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P5)<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x99,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P6)<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x98,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P7)<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x9c,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P8)<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0x9e,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P9)<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xa0,<sp/>&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_P10)<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bme680<sp/>attempt<sp/>to<sp/>request<sp/>G1-G3<sp/>calibration<sp/>values<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xed,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_G1)<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_word_from(handle,<sp/>0xeb,<sp/>(uint16_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_G2)<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0xee,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;par_G3)<sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bme680<sp/>attempt<sp/>to<sp/>request<sp/>gas<sp/>range<sp/>and<sp/>switching<sp/>error<sp/>values<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x02,<sp/>&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;res_heat_range)<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;res_heat_range<sp/>=<sp/>(handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;res_heat_range<sp/>&amp;<sp/>0x30)<sp/>/<sp/>16;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x00,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;res_heat_val)<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>bme680_i2c_read_byte_from(handle,<sp/>0x04,<sp/>(uint8_t<sp/>*)&amp;handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;range_switching_error)<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;range_switching_error<sp/>=<sp/>(handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>-&gt;range_switching_error<sp/>&amp;<sp/>0xf0)<sp/>/<sp/>16;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;Calibration<sp/>data<sp/>received:&quot;);</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_T1=%u&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_T1);</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_T2=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_T2);</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_T3=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_T3);</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P1=%u&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P1);</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P2=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P2);</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P3=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P3);</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P4=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P4);</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P5=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P5);</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P6=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P6);</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P7=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P7);</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P8=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P8);</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P9=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P9);</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/>&quot;par_P10=%d&quot;,<sp/>handle-&gt;dev_cal_factors-&gt;par_P10);</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_setup_heater_profiles(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga457964ffe1aeb9433d63ed769051c6d6" kindref="member">bme680_heater_setpoints_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>heater_setpoint)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>shared_dur;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rh_reg_addr[BME680_HEATER_PROFILE_SIZE]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rh_reg_data[BME680_HEATER_PROFILE_SIZE]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gw_reg_addr[BME680_HEATER_PROFILE_SIZE]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gw_reg_data[BME680_HEATER_PROFILE_SIZE]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a43ecd923f632053e1120e76b712eb2fa" kindref="member">power_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6a5c62dd38dc60b06037d60c9037582874" kindref="member">BME680_POWER_MODE_FORCED</ref>:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rh_reg_addr[0]<sp/>=<sp/><ref refid="bme680_8c_1af34fa240897eac46b20995e226b00fb3" kindref="member">BME680_REG_RES_HEAT</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rh_reg_data[0]<sp/>=<sp/>bme680_compensate_heater_resistance(handle,<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a62c79fac486cde538921ca50ced01127" kindref="member">heater_temperature</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gw_reg_addr[0]<sp/>=<sp/><ref refid="bme680_8c_1a8c68dd42ccaee27e0eea9b3b2347226f" kindref="member">BME680_REG_GAS_WAIT</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gw_reg_data[0]<sp/>=<sp/>bme680_compute_gas_wait(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a0ab2c5eea7e0868d17b6c8c3a14cd110" kindref="member">heater_duration</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*heater_setpoint)<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_len<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref>;;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6ac967972c848d852ac3fa8d84b4e18f1d" kindref="member">BME680_POWER_MODE_SEQUENTIAL</ref>:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>==<sp/>0)<sp/>||<sp/>(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>&gt;<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;heater<sp/>duration<sp/>or<sp/>temperature<sp/>profile<sp/>are<sp/>empty<sp/>and<sp/>cannot<sp/>be<sp/>larger<sp/>than<sp/>10,<sp/>setup<sp/>heater<sp/>setpoints<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rh_reg_addr[i]<sp/>=<sp/><ref refid="bme680_8c_1af34fa240897eac46b20995e226b00fb3" kindref="member">BME680_REG_RES_HEAT</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rh_reg_data[i]<sp/>=<sp/>bme680_compensate_heater_resistance(handle,<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1ad630f45b4b68dd68cee2a36ae2db5552" kindref="member">heater_temperature_profile</ref>[i]);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gw_reg_addr[i]<sp/>=<sp/><ref refid="bme680_8c_1a8c68dd42ccaee27e0eea9b3b2347226f" kindref="member">BME680_REG_GAS_WAIT</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gw_reg_data[i]<sp/>=<sp/>bme680_compute_gas_wait(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1af6c3e2adb91a1e60dadae66ee9218303" kindref="member">heater_duration_profile</ref>[i]);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*heater_setpoint)<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_len<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6aec4ae7ef1889a0be7d0e6fd06d32b9de" kindref="member">BME680_POWER_MODE_PARALLEL</ref>:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>==<sp/>0)<sp/>||<sp/>(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>&gt;<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;heater<sp/>duration<sp/>or<sp/>temperature<sp/>profile<sp/>are<sp/>empty<sp/>and<sp/>cannot<sp/>be<sp/>larger<sp/>than<sp/>10,<sp/>setup<sp/>heater<sp/>setpoints<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a10ae592277d68fbfb9c4cc1661ba425f" kindref="member">heater_shared_duration</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;heater<sp/>shared<sp/>duration<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0,<sp/>setup<sp/>heater<sp/>setpoints<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rh_reg_addr[i]<sp/>=<sp/><ref refid="bme680_8c_1af34fa240897eac46b20995e226b00fb3" kindref="member">BME680_REG_RES_HEAT</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rh_reg_data[i]<sp/>=<sp/>bme680_compensate_heater_resistance(handle,<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1ad630f45b4b68dd68cee2a36ae2db5552" kindref="member">heater_temperature_profile</ref>[i]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gw_reg_addr[i]<sp/>=<sp/><ref refid="bme680_8c_1a8c68dd42ccaee27e0eea9b3b2347226f" kindref="member">BME680_REG_GAS_WAIT</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gw_reg_data[i]<sp/>=<sp/>(uint8_t)handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1af6c3e2adb91a1e60dadae66ee9218303" kindref="member">heater_duration_profile</ref>[i];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*heater_setpoint)<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_len<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a2573355afe4c6bca8bfa99a4dfb7b0ea" kindref="member">heater_profile_size</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_dur<sp/>=<sp/>bme680_compute_heater_shared_duration(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a10ae592277d68fbfb9c4cc1661ba425f" kindref="member">heater_shared_duration</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_SHD_HEATR_DUR,<sp/>shared_dur),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>shared<sp/>heater<sp/>duration,<sp/>setup<sp/>heater<sp/>setpoints<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6a6b69b7e506c1ffb45148d3fe8f077ab3" kindref="member">BME680_POWER_MODE_SLEEP</ref>:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>resistance<sp/>heater<sp/>and<sp/>gas<sp/>wait<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>write_len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(bme680_i2c_write_byte_to(handle,<sp/>rh_reg_addr[i],<sp/>rh_reg_data[i]),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>resistance<sp/>heater<sp/>profile,<sp/>setup<sp/>heater<sp/>setpoints<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(bme680_i2c_write_byte_to(handle,<sp/>gw_reg_addr[i],<sp/>gw_reg_data[i]),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>gas<sp/>wait<sp/>profile,<sp/>setup<sp/>heater<sp/>setpoints<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;bme680_setup_heater_profiles:<sp/>rh_reg_data<sp/>%d<sp/>|<sp/>gw_reg_data<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>rh_reg_data[i],<sp/>gw_reg_data[i]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_setup_heater(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga457964ffe1aeb9433d63ed769051c6d6" kindref="member">bme680_heater_setpoints_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>heater_setpoint;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_gas0_register_t<sp/>ctrl_gas0_reg;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_gas1_register_t<sp/>ctrl_gas1_reg;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(bme680_setup_heater_profiles(handle,<sp/>&amp;heater_setpoint),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>heater<sp/>profiles<sp/>for<sp/>setup<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>gas<sp/>0<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gab445e7b178ff65ebd6a729c3df48f762" kindref="member">bme680_get_control_gas0_register</ref>(handle,<sp/>&amp;ctrl_gas0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>gas<sp/>0<sp/>register<sp/>for<sp/>setup<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>gas<sp/>1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga4286bdbfb0299500c38524fb574727b9" kindref="member">bme680_get_control_gas1_register</ref>(handle,<sp/>&amp;ctrl_gas1_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>gas<sp/>1<sp/>register<sp/>for<sp/>setup<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>gas<sp/>0<sp/>and<sp/>1<sp/>from<sp/>configuration<sp/>params<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a36fdc8559e1cbfa31f5bb5243ae5f56d" kindref="member">gas_enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl_gas0_reg.bits.heater_disabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl_gas1_reg.bits.gas_conversion_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl_gas1_reg.bits.heater_setpoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>heater_setpoint;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl_gas1_reg.bits.gas_conversion_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl_gas0_reg.bits.heater_disabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>gas<sp/>0<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga6b1f88599ddbe2aec815577d99ceaccf" kindref="member">bme680_set_control_gas0_register</ref>(handle,<sp/>ctrl_gas0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>gas<sp/>0<sp/>register<sp/>for<sp/>setup<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>gas<sp/>1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gac47fa145af66cf63719d286ad72f07e4" kindref="member">bme680_set_control_gas1_register</ref>(handle,<sp/>ctrl_gas1_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>gas<sp/>1<sp/>register<sp/>for<sp/>setup<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>bme680_setup(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_humidity_register_t<sp/><sp/><sp/><sp/>ctrl_humi_reg;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_config_register_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_reg;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ambient<sp/>temperature<sp/>of<sp/>sensor<sp/>to<sp/>default<sp/>value<sp/>(25<sp/>degree<sp/>C)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;ambient_temperature<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>calibration<sp/>factors<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(bme680_get_cal_factors(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>calibration<sp/>factors<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>variant<sp/>identifier<sp/>register<sp/>from<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga9645bd4e638ebc98c2ecf61195de5776" kindref="member">bme680_get_variant_id_register</ref>(handle,<sp/>&amp;handle-&gt;variant_id),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>variant<sp/>identifier<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>humidity<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gac9241adfbbf7d21531e5c997f704a348" kindref="member">bme680_get_control_humidity_register</ref>(handle,<sp/>&amp;ctrl_humi_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>humidity<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga5d99d3bd2ca005930e5b735e1d0049d2" kindref="member">bme680_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>configuration<sp/>register<sp/>from<sp/>configuration<sp/>params<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.iir_filter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.iir_filter;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.spi_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>measurement<sp/>register<sp/>from<sp/>configuration<sp/>params<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_meas_reg.bits.power_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a43ecd923f632053e1120e76b712eb2fa" kindref="member">power_mode</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_meas_reg.bits.temperature_oversampling<sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.temperature_oversampling;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_meas_reg.bits.pressure_oversampling<sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.pressure_oversampling;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>humidity<sp/>register<sp/>from<sp/>configuration<sp/>params<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_humi_reg.bits.humidity_oversampling<sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.humidity_oversampling;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_humi_reg.bits.spi_irq_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>humidity<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gafa9c1fab99a1cb32bb82203888173bca" kindref="member">bme680_set_control_humidity_register</ref>(handle,<sp/>ctrl_humi_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>humidity<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga0e7ab74cc925aee01a695b997b7ea162" kindref="member">bme680_set_control_measurement_register</ref>(handle,<sp/>ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga244e6a799e41182cbb51d26989edcdf1" kindref="member">bme680_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>for<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bme680_compute_iaq(<ref refid="group__drivers_1ga3238b870a3bc18b1c513b52ebb74e125" kindref="member">bme680_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adjusted_temp<sp/>=<sp/>data-&gt;<ref refid="structbme680__data__s_1a5cbb9c964da67812cd01b081c2fc6cd1" kindref="member">air_temperature</ref><sp/>+<sp/>BME680_AQI_TEMP_CORR;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>August-Roche-Magnus<sp/>approximation<sp/>(http://bmcnoldy.rsmas.miami.edu/Humidity.html)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adjusted_humi<sp/>=<sp/>100<sp/>*<sp/>(exp((17.625<sp/>*<sp/>data-&gt;<ref refid="structbme680__data__s_1a708b12e594d183ba115f10e8aca0665b" kindref="member">dewpoint_temperature</ref>)<sp/>/<sp/>(243.04<sp/>+<sp/>data-&gt;<ref refid="structbme680__data__s_1a708b12e594d183ba115f10e8aca0665b" kindref="member">dewpoint_temperature</ref>))<sp/>/<sp/>exp((17.625<sp/>*<sp/>adjusted_temp)<sp/>/<sp/>(243.04<sp/>+<sp/>adjusted_temp)));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>gas<sp/>=<sp/>data-&gt;<ref refid="structbme680__data__s_1ac30cebc4cd86ec13a739515a74105b50" kindref="member">gas_resistance</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>humidity<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjusted_humi<sp/>&gt;=<sp/>40<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;=<sp/>60)<sp/>data-&gt;humidity_score<sp/>=<sp/>6.5;<sp/><sp/></highlight><highlight class="comment">//ideal<sp/>condition,<sp/>full<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((adjusted_humi<sp/>&gt;=<sp/>30<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;<sp/>40)<sp/>||<sp/>(adjusted_humi<sp/>&gt;<sp/>60<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;=<sp/>70))<sp/>data-&gt;humidity_score<sp/>=<sp/>5.2;<sp/><sp/></highlight><highlight class="comment">//20%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((adjusted_humi<sp/>&gt;=<sp/>20<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;<sp/>30)<sp/>||<sp/>(adjusted_humi<sp/>&gt;<sp/>70<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;=<sp/>80))<sp/>data-&gt;humidity_score<sp/>=<sp/>3.9;<sp/><sp/></highlight><highlight class="comment">//40%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((adjusted_humi<sp/>&gt;=<sp/>10<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;<sp/>20)<sp/>||<sp/>(adjusted_humi<sp/>&gt;<sp/>80<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&lt;=<sp/>90))<sp/>data-&gt;humidity_score<sp/>=<sp/>2.6;<sp/><sp/></highlight><highlight class="comment">//60%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjusted_humi<sp/>&lt;<sp/>10<sp/>&amp;&amp;<sp/>adjusted_humi<sp/>&gt;<sp/>90)<sp/>data-&gt;humidity_score<sp/>=<sp/>1.3;<sp/><sp/></highlight><highlight class="comment">//80%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>temperature<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare_temp<sp/>=<sp/>adjusted_temp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>to<sp/>full<sp/>degree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_temp<sp/>&gt;=<sp/>18<sp/>&amp;&amp;<sp/>compare_temp<sp/>&lt;=<sp/>22)<sp/>data-&gt;temperature_score<sp/>=<sp/>6.5;<sp/><sp/></highlight><highlight class="comment">//ideal<sp/>condition,<sp/>full<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_temp<sp/>==<sp/>17<sp/>||<sp/>compare_temp<sp/>==<sp/>23)<sp/>data-&gt;temperature_score<sp/>=<sp/>5.2;<sp/><sp/></highlight><highlight class="comment">//20%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_temp<sp/>==<sp/>16<sp/>||<sp/>compare_temp<sp/>==<sp/>24)<sp/>data-&gt;temperature_score<sp/>=<sp/>3.9;<sp/><sp/></highlight><highlight class="comment">//40%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_temp<sp/>==<sp/>15<sp/>||<sp/>compare_temp<sp/>==<sp/>25)<sp/>data-&gt;temperature_score<sp/>=<sp/>2.6;<sp/><sp/></highlight><highlight class="comment">//60%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_temp<sp/>==<sp/>14<sp/>||<sp/>compare_temp<sp/>==<sp/>26)<sp/>data-&gt;temperature_score<sp/>=<sp/>1.3;<sp/><sp/></highlight><highlight class="comment">//80%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_temp<sp/><sp/>&lt;<sp/>14<sp/>||<sp/>compare_temp<sp/><sp/>&gt;<sp/>26)<sp/>data-&gt;temperature_score<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//100%<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>gas<sp/>score<sp/>on<sp/>resistance<sp/>values<sp/>-<sp/>best<sp/>practices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&gt;=<sp/>430000)<sp/>data-&gt;gas_score<sp/>=<sp/>52;<sp/><sp/></highlight><highlight class="comment">//ideal<sp/>condition,<sp/>full<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&gt;=<sp/>210000<sp/>&amp;&amp;<sp/>gas<sp/>&lt;<sp/>430000)<sp/>data-&gt;gas_score<sp/>=<sp/>43;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&gt;=<sp/>100000<sp/>&amp;&amp;<sp/>gas<sp/>&lt;<sp/>210000)<sp/>data-&gt;gas_score<sp/>=<sp/>35;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&gt;=<sp/><sp/>55000<sp/>&amp;&amp;<sp/>gas<sp/>&lt;<sp/>100000)<sp/>data-&gt;gas_score<sp/>=<sp/>26;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&gt;=<sp/><sp/>27000<sp/>&amp;&amp;<sp/>gas<sp/>&lt;<sp/><sp/>55000)<sp/>data-&gt;gas_score<sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&gt;=<sp/><sp/>13500<sp/>&amp;&amp;<sp/>gas<sp/>&gt;<sp/><sp/><sp/>9000)<sp/>data-&gt;gas_score<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gas<sp/>&lt;<sp/>9000)<sp/>data-&gt;gas_score<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>iaq<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1acebbf28041a5672d184c08d6dd285509" kindref="member">iaq_score</ref><sp/>=<sp/>data-&gt;humidity_score<sp/>+<sp/>data-&gt;temperature_score<sp/>+<sp/>data-&gt;gas_score;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga1428013d7162e45e0aa98d692ebe6e6f" kindref="member">bme680_get_chip_id_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_ID,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>chip<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga9645bd4e638ebc98c2ecf61195de5776" kindref="member">bme680_get_variant_id_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_VARIANT_ID,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>variant<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga6c954f3140a0b05f025691007165c466" kindref="member">bme680_get_status0_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_status0_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/><ref refid="bme680_8c_1a7d3657c7ccdd9061d9b9d6aea25505c1" kindref="member">BME680_REG_STATUS0</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gac36e4d6c1442349c26e027f8bc0ed54e" kindref="member">bme680_get_gas_lsb_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_gas_lsb_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_GAS_R_LSB,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>gas<sp/>lsb<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5bfb7440dc318d739486c5632d789e13" kindref="member">bme680_set_gas_lsb_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bme680_gas_lsb_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_GAS_R_LSB,<sp/>reg.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>measurement<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_control_measurement_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_CTRL_MEAS,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga0e7ab74cc925aee01a695b997b7ea162" kindref="member">bme680_set_control_measurement_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bme680_control_measurement_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_CTRL_MEAS,<sp/>reg.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>measurement<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gac9241adfbbf7d21531e5c997f704a348" kindref="member">bme680_get_control_humidity_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_control_humidity_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_CTRL_HUMI,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>humidity<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafa9c1fab99a1cb32bb82203888173bca" kindref="member">bme680_set_control_humidity_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bme680_control_humidity_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_humidity_register_t<sp/>ctrl_hum<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_hum.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_hum.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_CTRL_HUMI,<sp/>ctrl_hum.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>humidity<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gab445e7b178ff65ebd6a729c3df48f762" kindref="member">bme680_get_control_gas0_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_control_gas0_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_CTRL_GAS0,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>gas<sp/>0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga6b1f88599ddbe2aec815577d99ceaccf" kindref="member">bme680_set_control_gas0_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bme680_control_gas0_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_gas0_register_t<sp/>gas0<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>gas0.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>gas0.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_CTRL_GAS0,<sp/>gas0.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>gas<sp/>0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga4286bdbfb0299500c38524fb574727b9" kindref="member">bme680_get_control_gas1_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_control_gas1_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_CTRL_GAS1,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>gas<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gac47fa145af66cf63719d286ad72f07e4" kindref="member">bme680_set_control_gas1_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bme680_control_gas1_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_gas1_register_t<sp/>gas1<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>gas1.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_CTRL_GAS1,<sp/>gas1.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>gas<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5d99d3bd2ca005930e5b735e1d0049d2" kindref="member">bme680_get_configuration_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>bme680_config_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_read_byte_from(handle,<sp/>BME680_REG_CONFIG,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga244e6a799e41182cbb51d26989edcdf1" kindref="member">bme680_set_configuration_register</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bme680_config_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_config_register_t<sp/>config<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/>BME680_REG_CONFIG,<sp/>config.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga634c8a6901632299925de54d36aa85c4" kindref="member">bme680_init</ref>(i2c_master_bus_handle_t<sp/>master_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga754b18e9f8c3f77d4c2738fa59403150" kindref="member">bme680_config_t</ref><sp/>*bme680_config,<sp/><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>*bme680_handle)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>master_handle<sp/>&amp;&amp;<sp/>bme680_config<sp/>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_POWERUP_DELAY_MS));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>exists<sp/>on<sp/>the<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>i2c_master_probe(master_handle,<sp/>bme680_config-&gt;<ref refid="structbme680__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ret,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>does<sp/>not<sp/>exist<sp/>at<sp/>address<sp/>0x%02x,<sp/>bmp280<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>bme680_config-&gt;<ref refid="structbme680__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c0<sp/>bmp280<sp/>device<sp/>for<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>calibration<sp/>factors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref><sp/>=<sp/>(<ref refid="group__drivers_1ga1fcb18f07741a3e8b640e2d3ba059f12" kindref="member">bme680_cal_factors_t</ref>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__drivers_1ga1fcb18f07741a3e8b640e2d3ba059f12" kindref="member">bme680_cal_factors_t</ref>));</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle-&gt;<ref refid="structbme680__context__t_1aee1baf73a44df48ffc18338303db75f4" kindref="member">dev_cal_factors</ref>,<sp/>ESP_ERR_NO_MEM,<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c<sp/>bmp280<sp/>device<sp/>calibration<sp/>factors<sp/>for<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref><sp/>=<sp/>*bme680_config;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>i2c<sp/>device<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i2c_device_config_t<sp/>i2c_dev_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dev_addr_length<sp/><sp/><sp/><sp/>=<sp/>I2C_ADDR_BIT_LEN_7,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device_address<sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scl_speed_hz<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a770b3ab4bba557baec88287d86832a34" kindref="member">i2c_clock_speed</ref>,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(i2c_master_bus_add_device(master_handle,<sp/>&amp;i2c_dev_conf,<sp/>&amp;out_handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c0<sp/>new<sp/>bus<sp/>failed<sp/>for<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>and<sp/>validate<sp/>device<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga1428013d7162e45e0aa98d692ebe6e6f" kindref="member">bme680_get_chip_id_register</ref>(out_handle,<sp/>&amp;out_handle-&gt;<ref refid="structbme680__context__t_1a88e300db221e7a0382f2a4c289b9557d" kindref="member">chip_id</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>chip<sp/>identifier<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out_handle-&gt;<ref refid="structbme680__context__t_1a88e300db221e7a0382f2a4c289b9557d" kindref="member">chip_id</ref><sp/>!=<sp/>BME680_CHIP_ID)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_VERSION,<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;detected<sp/>an<sp/>invalid<sp/>chip<sp/>type<sp/>for<sp/>init,<sp/>got:<sp/>%02x&quot;</highlight><highlight class="normal">,<sp/>out_handle-&gt;<ref refid="structbme680__context__t_1a88e300db221e7a0382f2a4c289b9557d" kindref="member">chip_id</ref>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>reset<sp/>the<sp/>device<sp/>and<sp/>initialize<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga606c1061cf4c410083cd645dd379f19a" kindref="member">bme680_reset</ref>(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;soft-reset<sp/>and<sp/>initialize<sp/>registers<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>*bme680_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_APPSTART_DELAY_MS));</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>err_handle:</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2c_master_bus_rm_device(out_handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__drivers_1ga1035dfc4e91ae0606e10d9b6298ff96f" kindref="member">bme680_air_quality_to_string</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>iaq_score)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(iaq_score<sp/>&lt;<sp/>25)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Hazardous&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iaq_score<sp/>&gt;=<sp/>25<sp/>&amp;&amp;<sp/>iaq_score<sp/>&lt;=<sp/>38)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unhealthy&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iaq_score<sp/><sp/>&gt;<sp/>38<sp/>&amp;&amp;<sp/>iaq_score<sp/>&lt;=<sp/>51)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Moderate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iaq_score<sp/><sp/>&gt;<sp/>51<sp/>&amp;&amp;<sp/>iaq_score<sp/>&lt;=<sp/>60)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Good&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iaq_score<sp/><sp/>&gt;<sp/>60<sp/>&amp;&amp;<sp/>iaq_score<sp/>&lt;=<sp/>65)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Excellent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga36125455be024323f83d41ebf4a261de" kindref="member">bme680_get_adc_signals</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga9eb84555a3dc9ced6a91394e16736f96" kindref="member">bme680_adc_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gas_index<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_gas_r;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_press;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_humi;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_temp;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>bit104_uint8_buffer_t<sp/>rx;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_status0_register_t<sp/>status0_reg;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>&amp;&amp;<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trigger<sp/>measurement<sp/>when<sp/>in<sp/>forced<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structbme680__context__t_1aa4e93061bf25a3b8212915158f959fab" kindref="member">dev_config</ref>.<ref refid="structbme680__config__s_1a43ecd923f632053e1120e76b712eb2fa" kindref="member">power_mode</ref><sp/>==<sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6a5c62dd38dc60b06037d60c9037582874" kindref="member">BME680_POWER_MODE_FORCED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga78b2866a9e56e873ec90b39049196fa7" kindref="member">bme680_set_power_mode</ref>(handle,<sp/><ref refid="group__drivers_1gga036c0d22ef7602a37e6acc30754c44d6a5c62dd38dc60b06037d60c9037582874" kindref="member">BME680_POWER_MODE_FORCED</ref>);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>check<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_GOTO_ON_ERROR(<sp/>bme680_get_data_status(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/>&quot;data<sp/>ready<sp/>for<sp/>get<sp/>adc<sp/>signals<sp/>failed.&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga6c954f3140a0b05f025691007165c466" kindref="member">bme680_get_status0_register</ref>(handle,<sp/>&amp;status0_reg),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;status<sp/>0<sp/>register<sp/>for<sp/>get<sp/>adc<sp/>signals<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/>=<sp/>status0_reg.bits.new_data;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gas_index<sp/>=<sp/>status0_reg.bits.gas_measurement_index;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_DATA_READY_DELAY_MS));</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>BME680_DATA_POLL_TIMEOUT_MS<sp/>*<sp/>1000))</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>read<sp/>in<sp/>one<sp/>sequence<sp/>to<sp/>ensure<sp/>they<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>bme680_i2c_read_from(handle,<sp/>BME680_REG_PRESS,<sp/>rx,<sp/>BIT104_UINT8_BUFFER_SIZE),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>adc<sp/>data<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>instantiate<sp/>gas<sp/>lsb<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_gas_lsb_register_t<sp/>gas_lsb_reg<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>rx[12]<sp/>};</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>concat<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_press<sp/>=<sp/>((uint32_t)rx[0]<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>((uint32_t)rx[1]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>((uint32_t)rx[2]<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_temp<sp/><sp/>=<sp/>((uint32_t)rx[3]<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>((uint32_t)rx[4]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>((uint32_t)rx[5]<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_humi<sp/><sp/>=<sp/>((uint16_t)rx[6]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(uint16_t)rx[7];</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_gas_r<sp/>=<sp/>((uint16_t)rx[11]<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((uint16_t)rx[12]<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>humidity:<sp/><sp/><sp/><sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIu16,<sp/>adc_humi);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>temperature:<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIu32,<sp/>adc_temp);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>pressure:<sp/><sp/><sp/><sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIu32,<sp/>adc_press);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(TAG,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>gas:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIu16,<sp/>adc_gas_r);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;temperature<sp/><sp/><sp/><sp/>=<sp/>adc_temp;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;humidity<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_humi;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;pressure<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_press;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;gas<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_gas_r;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;gas_index<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gas_index;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;gas_range<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gas_lsb_reg.bits.gas_range;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;heater_stable<sp/><sp/>=<sp/>gas_lsb_reg.bits.heater_stable;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;gas_valid<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>gas_lsb_reg.bits.gas_valid;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga110830ca8c0c7f369b8e9e694d183c82" kindref="member">bme680_get_data</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga3238b870a3bc18b1c513b52ebb74e125" kindref="member">bme680_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga9eb84555a3dc9ced6a91394e16736f96" kindref="member">bme680_adc_data_t</ref><sp/>adc_data;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>&amp;&amp;<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>adc<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga36125455be024323f83d41ebf4a261de" kindref="member">bme680_get_adc_signals</ref>(handle,<sp/>&amp;adc_data),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>adc<sp/>signals<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1a5cbb9c964da67812cd01b081c2fc6cd1" kindref="member">air_temperature</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bme680_compensate_temperature(handle,<sp/>adc_data.temperature);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1ad60830bc80efb7e8a11d6fb25518f55b" kindref="member">relative_humidity</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>bme680_compensate_humidity(handle,<sp/>adc_data.humidity);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1a708b12e594d183ba115f10e8aca0665b" kindref="member">dewpoint_temperature</ref><sp/><sp/>=<sp/>bme680_calculate_dewpoint(data-&gt;<ref refid="structbme680__data__s_1a5cbb9c964da67812cd01b081c2fc6cd1" kindref="member">air_temperature</ref>,<sp/>data-&gt;<ref refid="structbme680__data__s_1ad60830bc80efb7e8a11d6fb25518f55b" kindref="member">relative_humidity</ref>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1ad2a540b7fffffcd5581c3d05d94df7f6" kindref="member">barometric_pressure</ref><sp/><sp/><sp/>=<sp/>bme680_compensate_pressure(handle,<sp/>adc_data.pressure);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1ac30cebc4cd86ec13a739515a74105b50" kindref="member">gas_resistance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bme680_compensate_gas_resistance(handle,<sp/>adc_data.gas,<sp/>adc_data.gas_range);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1a87b4540d7cba30cb7f7e184467b34394" kindref="member">gas_range</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_data.gas_range;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1a62791e77eacb0713ac8dd58380b791f4" kindref="member">heater_stable</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_data.heater_stable;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1a806fa5bc30520f84f87b8479ea263e04" kindref="member">gas_valid</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_data.gas_valid;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__data__s_1ac9861af59182939c5f1d292857cc218c" kindref="member">gas_index</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adc_data.gas_index;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>scores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_compute_iaq(data);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga96ab8615b99ad6d0bfb15f2e9674d920" kindref="member">bme680_get_data_status</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_status0_register_t<sp/><sp/><sp/>status0_reg;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>device<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga6c954f3140a0b05f025691007165c466" kindref="member">bme680_get_status0_register</ref>(handle,<sp/>&amp;status0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>(data<sp/>ready<sp/>state)<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status0_reg.bits.new_data;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga3900195ee2d52c50a52336b520ea9862" kindref="member">bme680_get_gas_measurement_index</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_status0_register_t<sp/><sp/><sp/>status0_reg;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>device<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga6c954f3140a0b05f025691007165c466" kindref="member">bme680_get_status0_register</ref>(handle,<sp/>&amp;status0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>(gas<sp/>measurement<sp/>index)<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>gas<sp/>measurement<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>*index<sp/>=<sp/>status0_reg.bits.gas_measurement_index;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga11e221835d68171e4a1500d5210ad2ab" kindref="member">bme680_get_power_mode</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga631c33b35db1e3bcdc9dbeb3732e7e21" kindref="member">bme680_power_modes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>power_mode)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>get<sp/>power<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>power<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>*power_mode<sp/>=<sp/>ctrl_meas_reg.bits.power_mode;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga78b2866a9e56e873ec90b39049196fa7" kindref="member">bme680_set_power_mode</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga631c33b35db1e3bcdc9dbeb3732e7e21" kindref="member">bme680_power_modes_t</ref><sp/>power_mode)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/><sp/><sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>get<sp/>power<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_meas_reg.bits.power_mode<sp/>=<sp/>power_mode;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0e7ab74cc925aee01a695b997b7ea162" kindref="member">bme680_set_control_measurement_register</ref>(handle,<sp/>ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>set<sp/>power<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gacb2dc88ee8756b1d878642755c578e64" kindref="member">bme680_get_pressure_oversampling</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga7b38c1d35a8f7a27af3c264c46f78bbe" kindref="member">bme680_pressure_oversampling_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oversampling)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/><sp/><sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>get<sp/>pressure<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>oversampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>*oversampling<sp/>=<sp/>ctrl_meas_reg.bits.pressure_oversampling;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaeaaa875bf00f30d1a8b3a7d0a56765a3" kindref="member">bme680_set_pressure_oversampling</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga7b38c1d35a8f7a27af3c264c46f78bbe" kindref="member">bme680_pressure_oversampling_t</ref><sp/>oversampling)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/><sp/><sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>get<sp/>pressure<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_meas_reg.bits.pressure_oversampling<sp/>=<sp/>oversampling;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0e7ab74cc925aee01a695b997b7ea162" kindref="member">bme680_set_control_measurement_register</ref>(handle,<sp/>ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>set<sp/>pressure<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad929ae529dd3a1ac96d70bbb57677c03" kindref="member">bme680_get_temperature_oversampling</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga5be0c6fd6abecc9e2e055f27ec0be79d" kindref="member">bme680_temperature_oversampling_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oversampling)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/><sp/><sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>get<sp/>temperature<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>oversampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>*oversampling<sp/>=<sp/>ctrl_meas_reg.bits.temperature_oversampling;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga469d38f764c34555d25bd3add78713ea" kindref="member">bme680_set_temperature_oversampling</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga5be0c6fd6abecc9e2e055f27ec0be79d" kindref="member">bme680_temperature_oversampling_t</ref><sp/>oversampling)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_measurement_register_t<sp/><sp/><sp/>ctrl_meas_reg;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gabfbef4c619fd0ea64e7865014519e06e" kindref="member">bme680_get_control_measurement_register</ref>(handle,<sp/>&amp;ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>get<sp/>temperature<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_meas_reg.bits.temperature_oversampling<sp/>=<sp/>oversampling;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>measurement<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0e7ab74cc925aee01a695b997b7ea162" kindref="member">bme680_set_control_measurement_register</ref>(handle,<sp/>ctrl_meas_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>measurement<sp/>register<sp/>for<sp/>set<sp/>temperature<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga824c402878d6a0f4725b29d0a255075b" kindref="member">bme680_get_humidity_oversampling</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga36a632407bbbcf95a69386b2240e981d" kindref="member">bme680_humidity_oversampling_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oversampling)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_humidity_register_t<sp/><sp/><sp/>ctrl_humi_reg;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>humidity<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gac9241adfbbf7d21531e5c997f704a348" kindref="member">bme680_get_control_humidity_register</ref>(handle,<sp/>&amp;ctrl_humi_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>humidity<sp/>register<sp/>for<sp/>get<sp/>humidity<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>oversampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>*oversampling<sp/>=<sp/>ctrl_humi_reg.bits.humidity_oversampling;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga1714d1fac241515bc7482e33751b413f" kindref="member">bme680_set_humidity_oversampling</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga36a632407bbbcf95a69386b2240e981d" kindref="member">bme680_humidity_oversampling_t</ref><sp/>oversampling)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_control_humidity_register_t<sp/><sp/><sp/>ctrl_humi_reg;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>control<sp/>humidity<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gac9241adfbbf7d21531e5c997f704a348" kindref="member">bme680_get_control_humidity_register</ref>(handle,<sp/>&amp;ctrl_humi_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>control<sp/>humidity<sp/>register<sp/>for<sp/>get<sp/>humidity<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>oversampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_humi_reg.bits.humidity_oversampling<sp/>=<sp/>oversampling;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>humidity<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafa9c1fab99a1cb32bb82203888173bca" kindref="member">bme680_set_control_humidity_register</ref>(handle,<sp/>ctrl_humi_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>humidity<sp/>register<sp/>for<sp/>get<sp/>humidity<sp/>oversampling<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gabcbd257633d63e36ceecfe5a3a9cd9ae" kindref="member">bme680_get_iir_filter</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga659bc184b62bd53670e369a09e6a315b" kindref="member">bme680_iir_filters_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iir_filter)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_config_register_t<sp/><sp/><sp/>config_reg;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5d99d3bd2ca005930e5b735e1d0049d2" kindref="member">bme680_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>get<sp/>IIR<sp/>filter<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>standby<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>*iir_filter<sp/>=<sp/>config_reg.bits.iir_filter;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga42d032ca7dca23fe748a5d386db89720" kindref="member">bme680_set_iir_filter</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga659bc184b62bd53670e369a09e6a315b" kindref="member">bme680_iir_filters_t</ref><sp/>iir_filter)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>bme680_config_register_t<sp/><sp/><sp/>config_reg;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5d99d3bd2ca005930e5b735e1d0049d2" kindref="member">bme680_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>get<sp/>IIR<sp/>filter<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.iir_filter<sp/>=<sp/>iir_filter;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga244e6a799e41182cbb51d26989edcdf1" kindref="member">bme680_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>for<sp/>set<sp/>IIR<sp/>filter<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga606c1061cf4c410083cd645dd379f19a" kindref="member">bme680_reset</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_i2c_write_byte_to(handle,<sp/><ref refid="bme680_8c_1a74ae9627ad9cf3c1fce49eec5492022e" kindref="member">BME680_REG_RESET</ref>,<sp/>BME680_RESET_VALUE),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reset<sp/>register<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>until<sp/>finished<sp/>copying<sp/>NVP<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forced<sp/>delay<sp/>before<sp/>next<sp/>transaction<sp/>-<sp/>see<sp/>datasheet<sp/>for<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(BME680_RESET_DELAY_MS));<sp/></highlight><highlight class="comment">//<sp/>check<sp/>is<sp/>busy<sp/>in<sp/>timeout<sp/>loop...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>setup<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_setup(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>device<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>setup<sp/>device<sp/>heaters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>bme680_setup_heater(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>device<sp/>heaters<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga71deded33055c869346bef7d326cb4ec" kindref="member">bme680_remove</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2c_master_bus_rm_device(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga43ca650aa6143976272296a64313fe69" kindref="member">bme680_delete</ref>(<ref refid="group__drivers_1ga613796da4cb6da455381a179729e91f0" kindref="member">bme680_handle_t</ref><sp/>handle){</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga71deded33055c869346bef7d326cb4ec" kindref="member">bme680_remove</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus,<sp/>delete<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>handle<sp/>instance<sp/>and<sp/>free<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle-&gt;<ref refid="structbme680__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__drivers_1ga71a0175fc3b38bd5fb9530849ab78f94" kindref="member">bme680_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)BME680_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal">int32_t<sp/><ref refid="group__drivers_1ga0893a15c64ff19d7056a8ce9e9c81ac1" kindref="member">bme680_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BME680_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_bme680/bme680.c"/>
  </compounddef>
</doxygen>
