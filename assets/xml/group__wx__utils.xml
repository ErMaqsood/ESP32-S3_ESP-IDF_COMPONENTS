<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__wx__utils" kind="group">
    <compoundname>wx_utils</compoundname>
    <title>Wx_utils</title>
    <innerclass refid="structwx__scalar__range__t" prot="public">wx_scalar_range_t</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__wx__utils_1ga007944c60d61949b8d9f3961d4efe263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t wx_set_temperature_range</definition>
        <argsstring>(const float maximum, const float minimum)</argsstring>
        <name>wx_set_temperature_range</name>
        <param>
          <type>const float</type>
          <declname>maximum</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>minimum</declname>
        </param>
        <briefdescription>
<para>Sets the global weather utilities maximum and minimum temperature range (<computeroutput>wx_temperature_range</computeroutput>) in degrees Celsius. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum temperature range in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minimum</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum temperature range in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="74" column="11" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="89" bodyend="99" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="74" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga729e8446a82e36e3889e88f251620a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t wx_set_humidity_range</definition>
        <argsstring>(const float maximum, const float minimum)</argsstring>
        <name>wx_set_humidity_range</name>
        <param>
          <type>const float</type>
          <declname>maximum</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>minimum</declname>
        </param>
        <briefdescription>
<para>Sets the global weather utilities humidity maximum and minimum range (<computeroutput>wx_humidity_range</computeroutput>) in percent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum humidity range in percent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minimum</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum humidity range in percent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="83" column="11" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="101" bodyend="111" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="83" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1gaf9560dbeb2376204ae455a7e71407e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t wx_td_range</definition>
        <argsstring>(const float temperature, const float humidity, float *const dewpoint)</argsstring>
        <name>wx_td_range</name>
        <param>
          <type>const float</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>humidity</declname>
        </param>
        <param>
          <type>float *const</type>
          <declname>dewpoint</declname>
        </param>
        <briefdescription>
<para>Calculates dewpoint temperature from air temperature and relative humidity with range validation. The default temperature range is from -40 to 125 degrees Celsius and default humidity range is from 0 to 100 percent. <linebreak/>
 The default ranges can be adjusted through the set range functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative humidity in percent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dewpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Calculated dewpoint temperature in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="95" column="11" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="113" bodyend="134" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="95" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga6f8a84895a0f475d4850db1f31bc4a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_c_to_k</definition>
        <argsstring>(const double t)</argsstring>
        <name>wx_c_to_k</name>
        <param>
          <type>const double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Converts degrees celsius to kelvin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature in degrees celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Temperature in kelvin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="106" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="139" bodyend="141" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="106" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga931c1bcd4eaa1ed9f1058c9bb3641071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_k_to_c</definition>
        <argsstring>(const double t)</argsstring>
        <name>wx_k_to_c</name>
        <param>
          <type>const double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Converts kelvin to degrees celsius. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature in kelvin. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Temperature in degrees celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="114" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="143" bodyend="145" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="114" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga1566153b847245076c2be30f76a741c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_v</definition>
        <argsstring>(const double t)</argsstring>
        <name>wx_v</name>
        <param>
          <type>const double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Calculates v at temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature in kelvin. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double v at temperature. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="122" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="147" bodyend="154" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="122" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga75bd4d837c1f829e0d896a0960b4032c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_pwi</definition>
        <argsstring>(const double t)</argsstring>
        <name>wx_pwi</name>
        <param>
          <type>const double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Calculates aqueous vapor pressure of ice at temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature in kelvin. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Aqueous vapor pressure of ice </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="130" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="156" bodyend="166" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="130" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga72dbbedce71f89709a492598e5157820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_pws</definition>
        <argsstring>(const double t)</argsstring>
        <name>wx_pws</name>
        <param>
          <type>const double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Calculates aqueous vapor pressure of water at temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature in kelvin. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Aqueous vapor pressure of water. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="138" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="168" bodyend="178" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="138" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga53a05dd931fd2c3146d6f8f41893d9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_pressure_at_sea_level</definition>
        <argsstring>(const double pa, const double l, const double ta)</argsstring>
        <name>wx_pressure_at_sea_level</name>
        <param>
          <type>const double</type>
          <declname>pa</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ta</declname>
        </param>
        <briefdescription>
<para>Calculates the reduced air pressure QFF (pressure at sea level) without QFE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Air pressure at this altitude in hecto-pascal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Reduction level at this altitude in meters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ta</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature at this altitude in degrees celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Reduced air pressure QFF in hecto-pascal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="148" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="181" bodyend="188" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="148" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1gaeafc3b5dd9c7cb6bd5a98ca488c78a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_qfe</definition>
        <argsstring>(const double pa, const double l, const double ta)</argsstring>
        <name>wx_qfe</name>
        <param>
          <type>const double</type>
          <declname>pa</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ta</declname>
        </param>
        <briefdescription>
<para>Calculates the reduced air pressure QFE (pressure at a certain level). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The reduction level for QFE processing is the elevation difference of the pressure sensor and the QFE level into which the pressure will be reduced. If the pressure sensor is above the QFE level, the reduction level to get the QFE level pressure is a positive value. If the sensor is below the QFE level, the reduction level is a negative value.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Air pressure at this altitude in hecto-pascal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Reduction level in meters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ta</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature at this altitude in degrees celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Reduced air pressure QFE in hecto-pascal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="164" column="14" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="164" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1gafd8d946905a578427cb9abc3643ecd73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_qff</definition>
        <argsstring>(const double qfe, const double l, const double ta)</argsstring>
        <name>wx_qff</name>
        <param>
          <type>const double</type>
          <declname>qfe</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ta</declname>
        </param>
        <briefdescription>
<para>Calculates the reduced air pressure QFF (pressure at sea level). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The reduction level is the elevation difference of the station altitude and the mean sea level.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qfe</parametername>
</parameternamelist>
<parameterdescription>
<para>Field elevation aire pressure in hecto-pascal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Reduction level at this altitude in meters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ta</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature at this altitude in degrees celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Reduced air pressure QFF in hecto-pascal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="177" column="14" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="177" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1gaca9294993c7bf81f641a8f3d53c16191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_qnh</definition>
        <argsstring>(const double qfe, const double h, const double a)</argsstring>
        <name>wx_qnh</name>
        <param>
          <type>const double</type>
          <declname>qfe</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Calculates the reduced air pressure QNH (pressure at sea level according to ICAO standard atmospheric). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qfe</parametername>
</parameternamelist>
<parameterdescription>
<para>Staion level air pressure in hecto-pascal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Elevation of pressure QFE in International Standard Atmosphere (ISA). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Station altitude in meters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Reduced air pressure QNH in hecto-pascal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="188" column="14" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="188" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1ga0b1ca2c46ff5cfef33fd5831beddaf08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_td</definition>
        <argsstring>(const double ta, const double hr)</argsstring>
        <name>wx_td</name>
        <param>
          <type>const double</type>
          <declname>ta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>hr</declname>
        </param>
        <briefdescription>
<para>Calculates dewpoint temperature from air temperature and relative humidity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ta</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature in degrees celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hr</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative humidity in percent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Dewpoint temperature in degrees celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="198" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="190" bodyend="196" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="198" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__wx__utils_1gae159e7e1938651f641ddaf776c24c08c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const double</type>
        <definition>const double wx_tw</definition>
        <argsstring>(const double ta, const double hr, const double td, const double pa)</argsstring>
        <name>wx_tw</name>
        <param>
          <type>const double</type>
          <declname>ta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>hr</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>td</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>pa</declname>
        </param>
        <briefdescription>
<para>Calculates wetbulb temperature from air temperature, relative humidity, and dewpoint temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ta</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature in degrees celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hr</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative humidity in percent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>td</parametername>
</parameternamelist>
<parameterdescription>
<para>Dewpoint temperature in degrees celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Air pressure in hecto-pascal. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Wetbulb temperature in degrees celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_wx_utils/wx_utils.h" line="210" column="14" bodyfile="components/utilities/esp_wx_utils/wx_utils.c" bodystart="208" bodyend="213" declfile="components/utilities/esp_wx_utils/wx_utils.h" declline="210" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF weather utilities</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
  </compounddef>
</doxygen>
