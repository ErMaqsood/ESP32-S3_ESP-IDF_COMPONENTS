<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="scalar__trend_8c" kind="file" language="C++">
    <compoundname>scalar_trend.c</compoundname>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_types.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="scalar__trend_8h" local="no">scalar_trend.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/utilities/esp_scalar_trend/scalar_trend.c</label>
        <link refid="scalar__trend_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>scalar_trend.h</label>
        <link refid="scalar__trend_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>esp_check.h</label>
      </node>
      <node id="3">
        <label>esp_log.h</label>
      </node>
      <node id="4">
        <label>esp_types.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="scalar__trend_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="52" column="9" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scalar__trend_8c_1aa7866fa5e4e0ee9b034e9dab6599a9cc" prot="public" static="no">
        <name>SQR</name>
        <param><defname>x</defname></param>
        <initializer>((x) * (x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="53" column="9" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="scalar__trend_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;scalar_trend&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="57" column="19" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="scalar__trend_8c_1a46de1ea6e71fc558a6da77a7fb7ce36d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double q_inv</definition>
        <argsstring>(const double x)</argsstring>
        <name>q_inv</name>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Calculates q-distribution by α (probability). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Original source: <ulink url="https://my.originlab.com/forum/topic.asp?TOPIC_ID=5776">https://my.originlab.com/forum/topic.asp?TOPIC_ID=5776</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="67" column="22" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="67" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="scalar__trend_8c_1ac9382d9346e92ef8ba4779b4013a7c51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double t_inv</definition>
        <argsstring>(const double x, const double df)</argsstring>
        <name>t_inv</name>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>df</declname>
        </param>
        <briefdescription>
<para>Calculates the left-tailed inverse student&apos;s t-distribution by α (probability) and v (degree of freedom). </para>
        </briefdescription>
        <detaileddescription>
<para>Source: <ulink url="https://my.originlab.com/forum/topic.asp?TOPIC_ID=5776">https://my.originlab.com/forum/topic.asp?TOPIC_ID=5776</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>α argument of the left-tailed inverse student&apos;s t-distribution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>v argument of the left-tailed inverse student&apos;s t-distribution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double Left-tailed inverse student&apos;s t-distribution value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="110" column="22" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="110" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="scalar__trend_8c_1a0b324bd1c5a54edd2fc7af10c1afcd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * scalar_trend_code_to_string</definition>
        <argsstring>(const scalar_trend_codes_t code)</argsstring>
        <name>scalar_trend_code_to_string</name>
        <param>
          <type>const <ref refid="scalar__trend_8h_1a0314c0963d877723faaf9ea72b22afc1" kindref="member">scalar_trend_codes_t</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Converts <computeroutput><ref refid="scalar__trend_8h_1a0314c0963d877723faaf9ea72b22afc1" kindref="member">scalar_trend_codes_t</ref></computeroutput> enumerator trend code to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend code to convert to a string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* String representation of the scalar trend code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="140" column="12" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="140" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="scalar__trend_8c_1aa371e0515d1b70d866ce306f1eead839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t scalar_trend_init</definition>
        <argsstring>(const uint16_t samples_size, scalar_trend_handle_t *scalar_trend_handle)</argsstring>
        <name>scalar_trend_init</name>
        <param>
          <type>const uint16_t</type>
          <declname>samples_size</declname>
        </param>
        <param>
          <type><ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref> *</type>
          <declname>scalar_trend_handle</declname>
        </param>
        <briefdescription>
<para>Initializes a scalar trend handle by size of the 1-hr samples to analyze. The size of the samples is calculated from the sampling rate. <linebreak/>
 As an example, if the sampling rate is once every minute, the size of the samples buffer should be 60 e.g., one (1) hour. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>samples_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend samples buffer size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar_trend_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="155" column="11" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="155" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="scalar__trend_8c_1a7b295a1a8e88e57d5a6ed813e536d97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t scalar_trend_analysis</definition>
        <argsstring>(scalar_trend_handle_t scalar_trend_handle, const float sample, scalar_trend_codes_t *const code)</argsstring>
        <name>scalar_trend_analysis</name>
        <param>
          <type><ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref></type>
          <declname>scalar_trend_handle</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>sample</declname>
        </param>
        <param>
          <type><ref refid="scalar__trend_8h_1a0314c0963d877723faaf9ea72b22afc1" kindref="member">scalar_trend_codes_t</ref> *const</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Analyzes historical samples and scalar Trend appears after one (1) hour of operation. The trend codes are a forecast of the 3-hr change based on the previous 1-hour history. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_trend_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar sample to push onto the samples stack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend code of one (1) hour analysis. Scalar trend code <computeroutput>SCALAR_TREND_UNKNOWN</computeroutput> is reported when there is an insufficient number of samples to analyze. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="184" column="11" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="184" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="scalar__trend_8c_1a341bf47439655e97ec906a8eaef17b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t scalar_trend_reset</definition>
        <argsstring>(scalar_trend_handle_t scalar_trend_handle)</argsstring>
        <name>scalar_trend_reset</name>
        <param>
          <type><ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref></type>
          <declname>scalar_trend_handle</declname>
        </param>
        <briefdescription>
<para>Purges scalar trend samples array and resets samples counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_trend_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="350" column="11" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="350" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="scalar__trend_8c_1ab5db8dcb60daf60e2dd4492a368cff2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t scalar_trend_delete</definition>
        <argsstring>(scalar_trend_handle_t scalar_trend_handle)</argsstring>
        <name>scalar_trend_delete</name>
        <param>
          <type><ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref></type>
          <declname>scalar_trend_handle</declname>
        </param>
        <briefdescription>
<para>Frees scalar trend handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_trend_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar trend handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_scalar_trend/scalar_trend.c" line="365" column="11" bodyfile="components/utilities/esp_scalar_trend/scalar_trend.c" bodystart="365" bodyend="372"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Scalar trend libary</para>
<para>Scalar Trend appears after one (1) hour of operation. The trend codes are a forecast of the 3-hr change based on the previous 1-hour history.</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE</para>
<para>Original sources <ulink url="https://gist.github.com/Paraphraser/c5609f85cc7ee6ecd03ce179fb7f7edb">https://gist.github.com/Paraphraser/c5609f85cc7ee6ecd03ce179fb7f7edb</ulink> <ulink url="https://github.com/oyve/barometer-trend/blob/main/predictions/byPressureTrend.js">https://github.com/oyve/barometer-trend/blob/main/predictions/byPressureTrend.js</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="scalar__trend_8h" kindref="compound">scalar_trend.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SQR(x)<sp/>((x)<sp/>*<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scalar_trend&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q_inv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum1,<sp/>sum2;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempo,<sp/>xp,<sp/>xa<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c[4]<sp/>=<sp/>{2.515517,0.802853,0.010328,0.0};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d[4]<sp/>=<sp/>{1.0,<sp/>1.432788,<sp/>0.189269,<sp/>0.001308};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xa&lt;=0.0)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xa&gt;=1.0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>0.9999;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa&lt;0.5)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo<sp/>=<sp/>sqrt(log(1.0/SQR(xa)));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo<sp/>=<sp/>sqrt(log(1.0/SQR(1.0-xa)));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>sum2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>xp<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;i&lt;4;i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum1<sp/>+=<sp/>c[i]<sp/>*<sp/>xp;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum2<sp/>+=<sp/>d[i]<sp/>*<sp/>xp;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xp<sp/>*=<sp/>tempo;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tempo<sp/>-<sp/>sum1<sp/>/<sp/>sum2;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(xa<sp/>&gt;<sp/>0.5)?<sp/>-result<sp/>:<sp/>result;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_inv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>df)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/>xp,<sp/>xq,<sp/>xa<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Pwr[10];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>term[5];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xa<sp/>&lt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xa<sp/>&gt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>0.9999;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>xq<sp/>=<sp/>q_inv(xa);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>Pwr[1]<sp/>=<sp/>xq;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;i&lt;=9;i++)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pwr[i]<sp/>=<sp/>Pwr[i-1]<sp/>*<sp/>xq;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>term[1]<sp/>=<sp/>0.25<sp/>*<sp/>(<sp/>Pwr[3]<sp/>+<sp/>Pwr[1]<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>term[2]<sp/>=<sp/>(5*Pwr[5]<sp/>+<sp/>16*Pwr[3]<sp/>+<sp/>3*Pwr[1])/96;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>term[3]<sp/>=<sp/>(3*Pwr[7]<sp/>+<sp/>19*Pwr[7]<sp/>+<sp/>17*Pwr[3]<sp/>-<sp/>15*Pwr[1])/384;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>term[4]<sp/>=<sp/>(79*Pwr[9]<sp/>+<sp/>776*Pwr[7]<sp/>+<sp/>1482*Pwr[5]<sp/>-<sp/>1920*Pwr[3]<sp/>-<sp/>945*Pwr[1])/92160.0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>sum=xq;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>xp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>1;i&lt;=4;i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xp<sp/>*=df;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>term[i]<sp/>/<sp/>xp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="scalar__trend_8c_1a0b324bd1c5a54edd2fc7af10c1afcd4e" kindref="member">scalar_trend_code_to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="scalar__trend_8h_1a0314c0963d877723faaf9ea72b22afc1" kindref="member">scalar_trend_codes_t</ref><sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(code)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6a7052f4bb2853c43aedeb405a507bcc93" kindref="member">SCALAR_TREND_CODE_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unkown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6a8c869fa1e69a945c3ab0383714e06f5e" kindref="member">SCALAR_TREND_CODE_RISING</ref>:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Rising&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6ae11a5ca94ee028514840445697e3c4aa" kindref="member">SCALAR_TREND_CODE_STEADY</ref>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Steady&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6a21be256704957dd20edca8e0c0334bca" kindref="member">SCALAR_TREND_CODE_FALLING</ref>:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Falling&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unkown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">esp_err_t<sp/><ref refid="scalar__trend_8c_1aa371e0515d1b70d866ce306f1eead839" kindref="member">scalar_trend_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>samples_size,<sp/><ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref><sp/>*scalar_trend_handle)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>samples_size<sp/>&gt;<sp/>2,<sp/>ESP_ERR_INVALID_ARG,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;samples<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>2,<sp/>scalar<sp/>trend<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>scalar<sp/>trend<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref><sp/>out_handle<sp/>=<sp/>(<ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structscalar__trend__t" kindref="compound">scalar_trend_t</ref>));<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>scalar<sp/>trend<sp/>handle,<sp/>scalar<sp/>trend<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>samples<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)calloc(samples_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>out_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>,<sp/>ESP_ERR_NO_MEM,<sp/>err_out_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>scalar<sp/>trend<sp/>handle<sp/>samples,<sp/>scalar<sp/>trend<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>absolute<sp/>critical<sp/>t<sp/>value<sp/>and<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structscalar__trend__t_1acdf8d68bb16f8752607d6b3069873e51" kindref="member">critical_t</ref><sp/><sp/><sp/>=<sp/>fabs(t_inv(0.05/2,<sp/>samples_size<sp/>-<sp/>2));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref><sp/>=<sp/>samples_size;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>*scalar_trend_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>err_out_handle:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">esp_err_t<sp/><ref refid="scalar__trend_8c_1a7b295a1a8e88e57d5a6ed813e536d97d" kindref="member">scalar_trend_analysis</ref>(<ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref><sp/>scalar_trend_handle,<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample,<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="scalar__trend_8h_1a0314c0963d877723faaf9ea72b22afc1" kindref="member">scalar_trend_codes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(scalar_trend_handle);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>we<sp/>filled<sp/>the<sp/>array?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref><sp/>&lt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no!<sp/>add<sp/>this<sp/>observation<sp/>to<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref>]<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bump<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref>++;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yes!<sp/>the<sp/>array<sp/>is<sp/>full<sp/>so<sp/>we<sp/>have<sp/>to<sp/>make<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i-1]<sp/>=<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>fill<sp/>in<sp/>the<sp/>last<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>-1]<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>array<sp/>full<sp/>yet?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref><sp/>&lt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no!<sp/>we<sp/>are<sp/>still<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6a7052f4bb2853c43aedeb405a507bcc93" kindref="member">SCALAR_TREND_CODE_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Step<sp/>1<sp/>:<sp/>calculate<sp/>the<sp/>straight<sp/>line<sp/>of<sp/>best<sp/>fit</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(least-squares<sp/>linear<sp/>regression)</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_x<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>∑(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_xx<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>∑(x²)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_y<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>∑(y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_xy<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>∑(xy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>n<sp/>in<sp/>lots<sp/>of<sp/>places<sp/>and<sp/>it&apos;s<sp/>convenient<sp/>as<sp/>a<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1.0<sp/>*<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>to<sp/>calculate<sp/>the<sp/>above<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>1.0<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_x<sp/>=<sp/>sum_x<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_xx<sp/>=<sp/>sum_xx<sp/>+<sp/>x<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_y<sp/>=<sp/>sum_y<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_xy<sp/>=<sp/>sum_xy<sp/>+<sp/>x<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>slope<sp/>and<sp/>intercept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope<sp/>=<sp/>(sum_x*sum_y<sp/>-<sp/>n*sum_xy)<sp/>/<sp/>(sum_x*sum_x<sp/>-<sp/>n*sum_xx);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intercept<sp/>=<sp/>(sum_y<sp/>-slope*sum_x)<sp/>/<sp/>n;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Step<sp/>2<sp/>:<sp/>Perform<sp/>an<sp/>hypothesis<sp/>test<sp/>on<sp/>the<sp/>equation<sp/>of<sp/>the<sp/>linear</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>to<sp/>see<sp/>whether,<sp/>statistically,<sp/>the<sp/>available<sp/>data</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>sufficient<sp/>evidence<sp/>to<sp/>conclude<sp/>that<sp/>the<sp/>slope</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>non-zero.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Let<sp/>beta1<sp/>=<sp/>the<sp/>slope<sp/>of<sp/>the<sp/>regression<sp/>line<sp/>between</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed<sp/>time<sp/>intervals<sp/>and<sp/>pressure<sp/>observations.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H0:<sp/>β₁<sp/>=<sp/>0<sp/><sp/><sp/><sp/>(the<sp/>slope<sp/>is<sp/>zero)</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H1:<sp/>β₁<sp/>≠<sp/>0<sp/><sp/><sp/><sp/>(the<sp/>slope<sp/>is<sp/>not<sp/>zero)</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>level<sp/>of<sp/>significance:<sp/>α<sp/>is<sp/>5%<sp/>(0.05)</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>test<sp/>statistic<sp/>is:</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tObserved<sp/>=<sp/>(b₁<sp/>-<sp/>β₁)<sp/>/<sp/>s_b₁</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>context,<sp/>b₁<sp/>is<sp/>the<sp/>estimated<sp/>slope<sp/>of<sp/>the<sp/>linear</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>and<sp/>β₁<sp/>the<sp/>reference<sp/>value<sp/>from<sp/>the<sp/>hypothesis</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>being<sp/>tested.<sp/>s_b₁<sp/>is<sp/>the<sp/>standard<sp/>error<sp/>of<sp/>b₁.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>From<sp/>H0,<sp/>β₁<sp/>=<sp/>0<sp/>so<sp/>the<sp/>test<sp/>statistic<sp/>simplifies<sp/>to:</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tObserved<sp/>=<sp/>b₁<sp/>/<sp/>s_b₁</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>two-tailed<sp/>test<sp/>so<sp/>half<sp/>of<sp/>α<sp/>goes<sp/>on<sp/>each<sp/>side</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>T<sp/>distribution.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>degrees-of-freedom,<sp/>ν,<sp/>for<sp/>the<sp/>test<sp/>is:</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ν<sp/>=<sp/>n-2<sp/>=<sp/>6<sp/>-<sp/>2<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>critical<sp/>value<sp/>(calculated<sp/>externally<sp/>using<sp/>Excel<sp/>or</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>graphics<sp/>calculator)<sp/>is:</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-tCritical<sp/>=<sp/>invt(0.05/2,4)<sp/>=<sp/>-2.776445105</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>By<sp/>symmetry:</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+tCritical<sp/>=<sp/>abs(-tCritical)</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>decision<sp/>rule<sp/>is:</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject<sp/>H0<sp/>if<sp/>tObserved<sp/>&lt;<sp/>-tCritical<sp/>or<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tObserved<sp/>&gt;<sp/>+tCritical</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>can<sp/>be<sp/>simplified<sp/>to:</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject<sp/>H0<sp/>if<sp/>abs(tObserved)<sp/>&gt;<sp/>+tCritical</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>value<sp/>of<sp/>+tCritical<sp/>is<sp/>carried<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global<sp/>variable:</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Critical_t_value</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>next<sp/>step<sp/>is<sp/>to<sp/>calculate<sp/>the<sp/>test<sp/>statistic<sp/>but<sp/>one</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>inputs<sp/>to<sp/>that<sp/>calculation<sp/>is<sp/>SSE,<sp/>so<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>first.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SSE<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>∑((y-ŷ)²)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>residual<sp/>=<sp/>y<sp/>-<sp/>(intercept<sp/>+<sp/>slope<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSE<sp/>=<sp/>SSE<sp/>+<sp/>residual<sp/>*<sp/>residual;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Now<sp/>we<sp/>can<sp/>calculate<sp/>the<sp/>test<sp/>statistic.<sp/>Note<sp/>the<sp/>use</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>fabs()<sp/>function<sp/>below<sp/>to<sp/>force<sp/>the<sp/>result<sp/>into</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>positive<sp/>domain<sp/>for<sp/>comparison<sp/>with<sp/>Critical_t_value</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tObserved<sp/>=</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slope/(sqrt(SSE<sp/>/<sp/>(n-2.0))<sp/>/<sp/>sqrt(sum_xx<sp/>-<sp/>sum_x*sum_x/n))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finally,<sp/>make<sp/>the<sp/>decision<sp/>and<sp/>return<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summarizing<sp/>the<sp/>conclusion.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>tObserved<sp/>further<sp/>to<sp/>the<sp/>left<sp/>or<sp/>right<sp/>than<sp/>tCritical?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tObserved<sp/>&gt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1acdf8d68bb16f8752607d6b3069873e51" kindref="member">critical_t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yes!<sp/>what<sp/>is<sp/>the<sp/>sign<sp/>of<sp/>the<sp/>slope?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slope<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>falling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6a21be256704957dd20edca8e0c0334bca" kindref="member">SCALAR_TREND_CODE_FALLING</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rising<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6a8c869fa1e69a945c3ab0383714e06f5e" kindref="member">SCALAR_TREND_CODE_RISING</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>the<sp/>slope<sp/>may<sp/>be<sp/>zero<sp/>(statistically)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="scalar__trend_8h_1af75d6701beee22d523b10231cd5ccde6ae11a5ca94ee028514840445697e3c4aa" kindref="member">SCALAR_TREND_CODE_STEADY</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">esp_err_t<sp/><ref refid="scalar__trend_8c_1a341bf47439655e97ec906a8eaef17b60" kindref="member">scalar_trend_reset</ref>(<ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref><sp/>scalar_trend_handle)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(scalar_trend_handle);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>purge<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i]<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>samples<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">esp_err_t<sp/><ref refid="scalar__trend_8c_1ab5db8dcb60daf60e2dd4492a368cff2d" kindref="member">scalar_trend_delete</ref>(<ref refid="scalar__trend_8h_1acf8da9d0063860556f3774b0259b7b5b" kindref="member">scalar_trend_handle_t</ref><sp/>scalar_trend_handle)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(scalar_trend_handle);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>)<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(scalar_trend_handle-&gt;<ref refid="structscalar__trend__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>free(scalar_trend_handle);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/utilities/esp_scalar_trend/scalar_trend.c"/>
  </compounddef>
</doxygen>
