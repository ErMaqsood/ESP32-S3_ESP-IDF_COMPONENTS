<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="onewire__bus__api_8c" kind="file" language="C++">
    <compoundname>onewire_bus_api.c</compoundname>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">esp_check.h</includes>
    <includes refid="onewire__types_8h" local="yes">onewire_types.h</includes>
    <includes refid="onewire__bus__interface_8h" local="yes">onewire_bus_interface.h</includes>
    <incdepgraph>
      <node id="4">
        <label>onewire_types.h</label>
        <link refid="onewire__types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>onewire_bus_interface.h</label>
        <link refid="onewire__bus__interface_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/peripherals/owb/onewire_bus/src/onewire_bus_api.c</label>
        <link refid="onewire__bus__api_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>esp_check.h</label>
      </node>
      <node id="7">
        <label>esp_err.h</label>
      </node>
      <node id="2">
        <label>esp_log.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="onewire__bus__api_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;1-wire&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="11" column="19" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="onewire__bus__api_8c_1a01d60a3b9360449393587b3bac346ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t onewire_bus_reset</definition>
        <argsstring>(onewire_bus_handle_t bus)</argsstring>
        <name>onewire_bus_reset</name>
        <param>
          <type><ref refid="structonewire__bus__t" kindref="compound">onewire_bus_handle_t</ref></type>
          <declname>bus</declname>
        </param>
        <briefdescription>
<para>Send reset pulse to the bus, and check if there are devices attached to the bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-Wire bus handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Reset 1-Wire bus successfully and find device on the bus</para>
</listitem><listitem><para>ESP_ERR_NOT_FOUND: Reset 1-Wire bus successfully but no device found on the bus</para>
</listitem><listitem><para>ESP_FAIL: Reset 1-Wire bus failed because of other errors </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="13" column="11" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="onewire__bus__api_8c_1af76f9dc5bd286cdfaecbb1baebea4ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t onewire_bus_write_bytes</definition>
        <argsstring>(onewire_bus_handle_t bus, const uint8_t *tx_data, uint8_t tx_data_size)</argsstring>
        <name>onewire_bus_write_bytes</name>
        <param>
          <type><ref refid="structonewire__bus__t" kindref="compound">onewire_bus_handle_t</ref></type>
          <declname>bus</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>tx_data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tx_data_size</declname>
        </param>
        <briefdescription>
<para>Write bytes to 1-wire bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-Wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data to be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_data_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be sent, in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Write bytes to 1-Wire bus successfully</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG: Write bytes to 1-Wire bus failed because of invalid argument</para>
</listitem><listitem><para>ESP_FAIL: Write bytes to 1-Wire bus failed because of other errors </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="19" column="11" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="onewire__bus__api_8c_1aac0bc3476c9cdb3dea6fdcdd9f33d3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t onewire_bus_read_bytes</definition>
        <argsstring>(onewire_bus_handle_t bus, uint8_t *rx_buf, size_t rx_buf_size)</argsstring>
        <name>onewire_bus_read_bytes</name>
        <param>
          <type><ref refid="structonewire__bus__t" kindref="compound">onewire_bus_handle_t</ref></type>
          <declname>bus</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rx_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rx_buf_size</declname>
        </param>
        <briefdescription>
<para>Read bytes from 1-wire bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer to store received data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx_buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer to store received data, in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Read bytes from 1-Wire bus successfully</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG: Read bytes from 1-Wire bus failed because of invalid argument</para>
</listitem><listitem><para>ESP_FAIL: Read bytes from 1-Wire bus failed because of other errors </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="25" column="11" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="onewire__bus__api_8c_1a65e494e4a47665f9fa401e3ddfbd034c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t onewire_bus_write_bit</definition>
        <argsstring>(onewire_bus_handle_t bus, uint8_t tx_bit)</argsstring>
        <name>onewire_bus_write_bit</name>
        <param>
          <type><ref refid="structonewire__bus__t" kindref="compound">onewire_bus_handle_t</ref></type>
          <declname>bus</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tx_bit</declname>
        </param>
        <briefdescription>
<para>Write a bit to 1-wire bus, this is a blocking function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>1-wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_bit</parametername>
</parameternamelist>
<parameterdescription>
<para>bit to transmit, 0 for zero bit, other for one bit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK Write bit to 1-wire bus successfully.</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG Invalid argument. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="31" column="11" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="onewire__bus__api_8c_1afb0921ac7ab10929f3cbf13e9e92a9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t onewire_bus_read_bit</definition>
        <argsstring>(onewire_bus_handle_t bus, uint8_t *rx_bit)</argsstring>
        <name>onewire_bus_read_bit</name>
        <param>
          <type><ref refid="structonewire__bus__t" kindref="compound">onewire_bus_handle_t</ref></type>
          <declname>bus</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rx_bit</declname>
        </param>
        <briefdescription>
<para>Read a bit from 1-wire bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>1-wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_bit</parametername>
</parameternamelist>
<parameterdescription>
<para>received bit, 0 for zero bit, 1 for one bit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK Read bit from 1-wire bus successfully.</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG Invalid argument. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="37" column="11" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="onewire__bus__api_8c_1a2f844072c39f36e71791823f21a647d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t onewire_bus_del</definition>
        <argsstring>(onewire_bus_handle_t bus)</argsstring>
        <name>onewire_bus_del</name>
        <param>
          <type><ref refid="structonewire__bus__t" kindref="compound">onewire_bus_handle_t</ref></type>
          <declname>bus</declname>
        </param>
        <briefdescription>
<para>Free 1-Wire bus resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-Wire bus handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Free resources successfully</para>
</listitem><listitem><para>ESP_FAIL: Free resources failed because error occurred </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" line="43" column="11" bodyfile="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c" bodystart="43" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>SPDX-FileCopyrightText:<sp/>2022-2023<sp/>Espressif<sp/>Systems<sp/>(Shanghai)<sp/>CO<sp/>LTD</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_check.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;onewire_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;onewire_bus_interface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1-wire&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">esp_err_t<sp/>onewire_bus_reset(onewire_bus_handle_t<sp/>bus)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(bus,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus-&gt;<ref refid="structonewire__bus__t_1a550161c28abdf6c7a2982c2180f10afc" kindref="member">reset</ref>(bus);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">esp_err_t<sp/>onewire_bus_write_bytes(onewire_bus_handle_t<sp/>bus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*tx_data,<sp/>uint8_t<sp/>tx_data_size)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(bus<sp/>&amp;&amp;<sp/>tx_data<sp/>&amp;&amp;<sp/>tx_data_size,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus-&gt;<ref refid="structonewire__bus__t_1afada884b3d82aeaefe2ec9a03cf9f0e9" kindref="member">write_bytes</ref>(bus,<sp/>tx_data,<sp/>tx_data_size);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">esp_err_t<sp/>onewire_bus_read_bytes(onewire_bus_handle_t<sp/>bus,<sp/>uint8_t<sp/>*rx_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rx_buf_size)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(bus<sp/>&amp;&amp;<sp/>rx_buf<sp/>&amp;&amp;<sp/>rx_buf_size,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus-&gt;<ref refid="structonewire__bus__t_1a5e264bcb0a9aa05a8a37a9a3911af3eb" kindref="member">read_bytes</ref>(bus,<sp/>rx_buf,<sp/>rx_buf_size);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">esp_err_t<sp/>onewire_bus_write_bit(onewire_bus_handle_t<sp/>bus,<sp/>uint8_t<sp/>tx_bit)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(bus,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus-&gt;<ref refid="structonewire__bus__t_1a41ec43f6b226c80f9a5b39945af01c14" kindref="member">write_bit</ref>(bus,<sp/>tx_bit);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">esp_err_t<sp/>onewire_bus_read_bit(onewire_bus_handle_t<sp/>bus,<sp/>uint8_t<sp/>*rx_bit)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(bus<sp/>&amp;&amp;<sp/>rx_bit,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus-&gt;<ref refid="structonewire__bus__t_1a0f3cd296844f271fa90a53b70fbe4bed" kindref="member">read_bit</ref>(bus,<sp/>rx_bit);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">esp_err_t<sp/>onewire_bus_del(onewire_bus_handle_t<sp/>bus)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(bus,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus-&gt;<ref refid="structonewire__bus__t_1a5ca49c820334b23d01c79e9f1a7ad011" kindref="member">del</ref>(bus);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/owb/onewire_bus/src/onewire_bus_api.c"/>
  </compounddef>
</doxygen>
