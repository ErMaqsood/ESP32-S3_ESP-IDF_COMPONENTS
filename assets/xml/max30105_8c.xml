<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="max30105_8c" kind="file" language="C++">
    <compoundname>max30105.c</compoundname>
    <includes refid="max30105_8h" local="yes">include/max30105.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="2">
        <label>include/max30105.h</label>
        <link refid="max30105_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/peripherals/i2c/esp_max30105/max30105.c</label>
        <link refid="max30105_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="14">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="13">
        <label>esp_log.h</label>
      </node>
      <node id="8">
        <label>esp_mac.h</label>
      </node>
      <node id="15">
        <label>esp_timer.h</label>
      </node>
      <node id="16">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="17">
        <label>freertos/task.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="max30105_8c_1a71c67a7a404578ff07c9f07efe6d702e" prot="public" static="no">
        <name>MAX30105_REG_INT_STS1_R</name>
        <initializer>UINT8_C(0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="50" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a292e19a07c32fca0970804e8db8ff989" prot="public" static="no">
        <name>MAX30105_REG_INT_STS2_R</name>
        <initializer>UINT8_C(0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="51" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1aea8b4cf44279275994efef2dc3e62f31" prot="public" static="no">
        <name>MAX30105_REG_INT_ENB1_RW</name>
        <initializer>UINT8_C(0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="52" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1aa34547bb0f52a0a55ded017b97bb9685" prot="public" static="no">
        <name>MAX30105_REG_INT_ENB2_RW</name>
        <initializer>UINT8_C(0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="53" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1ac965048365c0ea55887731c92ac0a0a8" prot="public" static="no">
        <name>MAX30105_REG_FIFO_WR_PTR_RW</name>
        <initializer>UINT8_C(0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a4a203854b32f3f76cb5598aa45adae60" prot="public" static="no">
        <name>MAX30105_REG_FIFO_OVF_CNT_RW</name>
        <initializer>UINT8_C(0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="56" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1ae105fb4ff7ed2cc4fb18f227c8af7c8d" prot="public" static="no">
        <name>MAX30105_REG_FIFO_RD_PTR_RW</name>
        <initializer>UINT8_C(0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="57" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a07a59f4aa757bf2a51be62a262424044" prot="public" static="no">
        <name>MAX30105_REG_FIFO_DATA_RW</name>
        <initializer>UINT8_C(0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="58" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a02ff0346f2c4a15fbb9447d390ec36e0" prot="public" static="no">
        <name>MAX30105_REG_FIFO_CONFIG_RW</name>
        <initializer>UINT8_C(0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="60" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a89e92da53f2583c7a8865b188b5a8cff" prot="public" static="no">
        <name>MAX30105_REG_MODE_CONFIG_RW</name>
        <initializer>UINT8_C(0x09)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="61" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a689258d2df7792752ece15fd8cc0aa97" prot="public" static="no">
        <name>MAX30105_REG_SPO2_CONFIG_RW</name>
        <initializer>UINT8_C(0x0A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="62" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a86e905e95f857d9bfc9e1d2a66e2c1c8" prot="public" static="no">
        <name>MAX30105_REG_LED1_PA_RW</name>
        <initializer>UINT8_C(0x0C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="63" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1ac22285cf8c649683588e67911527a993" prot="public" static="no">
        <name>MAX30105_REG_LED2_PA_RW</name>
        <initializer>UINT8_C(0x0D)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="64" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1aaf86dd596dc392d426f06f0d907a0ff3" prot="public" static="no">
        <name>MAX30105_REG_LED3_PA_RW</name>
        <initializer>UINT8_C(0x0E)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="65" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a48d44c2063f46ff2e7db66ad0ac53e45" prot="public" static="no">
        <name>MAX30105_REG_PILOT_PA_RW</name>
        <initializer>UINT8_C(0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="66" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1aba4130a36afcc9541185325ce83fa8fd" prot="public" static="no">
        <name>MAX30105_REG_MLED1_MC_RW</name>
        <initializer>UINT8_C(0x11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="67" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1ad3c7d17c069a115156764c182ace498a" prot="public" static="no">
        <name>MAX30105_REG_MLED2_MC_RW</name>
        <initializer>UINT8_C(0x12)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a0395ec9c822f7d81ce7d587dd1d2a14d" prot="public" static="no">
        <name>MAX30105_REG_DIETEMP_INT_R</name>
        <initializer>UINT8_C(0x1F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a46dd47f3a20749c98f30d00978b14b70" prot="public" static="no">
        <name>MAX30105_REG_DIETEMP_FRAC_R</name>
        <initializer>UINT8_C(0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="71" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1aaf7ce7ef851acba94bb11b12497bba08" prot="public" static="no">
        <name>MAX30105_REG_DIETEMP_CONFIG_R</name>
        <initializer>UINT8_C(0x21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="72" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a35a630eb5555acb3ba2ed0ae41c9885a" prot="public" static="no">
        <name>MAX30105_REG_PROX_INT_THLD_RW</name>
        <initializer>UINT8_C(0x30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="74" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a30eef42882a73170e1af6685028c6c9d" prot="public" static="no">
        <name>MAX30105_REG_REV_ID_R</name>
        <initializer>UINT8_C(0xFE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a80edf47558d43f992ee9a32767c65ad3" prot="public" static="no">
        <name>MAX30105_REG_PART_ID_R</name>
        <initializer>UINT8_C(0xFE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="76" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a80fc3b10d1a834d300520f001fac5e30" prot="public" static="no">
        <name>MAX30105_DATA_POLL_TIMEOUT_MS</name>
        <initializer>UINT16_C(100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="80" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1abc5094eb663e259d43fb03cd90c02bae" prot="public" static="no">
        <name>MAX30105_DATA_READY_DELAY_MS</name>
        <initializer>UINT16_C(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="81" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a8dc3b25659b00edebf0276d6953402eb" prot="public" static="no">
        <name>MAX30105_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(120)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="82" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1af1fc2a19597577addccec9a96512ac37" prot="public" static="no">
        <name>MAX30105_RESET_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="83" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a22a77272a40b57b0766f0674a3f8023f" prot="public" static="no">
        <name>MAX30105_SETUP_DELAY_MS</name>
        <initializer>UINT16_C(15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="84" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a1191a11167e2f86f5674540cc13bcd1b" prot="public" static="no">
        <name>MAX30105_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 delay after initialization before application start-up </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="85" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" prot="public" static="no">
        <name>MAX30105_CMD_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 delay before attempting I2C transactions after a command is issued </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="86" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1a59bcab93572375f450386ef9b604c9e5" prot="public" static="no">
        <name>MAX30105_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max30105 delay after attempting an I2C transmit transaction and attempting an I2C receive transaction </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="87" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1aee7b193fcb571e0c3bc88c29f1662af4" prot="public" static="no">
        <name>ESP_TIMEOUT_CHECK</name>
        <param><defname>start</defname></param>
        <param><defname>len</defname></param>
        <initializer>((uint64_t)(esp_timer_get_time() - (start)) &gt;= (len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="93" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="max30105_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="94" column="9" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="max30105_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;max30105&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="99" column="19" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="max30105_8c_1a9138ff77433a78a44962c12954e586af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t max30105_i2c_read_byte_from</definition>
        <argsstring>(max30105_handle_t handle, const uint8_t reg_addr, uint8_t *const byte)</argsstring>
        <name>max30105_i2c_read_byte_from</name>
        <param>
          <type><ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>MAX30105 I2C read byte from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX30105 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX30105 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX30105 read transaction return byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="112" column="25" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="112" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="max30105_8c_1a8d540d6bd0b577b537389fe62324a06d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t max30105_i2c_write_byte_to</definition>
        <argsstring>(max30105_handle_t handle, const uint8_t reg_addr, const uint8_t byte)</argsstring>
        <name>max30105_i2c_write_byte_to</name>
        <param>
          <type><ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>MAX30105 I2C write byte to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX30105 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX30105 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX30105 write transaction input byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_max30105/max30105.c" line="142" column="25" bodyfile="components/peripherals/i2c/esp_max30105/max30105.c" bodystart="142" bodyend="152"/>
      </memberdef>
      <member refid="group__drivers_1gaabc9f71c22edd8f86e30f4c8f272f3ed" kind="function"><name>max30105_get_interrupt_status1_register</name></member>
      <member refid="group__drivers_1gaa7d230779617843339697177a2e9539a" kind="function"><name>max30105_get_interrupt_status2_register</name></member>
      <member refid="group__drivers_1gad7d0f67365ce70618b141ed3fd6dc420" kind="function"><name>max30105_get_interrupt_enable1_register</name></member>
      <member refid="group__drivers_1ga5c4b439eb292fd8a1a27dca8e64cac24" kind="function"><name>max30105_set_interrupt_enable1_register</name></member>
      <member refid="group__drivers_1gacdf531a20c00a19f39f46e49ed4b5195" kind="function"><name>max30105_get_interrupt_enable2_register</name></member>
      <member refid="group__drivers_1ga8e9655185febb88a4922f6d36ff5286e" kind="function"><name>max30105_set_interrupt_enable2_register</name></member>
      <member refid="group__drivers_1ga825dd4dccb365826ec6a5dc4a8a4b2b3" kind="function"><name>max30105_get_mode_configuration_register</name></member>
      <member refid="group__drivers_1gad8b44bbc555adccc623edb3b23fa1ea9" kind="function"><name>max30105_set_mode_configuration_register</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for MAX30105 sensor</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="max30105_8h" kindref="compound">include/max30105.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>MAX30105<sp/>definitions</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_INT_STS1_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x00)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_INT_STS2_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x01)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_INT_ENB1_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x02)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_INT_ENB2_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x03)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_FIFO_WR_PTR_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x04)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_FIFO_OVF_CNT_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x05)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_FIFO_RD_PTR_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x06)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_FIFO_DATA_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x07)<sp/></highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_FIFO_CONFIG_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x08)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_MODE_CONFIG_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x09)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_SPO2_CONFIG_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x0A)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_LED1_PA_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x0C)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_LED2_PA_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x0D)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_LED3_PA_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x0E)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_PILOT_PA_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x10)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_MLED1_MC_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x11)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_MLED2_MC_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x12)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_DIETEMP_INT_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1F)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_DIETEMP_FRAC_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x20)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_DIETEMP_CONFIG_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x21)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_PROX_INT_THLD_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x30)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_REV_ID_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFE)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_REG_PART_ID_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFE)<sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_DATA_POLL_TIMEOUT_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_DATA_READY_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(120)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_SETUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_CMD_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX30105_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)<sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="92"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_TIMEOUT_CHECK(start,<sp/>len)<sp/>((uint64_t)(esp_timer_get_time()<sp/>-<sp/>(start))<sp/>&gt;=<sp/>(len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;max30105&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>max30105_i2c_read_byte_from(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>bit8_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structmax30105__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>read<sp/>from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a59bcab93572375f450386ef9b604c9e5" kindref="member">MAX30105_TX_RX_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_receive(handle-&gt;<ref refid="structmax30105__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>rx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_receive,<sp/>i2c<sp/>read<sp/>from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>rx[0];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>max30105_i2c_write_byte_to(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit16_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structmax30105__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>to<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaabc9f71c22edd8f86e30f4c8f272f3ed" kindref="member">max30105_get_interrupt_status1_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/>max30105_interrupt_status1_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_read_byte_from(handle,<sp/><ref refid="max30105_8c_1a71c67a7a404578ff07c9f07efe6d702e" kindref="member">MAX30105_REG_INT_STS1_R</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>interrupt<sp/>status<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaa7d230779617843339697177a2e9539a" kindref="member">max30105_get_interrupt_status2_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/>max30105_interrupt_status2_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_read_byte_from(handle,<sp/><ref refid="max30105_8c_1a292e19a07c32fca0970804e8db8ff989" kindref="member">MAX30105_REG_INT_STS2_R</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>interrupt<sp/>status<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad7d0f67365ce70618b141ed3fd6dc420" kindref="member">max30105_get_interrupt_enable1_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/>max30105_interrupt_enable1_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_read_byte_from(handle,<sp/><ref refid="max30105_8c_1aea8b4cf44279275994efef2dc3e62f31" kindref="member">MAX30105_REG_INT_ENB1_RW</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>interrupt<sp/>enable<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5c4b439eb292fd8a1a27dca8e64cac24" kindref="member">max30105_set_interrupt_enable1_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>max30105_interrupt_enable1_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>max30105_interrupt_enable1_register_t<sp/>irq_enable1<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>register<sp/>reserved<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_enable1.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_write_byte_to(handle,<sp/><ref refid="max30105_8c_1aea8b4cf44279275994efef2dc3e62f31" kindref="member">MAX30105_REG_INT_ENB1_RW</ref>,<sp/>irq_enable1.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>interrupt<sp/>enable<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gacdf531a20c00a19f39f46e49ed4b5195" kindref="member">max30105_get_interrupt_enable2_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/>max30105_interrupt_enable2_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_read_byte_from(handle,<sp/><ref refid="max30105_8c_1aa34547bb0f52a0a55ded017b97bb9685" kindref="member">MAX30105_REG_INT_ENB2_RW</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>interrupt<sp/>enable<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga8e9655185febb88a4922f6d36ff5286e" kindref="member">max30105_set_interrupt_enable2_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>max30105_interrupt_enable2_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>max30105_interrupt_enable2_register_t<sp/>irq_enable2<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>register<sp/>reserved<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_enable2.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_enable2.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_write_byte_to(handle,<sp/><ref refid="max30105_8c_1aa34547bb0f52a0a55ded017b97bb9685" kindref="member">MAX30105_REG_INT_ENB2_RW</ref>,<sp/>irq_enable2.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>interrupt<sp/>enable<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga825dd4dccb365826ec6a5dc4a8a4b2b3" kindref="member">max30105_get_mode_configuration_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/>max30105_mode_configuration_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_read_byte_from(handle,<sp/><ref refid="max30105_8c_1a89e92da53f2583c7a8865b188b5a8cff" kindref="member">MAX30105_REG_MODE_CONFIG_RW</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>mode<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad8b44bbc555adccc623edb3b23fa1ea9" kindref="member">max30105_set_mode_configuration_register</ref>(<ref refid="group__drivers_1ga871d59246e5c9f84ce0edb737276caab" kindref="member">max30105_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>max30105_mode_configuration_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>max30105_mode_configuration_register_t<sp/>mode_config<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>register<sp/>reserved<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>mode_config.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>max30105_i2c_write_byte_to(handle,<sp/><ref refid="max30105_8c_1a89e92da53f2583c7a8865b188b5a8cff" kindref="member">MAX30105_REG_MODE_CONFIG_RW</ref>,<sp/>mode_config.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>mode<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="max30105_8c_1a3d01263f472fe57de4de15b9011bc8ac" kindref="member">MAX30105_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_max30105/max30105.c"/>
  </compounddef>
</doxygen>
