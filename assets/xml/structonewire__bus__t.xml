<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structonewire__bus__t" kind="struct" language="C++" prot="public">
    <compoundname>onewire_bus_t</compoundname>
    <includes refid="onewire__bus__interface_8h" local="no">onewire_bus_interface.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structonewire__bus__t_1afada884b3d82aeaefe2ec9a03cf9f0e9" prot="public" static="no" mutable="no">
        <type>esp_err_t(*</type>
        <definition>esp_err_t(* write_bytes) (onewire_bus_t *bus, const uint8_t *tx_data, uint8_t tx_data_size)</definition>
        <argsstring>)(onewire_bus_t *bus, const uint8_t *tx_data, uint8_t tx_data_size)</argsstring>
        <name>write_bytes</name>
        <qualifiedname>onewire_bus_t::write_bytes</qualifiedname>
        <briefdescription>
<para>Write bytes to 1-wire bus. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a blocking function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-Wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data to be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_data_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be sent, in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Write bytes to 1-Wire bus successfully</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG: Write bytes to 1-Wire bus failed because of invalid argument</para>
</listitem><listitem><para>ESP_FAIL: Write bytes to 1-Wire bus failed because of other errors </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="34" column="5" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structonewire__bus__t_1a5e264bcb0a9aa05a8a37a9a3911af3eb" prot="public" static="no" mutable="no">
        <type>esp_err_t(*</type>
        <definition>esp_err_t(* read_bytes) (onewire_bus_t *bus, uint8_t *rx_buf, size_t rx_buf_size)</definition>
        <argsstring>)(onewire_bus_t *bus, uint8_t *rx_buf, size_t rx_buf_size)</argsstring>
        <name>read_bytes</name>
        <qualifiedname>onewire_bus_t::read_bytes</qualifiedname>
        <briefdescription>
<para>Read bytes from 1-wire bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer to store received data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx_buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer to store received data, in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Read bytes from 1-Wire bus successfully</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG: Read bytes from 1-Wire bus failed because of invalid argument</para>
</listitem><listitem><para>ESP_FAIL: Read bytes from 1-Wire bus failed because of other errors </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="47" column="5" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structonewire__bus__t_1a41ec43f6b226c80f9a5b39945af01c14" prot="public" static="no" mutable="no">
        <type>esp_err_t(*</type>
        <definition>esp_err_t(* write_bit) (onewire_bus_handle_t handle, uint8_t tx_bit)</definition>
        <argsstring>)(onewire_bus_handle_t handle, uint8_t tx_bit)</argsstring>
        <name>write_bit</name>
        <qualifiedname>onewire_bus_t::write_bit</qualifiedname>
        <briefdescription>
<para>Write a bit to 1-wire bus, this is a blocking function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>1-wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_bit</parametername>
</parameternamelist>
<parameterdescription>
<para>bit to transmit, 0 for zero bit, other for one bit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK Write bit to 1-wire bus successfully.</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG Invalid argument. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="58" column="5" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structonewire__bus__t_1a0f3cd296844f271fa90a53b70fbe4bed" prot="public" static="no" mutable="no">
        <type>esp_err_t(*</type>
        <definition>esp_err_t(* read_bit) (onewire_bus_handle_t handle, uint8_t *rx_bit)</definition>
        <argsstring>)(onewire_bus_handle_t handle, uint8_t *rx_bit)</argsstring>
        <name>read_bit</name>
        <qualifiedname>onewire_bus_t::read_bit</qualifiedname>
        <briefdescription>
<para>Read a bit from 1-wire bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>1-wire bus handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rx_bit</parametername>
</parameternamelist>
<parameterdescription>
<para>received bit, 0 for zero bit, 1 for one bit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK Read bit from 1-wire bus successfully.</para>
</listitem><listitem><para>ESP_ERR_INVALID_ARG Invalid argument. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="69" column="5" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structonewire__bus__t_1a550161c28abdf6c7a2982c2180f10afc" prot="public" static="no" mutable="no">
        <type>esp_err_t(*</type>
        <definition>esp_err_t(* reset) (onewire_bus_t *bus)</definition>
        <argsstring>)(onewire_bus_t *bus)</argsstring>
        <name>reset</name>
        <qualifiedname>onewire_bus_t::reset</qualifiedname>
        <briefdescription>
<para>Send reset pulse to the bus, and check if there are devices attached to the bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-Wire bus handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Reset 1-Wire bus successfully and find device on the bus</para>
</listitem><listitem><para>ESP_ERR_NOT_FOUND: Reset 1-Wire bus successfully but no device found on the bus</para>
</listitem><listitem><para>ESP_FAIL: Reset 1-Wire bus failed because of other errors </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="81" column="5" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structonewire__bus__t_1a5ca49c820334b23d01c79e9f1a7ad011" prot="public" static="no" mutable="no">
        <type>esp_err_t(*</type>
        <definition>esp_err_t(* del) (onewire_bus_t *bus)</definition>
        <argsstring>)(onewire_bus_t *bus)</argsstring>
        <name>del</name>
        <qualifiedname>onewire_bus_t::del</qualifiedname>
        <briefdescription>
<para>Free 1-Wire bus resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bus</parametername>
</parameternamelist>
<parameterdescription>
<para>1-Wire bus handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>ESP_OK: Free resources successfully</para>
</listitem><listitem><para>ESP_FAIL: Free resources failed because error occurred </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="92" column="5" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>1-Wire bus interface definition </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" line="20" column="1" bodyfile="components/peripherals/owb/onewire_bus/interface/onewire_bus_interface.h" bodystart="20" bodyend="93"/>
    <listofallmembers>
      <member refid="structonewire__bus__t_1a5ca49c820334b23d01c79e9f1a7ad011" prot="public" virt="non-virtual"><scope>onewire_bus_t</scope><name>del</name></member>
      <member refid="structonewire__bus__t_1a0f3cd296844f271fa90a53b70fbe4bed" prot="public" virt="non-virtual"><scope>onewire_bus_t</scope><name>read_bit</name></member>
      <member refid="structonewire__bus__t_1a5e264bcb0a9aa05a8a37a9a3911af3eb" prot="public" virt="non-virtual"><scope>onewire_bus_t</scope><name>read_bytes</name></member>
      <member refid="structonewire__bus__t_1a550161c28abdf6c7a2982c2180f10afc" prot="public" virt="non-virtual"><scope>onewire_bus_t</scope><name>reset</name></member>
      <member refid="structonewire__bus__t_1a41ec43f6b226c80f9a5b39945af01c14" prot="public" virt="non-virtual"><scope>onewire_bus_t</scope><name>write_bit</name></member>
      <member refid="structonewire__bus__t_1afada884b3d82aeaefe2ec9a03cf9f0e9" prot="public" virt="non-virtual"><scope>onewire_bus_t</scope><name>write_bytes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
