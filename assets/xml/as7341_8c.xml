<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="as7341_8c" kind="file" language="C++">
    <compoundname>as7341.c</compoundname>
    <includes refid="as7341_8h" local="yes">include/as7341.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/peripherals/i2c/esp_as7341/as7341.c</label>
        <link refid="as7341_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/as7341.h</label>
        <link refid="as7341_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>as7341_version.h</label>
        <link refid="as7341__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="15">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="14">
        <label>esp_log.h</label>
      </node>
      <node id="8">
        <label>esp_mac.h</label>
      </node>
      <node id="16">
        <label>esp_timer.h</label>
      </node>
      <node id="17">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="18">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="as7341_8c_1a25e80c2756f7df29bb9f83cf841e2e5c" prot="public" static="no">
        <name>AS7341_PART_ID</name>
        <initializer>UINT8_C(0x09)</initializer>
        <briefdescription>
<para>as7341 I2C device part identifier </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="49" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aba5f2715b3fae419eabf9cb9b039cc1f" prot="public" static="no">
        <name>AS7341_ITIME_L</name>
        <initializer>UINT8_C(0x63)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="54" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aa728edb5720ed2348ad36eb699550d1e" prot="public" static="no">
        <name>AS7341_ITIME_M</name>
        <initializer>UINT8_C(0x64)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a3c28cb962b0fe3cf4a249eca00113d4b" prot="public" static="no">
        <name>AS7341_ITIME_H</name>
        <initializer>UINT8_C(0x65)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="56" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a3f8fec5f767ff229d6dc956a70fc9212" prot="public" static="no">
        <name>AS7341_CONFIG</name>
        <initializer>UINT8_C(0x70)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ab0c759b5b9d0d35ceb3ab007a3fa87e3" prot="public" static="no">
        <name>AS7341_DEV_STATUS</name>
        <initializer>UINT8_C(0x71)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_device_status_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="69" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a9f54b7d23b8b2763fdb7e4eed25d6fd1" prot="public" static="no">
        <name>AS7341_EDGE</name>
        <initializer>UINT8_C(0x72)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a1137037d52322f41c27602142f073083" prot="public" static="no">
        <name>AS7341_GPIO1</name>
        <initializer>UINT8_C(0x73)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_gpio1_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="71" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a896606250a0eb27977c9e8b70038d717" prot="public" static="no">
        <name>AS7341_LED</name>
        <initializer>UINT8_C(0x74)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_led_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="72" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a479a3339512db6263fb5d4b5e7a3d780" prot="public" static="no">
        <name>AS7341_ENABLE</name>
        <initializer>UINT8_C(0x80)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_enable_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="73" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a7ad3d2562bfb52d28467257ab5b65ed3" prot="public" static="no">
        <name>AS7341_ATIME</name>
        <initializer>UINT8_C(0x81)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="74" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1af0c8764437d3895c6c3092595980f73e" prot="public" static="no">
        <name>AS7341_WTIME</name>
        <initializer>UINT8_C(0x83)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aed8fea3ae9283e396765de903d9d0de4" prot="public" static="no">
        <name>AS7341_SP_TH_L_LSB</name>
        <initializer>UINT8_C(0x84)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="76" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a786d3dbdecf6a2a34a3879c79771dc46" prot="public" static="no">
        <name>AS7341_SP_TH_L_MSB</name>
        <initializer>UINT8_C(0x85)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="77" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aa4ffbf380a6b27015f52f4b0885c5faf" prot="public" static="no">
        <name>AS7341_SP_TH_H_LSB</name>
        <initializer>UINT8_C(0x86)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="78" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a3ee41543903de641950b55b61f5e502f" prot="public" static="no">
        <name>IAS7341_SP_TH_H_MSB</name>
        <initializer>UINT8_C(0x87)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="79" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a0ba249851e639ff795ca73530f480951" prot="public" static="no">
        <name>AS7341_AUXID</name>
        <initializer>UINT8_C(0x90)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="80" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ac62a5bc6720991dbe2e08ea80705c143" prot="public" static="no">
        <name>AS7341_REVID</name>
        <initializer>UINT8_C(0x91)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="81" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aa494b1e9f1e527f24e6ccc0aacd409aa" prot="public" static="no">
        <name>AS7341_ID</name>
        <initializer>UINT8_C(0x92)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="82" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a70d43be6cbfe27b44caf1908dae51fc9" prot="public" static="no">
        <name>AS7341_INT_STATUS</name>
        <initializer>UINT8_C(0x93)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_interrupt_status_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="84" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1abda111534e9b19c20ca36c4f84944928" prot="public" static="no">
        <name>AS7341_ASTATUS</name>
        <initializer>UINT8_C(0x94)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_astatus_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="86" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a6df777a329bb851165078b21b6d95605" prot="public" static="no">
        <name>AS7341_CH0_ADC_DATA_L</name>
        <initializer>UINT8_C(0x95)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="87" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a4233307fb381eade225b2d9677ef578f" prot="public" static="no">
        <name>AS7341_CH0_ADC_DATA_H</name>
        <initializer>UINT8_C(0x96)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="88" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a97493e3021b5a1aec62e550d1bb6ddbc" prot="public" static="no">
        <name>AS7341_CH1_ADC_DATA_L</name>
        <initializer>UINT8_C(0x97)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="89" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a35069c45e334581aa096a56976e93d4c" prot="public" static="no">
        <name>AS7341_CH1_ADC_DATA_H</name>
        <initializer>UINT8_C(0x98)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="90" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a6add4747f7fd033b6382f801423a82db" prot="public" static="no">
        <name>AS7341_CH2_ADC_DATA_L</name>
        <initializer>UINT8_C(0x99)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="91" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a8c40236240a146940c128104b1e317cb" prot="public" static="no">
        <name>AS7341_CH2_ADC_DATA_H</name>
        <initializer>UINT8_C(0x9a)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="92" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a185757d8106242120883d7e3c98e4ccc" prot="public" static="no">
        <name>AS7341_CH3_ADC_DATA_L</name>
        <initializer>UINT8_C(0x9b)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="93" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a5c578fb008f2101d71c17ac3f2285903" prot="public" static="no">
        <name>AS7341_CH3_ADC_DATA_H</name>
        <initializer>UINT8_C(0x9c)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="94" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1af46019276be2634b52a6885830b383e0" prot="public" static="no">
        <name>AS7341_CH4_ADC_DATA_L</name>
        <initializer>UINT8_C(0x9d)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="95" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a4ce271d7d269bc07a7e6d363a1eb2103" prot="public" static="no">
        <name>AS7341_CH4_ADC_DATA_H</name>
        <initializer>UINT8_C(0x9e)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="96" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a61b769a36332d23e210023e59c9fb80b" prot="public" static="no">
        <name>AS7341_CH5_ADC_DATA_L</name>
        <initializer>UINT8_C(0x9f)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="97" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aa69c394b545262a732444459e00a751b" prot="public" static="no">
        <name>AS7341_CH5_ADC_DATA_H</name>
        <initializer>UINT8_C(0xa0)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="98" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a824775754bcbfdb78a61019330b41689" prot="public" static="no">
        <name>AS7341_STATUS2</name>
        <initializer>UINT8_C(0xa3)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_status2_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="100" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a53a414810ca30bd1c2f6f197adf06635" prot="public" static="no">
        <name>AS7341_STATUS3</name>
        <initializer>UINT8_C(0xa4)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_status3_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="101" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a24b444a10e6ed3c114848e7831f13ad1" prot="public" static="no">
        <name>AS7341_STATUS5</name>
        <initializer>UINT8_C(0xa6)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_status5_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="102" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a5634404c721a7b35a03d8698329c08e8" prot="public" static="no">
        <name>AS7341_STATUS6</name>
        <initializer>UINT8_C(0xa7)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_status6_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="103" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aa1f0bad2efee241141a661ec72370c7d" prot="public" static="no">
        <name>AS7341_CONFIG0</name>
        <initializer>UINT8_C(0xa9)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config0_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="105" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ab58f3102781d789e73358cbfc1a75c2e" prot="public" static="no">
        <name>AS7341_CONFIG1</name>
        <initializer>UINT8_C(0xaa)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config1_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="106" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a287393b6000b445084d783c9b5248829" prot="public" static="no">
        <name>AS7341_CONFIG3</name>
        <initializer>UINT8_C(0xac)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config3_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="107" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a8adec03dd75f1a67726153a3ded8ea6d" prot="public" static="no">
        <name>AS7341_CONFIG6</name>
        <initializer>UINT8_C(0xaf)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config6_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="108" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a00dac058b29cc63329b682e292eb5ce5" prot="public" static="no">
        <name>AS7341_CONFIG8</name>
        <initializer>UINT8_C(0xb1)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config8_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="109" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a86dc62ab980cbeda1f25315b4f6ed823" prot="public" static="no">
        <name>AS7341_CONFIG9</name>
        <initializer>UINT8_C(0xb2)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config9_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="110" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aafe941e968008a055ee56a5b1cba2d89" prot="public" static="no">
        <name>AS7341_CONFIG10</name>
        <initializer>UINT8_C(0xb3)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config10_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="111" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a69d4c68048b6f17b0057170ad1303b0e" prot="public" static="no">
        <name>AS7341_CONFIG12</name>
        <initializer>UINT8_C(0xb5)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_config12_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="112" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ad72eb7fbc0a686522f529ad435c15871" prot="public" static="no">
        <name>AS7341_PERS</name>
        <initializer>UINT8_C(0xbd)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_pers_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="114" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a3f9d638849201751d92e16dc8696d632" prot="public" static="no">
        <name>AS7341_GPIO2</name>
        <initializer>UINT8_C(0xbe)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_gpio2_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="115" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a94c8b413da8bc6875ab2af94021daf84" prot="public" static="no">
        <name>AS7341_ASTEP_L</name>
        <initializer>UINT8_C(0xca)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="116" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a85db505f6c03e148739d1c63eba106bd" prot="public" static="no">
        <name>AS7341_ASTEP_H</name>
        <initializer>UINT8_C(0xcb)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="117" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aa6cfc00769035998ee5199f21e2c14e0" prot="public" static="no">
        <name>AS7341_AGC_GAIN_MAX</name>
        <initializer>UINT8_C(0xcf)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_agc_gain_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="118" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1af0e08c2baae1bfe179f730c35eca9a8c" prot="public" static="no">
        <name>AS7341_AZ_CONFIG</name>
        <initializer>UINT8_C(0xd6)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="119" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1af00ccf7e957d94d6e366fb2148ec9f6a" prot="public" static="no">
        <name>AS7341_FD_TIME1</name>
        <initializer>UINT8_C(0xd8)</initializer>
        <briefdescription>
<para>as7341 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="120" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a91b52752e9c29362694e01f6bc1f2e8f" prot="public" static="no">
        <name>AS7341_FD_TIME2</name>
        <initializer>UINT8_C(0xda)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_fd_time2_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="121" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ae94b843d430704a5e237e8a4deb38bdf" prot="public" static="no">
        <name>AS7341_FD_CONFIG0</name>
        <initializer>UINT8_C(0xd7)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_fd_config0_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="122" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1af90ae2a208cccc457000527c77719f47" prot="public" static="no">
        <name>AS7341_FD_STATUS</name>
        <initializer>UINT8_C(0xdb)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_fd_status_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="123" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ac2075a429a45ef351b3f3bcac67a8e0e" prot="public" static="no">
        <name>AS7341_INTENAB</name>
        <initializer>UINT8_C(0xf9)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_interrupt_enable_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="124" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a23731dd5facf0f120c09e5f40ee37d31" prot="public" static="no">
        <name>AS7341_CONTROL</name>
        <initializer>UINT8_C(0xfa)</initializer>
        <briefdescription>
<para>as7341 (see i2c_as7341_control_register_t) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="125" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1af6948ede8087baefb1c11032a9347b33" prot="public" static="no">
        <name>AS7341_DATA_POLL_TIMEOUT_MS</name>
        <initializer>UINT16_C(1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="128" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a6f3a31b7eb093fb7aafc18435a0b55cd" prot="public" static="no">
        <name>AS7341_DATA_READY_DELAY_MS</name>
        <initializer>UINT16_C(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="129" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a618f1c0f600d3ef057e5ff884e81b5f6" prot="public" static="no">
        <name>AS7341_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="130" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a32c4ac12df75cc0a78d9ac30537adb14" prot="public" static="no">
        <name>AS7341_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="131" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ad388cc83ce45cd5e27944561d22401c0" prot="public" static="no">
        <name>AS7341_RESET_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="132" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a2888d3da317cdfac93930873461dcaa0" prot="public" static="no">
        <name>AS7341_SETUP_DELAY_MS</name>
        <initializer>UINT16_C(15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="133" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1abd77916cbe961f04565dece25b127d2d" prot="public" static="no">
        <name>AS7341_CMD_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="134" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1a24f8231a95014d91ca6ce4d36288c9f0" prot="public" static="no">
        <name>AS7341_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="135" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1aee7b193fcb571e0c3bc88c29f1662af4" prot="public" static="no">
        <name>ESP_TIMEOUT_CHECK</name>
        <param><defname>start</defname></param>
        <param><defname>len</defname></param>
        <initializer>((uint64_t)(esp_timer_get_time() - (start)) &gt;= (len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="140" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="as7341_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="141" column="9" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="141" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="as7341_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;as7341&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="146" column="19" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="146" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="as7341_8c_1a7f5222277db63828100ba32a883c9340" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_i2c_write_byte_to</definition>
        <argsstring>(as7341_handle_t handle, const uint8_t reg_addr, const uint8_t byte)</argsstring>
        <name>as7341_i2c_write_byte_to</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>AS7341 I2C write byte to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 write transaction input byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="158" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="158" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1abfdba7cde3ff03a76ba40605fb9e4f17" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_i2c_read_from</definition>
        <argsstring>(as7341_handle_t handle, const uint8_t reg_addr, uint8_t *buffer, const uint8_t size)</argsstring>
        <name>as7341_i2c_read_from</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>AS7341 I2C read from register address transaction. This is a write and then read process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="179" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="179" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a85a7df7e2d45198487b4f642272c2b3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_i2c_read_word_from</definition>
        <argsstring>(as7341_handle_t handle, const uint8_t reg_addr, uint16_t *const word)</argsstring>
        <name>as7341_i2c_read_word_from</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *const</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>AS7341 I2C read halfword from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 read transaction return halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="198" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="198" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1afb01bf2dd638c18c9a0b21e0114f88f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_i2c_read_byte_from</definition>
        <argsstring>(as7341_handle_t handle, const uint8_t reg_addr, uint8_t *const byte)</argsstring>
        <name>as7341_i2c_read_byte_from</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>AS7341 I2C read byte from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 read transaction return byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="221" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="221" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a0048503977df8299cf306d5bd5d547d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float as7341_get_spectral_gain_sensitivity</definition>
        <argsstring>(as7341_spectral_gains_t gain)</argsstring>
        <name>as7341_get_spectral_gain_sensitivity</name>
        <param>
          <type><ref refid="group__drivers_1ga27b623acd6c033c0a6ffc1ed0244b502" kindref="member">as7341_spectral_gains_t</ref></type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Converts an ADC spectral gain sensitivity enumerator to a spectral gain sensitivity multiplier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC spectral gain sensitivity enumerator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float ADC spectral gain sensitivity multiplier. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="242" column="21" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="242" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a7a9e0c9985eb57380ce3d85a362cb6ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_get_integration_time</definition>
        <argsstring>(as7341_handle_t handle, float *time)</argsstring>
        <name>as7341_get_integration_time</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Calculated integration time (𝑡𝑖𝑛𝑡 = (𝐴𝑇𝐼𝑀𝐸 + 1) × (𝐴𝑆𝑇𝐸𝑃 + 1) × 2.78μ𝑠), from ATIME and ASTEP registers, in milli-seconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>as7341_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Integration time in milli-seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="279" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="279" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a2323e69e22bf3e24621b0ffb8723ceca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_setup_smux_lo_channels</definition>
        <argsstring>(as7341_handle_t handle)</argsstring>
        <name>as7341_setup_smux_lo_channels</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Configures SMUX registers for low channels F1-F4, Clear and NIR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>as7341_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="302" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="302" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a30ed9f1d09cea2b34263214ef6279b5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_setup_smux_hi_channels</definition>
        <argsstring>(as7341_handle_t handle)</argsstring>
        <name>as7341_setup_smux_hi_channels</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Configures SMUX registers for high channels F5-F8, Clear and NIR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>as7341_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="340" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="340" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a7633752a9b55ed0ccad7cb9b177987c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_set_smux_lo_channels</definition>
        <argsstring>(as7341_handle_t handle)</argsstring>
        <name>as7341_set_smux_lo_channels</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Configures SMUX registers for low channels (F1-F4, Clear and NIR). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>as7341_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="378" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="378" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a0a46992030e0931bc7a0063453f2bef7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_set_smux_hi_channels</definition>
        <argsstring>(as7341_handle_t handle)</argsstring>
        <name>as7341_set_smux_hi_channels</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Configures SMUX registers for high channels (F5-F8, Clear and NIR). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>as7341_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="399" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="399" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="as7341_8c_1a03276270791d0c6ffa381c7bdb731ee8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t as7341_setup_smux_flicker_detection</definition>
        <argsstring>(as7341_handle_t handle)</argsstring>
        <name>as7341_setup_smux_flicker_detection</name>
        <param>
          <type><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Configures SMUX registers for flicker detection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>as7341_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>AS7341 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_as7341/as7341.c" line="420" column="25" bodyfile="components/peripherals/i2c/esp_as7341/as7341.c" bodystart="420" bodyend="450"/>
      </memberdef>
      <member refid="group__drivers_1ga616a619c505b1e305eb93cb5b6649ad5" kind="function"><name>as7341_get_led_register</name></member>
      <member refid="group__drivers_1ga985cd6f80b3360ef5ddb1b3c9333c6ff" kind="function"><name>as7341_set_led_register</name></member>
      <member refid="group__drivers_1ga967b930a0c139ab84bdd3b05e17f9a0f" kind="function"><name>as7341_get_astatus_register</name></member>
      <member refid="group__drivers_1gae5f745494c5028adb1a6f3f12a9ed1e8" kind="function"><name>as7341_get_status2_register</name></member>
      <member refid="group__drivers_1gada15210baef6cc75808814f2b8552dac" kind="function"><name>as7341_disable_enable_register</name></member>
      <member refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kind="function"><name>as7341_get_enable_register</name></member>
      <member refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kind="function"><name>as7341_set_enable_register</name></member>
      <member refid="group__drivers_1gad68b26538cd1d5fdae7e45d423fadc2e" kind="function"><name>as7341_get_auxiliary_id_register</name></member>
      <member refid="group__drivers_1ga180d0f2987794ab39fd2a066b22ae824" kind="function"><name>as7341_get_revision_id_register</name></member>
      <member refid="group__drivers_1ga3a7aa8ee00b46e0999a5d6bb54ca6cf2" kind="function"><name>as7341_get_part_id_register</name></member>
      <member refid="group__drivers_1gaa4a221e2ea84c37bdd475b4e1a29bde4" kind="function"><name>as7341_get_config_register</name></member>
      <member refid="group__drivers_1ga55a833169ec9228fb2588afb774cc9fe" kind="function"><name>as7341_set_config_register</name></member>
      <member refid="group__drivers_1ga2926857d23521a0e765273ecfafce5f8" kind="function"><name>as7341_get_config0_register</name></member>
      <member refid="group__drivers_1ga736d79b5349ff251798725e3cec9bce2" kind="function"><name>as7341_set_config0_register</name></member>
      <member refid="group__drivers_1ga5931e4f655418d61a6bb764852dce6fb" kind="function"><name>as7341_get_config1_register</name></member>
      <member refid="group__drivers_1ga9188a6aac85800676506fb1b541e22bb" kind="function"><name>as7341_set_config1_register</name></member>
      <member refid="group__drivers_1gae3f997f1c1ade0a7c913637a402d7175" kind="function"><name>as7341_get_config6_register</name></member>
      <member refid="group__drivers_1gae0f278fd69005a486fef86c9b7bebf52" kind="function"><name>as7341_set_config6_register</name></member>
      <member refid="group__drivers_1ga9c9e05f39d2f3c031f453ae305648b36" kind="function"><name>as7341_get_atime_register</name></member>
      <member refid="group__drivers_1ga661b2e1fd733d3ccf71081e1dae7f97c" kind="function"><name>as7341_set_atime_register</name></member>
      <member refid="group__drivers_1ga13641fbc3ea284fffe6f7c4368aa218a" kind="function"><name>as7341_get_astep_register</name></member>
      <member refid="group__drivers_1ga018d2ed80444158d315800c763a54608" kind="function"><name>as7341_set_astep_register</name></member>
      <member refid="group__drivers_1ga6f6e63de3091678f72f19d936f24245c" kind="function"><name>as7341_get_flicker_detection_status_register</name></member>
      <member refid="group__drivers_1ga9b094b6dd6806ff45f59a630e9f4d3f3" kind="function"><name>as7341_set_flicker_detection_status_register</name></member>
      <member refid="group__drivers_1gabdd244dad2d26a3af946960952a8eaa9" kind="function"><name>as7341_clear_flicker_detection_status_register</name></member>
      <member refid="group__drivers_1gaaeb8b18f5f952d58b3aaab21ee801e30" kind="function"><name>as7341_enable_hi_register_bank</name></member>
      <member refid="group__drivers_1gafab077360e6f7fbbf4b4316e63bae644" kind="function"><name>as7341_enable_lo_register_bank</name></member>
      <member refid="group__drivers_1ga9eeac4357ce227edd26bf3d3da0d7c2a" kind="function"><name>as7341_set_smux_command</name></member>
      <member refid="group__drivers_1gab069ad9220c8849d2b938047e9420af0" kind="function"><name>as7341_init</name></member>
      <member refid="group__drivers_1gacc971a23bd190321d109026f790e6d61" kind="function"><name>as7341_get_spectral_measurements</name></member>
      <member refid="group__drivers_1gabfdc2f461c3d2caedfcd2ae7af6e1741" kind="function"><name>as7341_get_basic_counts</name></member>
      <member refid="group__drivers_1gaec81d4f54832ea5edd3f95440972c54e" kind="function"><name>as7341_get_flicker_detection_status</name></member>
      <member refid="group__drivers_1ga507581339c88f7b4b985dead6443f6ca" kind="function"><name>as7341_get_data_status</name></member>
      <member refid="group__drivers_1gaf9eda90f0593c0baafd52b856ceec2c1" kind="function"><name>as7341_get_atime</name></member>
      <member refid="group__drivers_1ga3b7289ee6afbb585bb34cf86b8a78142" kind="function"><name>as7341_set_atime</name></member>
      <member refid="group__drivers_1gadb90fff059916b771d5ee2b4655d3936" kind="function"><name>as7341_get_astep</name></member>
      <member refid="group__drivers_1ga4a9a9cc330e8120ff9f1c25d91b4f6fd" kind="function"><name>as7341_set_astep</name></member>
      <member refid="group__drivers_1ga9221fb2c4e5ba27119feab2a05b16b49" kind="function"><name>as7341_get_spectral_gain</name></member>
      <member refid="group__drivers_1gaba8a8ad4e703c319a2c2c717d3962b40" kind="function"><name>as7341_set_spectral_gain</name></member>
      <member refid="group__drivers_1gaa77f61c92d964558e829958fa90e256d" kind="function"><name>as7341_get_ambient_light_sensing_mode</name></member>
      <member refid="group__drivers_1gaf7e18bf3570fd0f2c93a051ca3516fbf" kind="function"><name>as7341_set_ambient_light_sensing_mode</name></member>
      <member refid="group__drivers_1ga66320962a6ce241ffc3afac05ea82b7f" kind="function"><name>as7341_enable_flicker_detection</name></member>
      <member refid="group__drivers_1ga433cb2029d0cef547b2549216bd66ae6" kind="function"><name>as7341_disable_flicker_detection</name></member>
      <member refid="group__drivers_1gae68c609a68336f84f6ee2b39a3444cb6" kind="function"><name>as7341_enable_smux</name></member>
      <member refid="group__drivers_1gaad1a1c083514ad5485899fae51327b51" kind="function"><name>as7341_enable_spectral_measurement</name></member>
      <member refid="group__drivers_1gad59d118e1a7f4579c7516a9e09f2d302" kind="function"><name>as7341_disable_spectral_measurement</name></member>
      <member refid="group__drivers_1ga621d23d292f922d0fb0bb5f1894f564a" kind="function"><name>as7341_enable_power</name></member>
      <member refid="group__drivers_1ga3a8830ec467e67d084b3a3f66d4b12d6" kind="function"><name>as7341_disable_power</name></member>
      <member refid="group__drivers_1ga066a4742bb09b5e255edebff326d2dc5" kind="function"><name>as7341_enable_led</name></member>
      <member refid="group__drivers_1ga035f076f217294c33785c0f85455c729" kind="function"><name>as7341_disable_led</name></member>
      <member refid="group__drivers_1ga67e5f9b57a1f45354fb5140f11bd6071" kind="function"><name>as7341_remove</name></member>
      <member refid="group__drivers_1gabcff7a6cad0195e4915fa7fa61b7bdb4" kind="function"><name>as7341_delete</name></member>
      <member refid="group__drivers_1gad6425e71e4be7003ad1ee101dfc4e2eb" kind="function"><name>as7341_get_fw_version</name></member>
      <member refid="group__drivers_1ga212b77fd2a3d157f629f02f9165f4904" kind="function"><name>as7341_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for AS7341 11-channel spectrometer (350nm to 1000nm)</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="as7341_8h" kindref="compound">include/as7341.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>AS7341<sp/>definitions</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_PART_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x09)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_ASTATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x60)<sp/><sp/>//!&lt;<sp/>as7341<sp/>(see<sp/>i2c_as7341_astatus_register_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH0_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x61)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH0_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x62)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ITIME_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x63)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ITIME_M<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x64)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ITIME_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x65)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH1_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x66)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH1_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x67)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH2_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x68)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH2_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x69)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH3_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x6a)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH3_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x6b)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH4_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x6c)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH4_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x6d)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH5_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x6e)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>I2C_AS7341_CH5_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x6f)<sp/><sp/>//!&lt;<sp/>as7341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x70)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_DEV_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x71)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_EDGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x72)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_GPIO1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x73)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_LED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x74)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ENABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x80)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ATIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x81)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_WTIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x83)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_SP_TH_L_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x84)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_SP_TH_L_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x85)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_SP_TH_H_LSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x86)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IAS7341_SP_TH_H_MSB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x87)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_AUXID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x90)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_REVID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x91)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x92)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_INT_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x93)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ASTATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x94)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH0_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x95)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH0_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x96)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH1_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x97)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH1_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x98)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH2_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x99)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH2_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x9a)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH3_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x9b)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH3_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x9c)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH4_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x9d)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH4_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x9e)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH5_ADC_DATA_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x9f)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CH5_ADC_DATA_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_STATUS2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa3)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_STATUS3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa4)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_STATUS5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa6)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_STATUS6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa7)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa9)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xaa)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xac)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xaf)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xb1)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xb2)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xb3)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONFIG12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xb5)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_PERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xbd)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_GPIO2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xbe)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ASTEP_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xca)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_ASTEP_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xcb)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_AGC_GAIN_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xcf)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_AZ_CONFIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xd6)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_FD_TIME1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xd8)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_FD_TIME2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xda)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_FD_CONFIG0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xd7)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_FD_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xdb)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_INTENAB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xf9)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xfa)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_DATA_POLL_TIMEOUT_MS<sp/>UINT16_C(1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_DATA_READY_DELAY_MS<sp/><sp/>UINT16_C(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/>UINT16_C(200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/>UINT16_C(200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_SETUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_CMD_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AS7341_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_TIMEOUT_CHECK(start,<sp/>len)<sp/>((uint64_t)(esp_timer_get_time()<sp/>-<sp/>(start))<sp/>&gt;=<sp/>(len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="144"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;as7341&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_i2c_write_byte_to(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit16_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_i2c_read_from(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;as7341_i2c_read_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_i2c_read_word_from(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;as7341_i2c_read_word_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>*word<sp/>=<sp/>(uint16_t)rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_i2c_read_byte_from(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>bit8_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;as7341_i2c_read_byte_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>rx[0];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>as7341_get_spectral_gain_sensitivity(<ref refid="group__drivers_1ga27b623acd6c033c0a6ffc1ed0244b502" kindref="member">as7341_spectral_gains_t</ref><sp/>gain)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>determine<sp/>gain<sp/>sensitivity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(gain)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_0_5X:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_1X:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_2X:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_4X:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_8X:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_16X:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_32X:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>32;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_64X:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>64;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_128X:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>128;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_256X:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>256;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AS7341_SPECTRAL_GAIN_512X:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>512;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_get_integration_time(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*time)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>atime;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>astep;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>astep<sp/>and<sp/>atime<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga13641fbc3ea284fffe6f7c4368aa218a" kindref="member">as7341_get_astep_register</ref>(handle,<sp/>&amp;astep),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>astep<sp/>register<sp/>for<sp/>get<sp/>integration<sp/>time<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9c9e05f39d2f3c031f453ae305648b36" kindref="member">as7341_get_atime_register</ref>(handle,<sp/>&amp;atime),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>atime<sp/>register<sp/>for<sp/>get<sp/>integration<sp/>time<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>integration<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>*time<sp/>=<sp/>(float)(atime<sp/>+<sp/>1)<sp/>*<sp/>(astep<sp/>+<sp/>1)<sp/>*<sp/>2.78f<sp/>/<sp/>1000.0f;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_setup_smux_lo_channels(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>config<sp/>transactions<sp/>(F1,<sp/>F2,<sp/>F3,<sp/>F4,<sp/>NIR,<sp/>CLEAR)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x00,<sp/>0x30),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F3<sp/>left<sp/>set<sp/>to<sp/>ADC2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x01,<sp/>0x01),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F1<sp/>left<sp/>set<sp/>to<sp/>ADC0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x02,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x03,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F8<sp/>left<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x04,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F6<sp/>left<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x05,<sp/>0x42),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F4<sp/>left<sp/>connected<sp/>to<sp/>ADC3/F2<sp/>connected<sp/>to<sp/>ADC1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x06,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F5<sp/>left<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x07,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F7<sp/>left<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x08,<sp/>0x50),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>CLEAR<sp/>connected<sp/>ADC4<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x09,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F5<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0a,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F7<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0b,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0c,<sp/>0x20),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F2<sp/>right<sp/>connected<sp/>to<sp/>ADC1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0d,<sp/>0x04),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F4<sp/>right<sp/>connected<sp/>to<sp/>ADC3<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0e,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F6/F8<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0f,<sp/>0x30),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F3<sp/>right<sp/>connected<sp/>to<sp/>ADC2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x10,<sp/>0x01),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F1<sp/>right<sp/>connected<sp/>to<sp/>ADC0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x11,<sp/>0x50),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>CLEAR<sp/>right<sp/>connected<sp/>to<sp/>ADC4<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x12,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x13,<sp/>0x06),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>NIR<sp/>connected<sp/>to<sp/>ADC5<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_setup_smux_hi_channels(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>config<sp/>transactions<sp/>(F5,<sp/>F6,<sp/>F7,<sp/>F8,<sp/>NIR,<sp/>CLEAR)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x00,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F3<sp/>left<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x01,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F1<sp/>left<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x02,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x03,<sp/>0x40),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F8<sp/>left<sp/>connected<sp/>to<sp/>ADC3<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x04,<sp/>0x02),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F6<sp/>left<sp/>connected<sp/>to<sp/>ADC1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x05,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F4/F2<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x06,<sp/>0x10),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F5<sp/>left<sp/>connected<sp/>to<sp/>ADC0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x07,<sp/>0x03),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F7<sp/>left<sp/>connected<sp/>to<sp/>ADC0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x08,<sp/>0x50),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>CLEAR<sp/>connected<sp/>to<sp/>ADC4<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x09,<sp/>0x10),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F5<sp/>right<sp/>connected<sp/>to<sp/>ADC0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0a,<sp/>0x03),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F7<sp/>right<sp/>connected<sp/>to<sp/>ADC0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0b,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0c,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F2<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0d,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F4<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0e,<sp/>0x24),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F8<sp/>right<sp/>connected<sp/>to<sp/>ADC2/F6<sp/>right<sp/>connected<sp/>to<sp/>ADC1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0f,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F3<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x10,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>F1<sp/>right<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x11,<sp/>0x50),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>CLEAR<sp/>right<sp/>connected<sp/>to<sp/>ADC4<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x12,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x13,<sp/>0x06),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>NIR<sp/>connected<sp/>to<sp/>ADC5<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_set_smux_lo_channels(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad59d118e1a7f4579c7516a9e09f2d302" kindref="member">as7341_disable_spectral_measurement</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>spectral<sp/>measurement<sp/>for<sp/>set<sp/>SMUX<sp/>low<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9eeac4357ce227edd26bf3d3da0d7c2a" kindref="member">as7341_set_smux_command</ref>(handle,<sp/><ref refid="group__drivers_1gga7f032ade17db7652f5be652c96877a72ac22283e8974a4b2e45ce9410439845a1" kindref="member">AS7341_SMUX_CMD_WRITE</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>SMUX<sp/>command<sp/>for<sp/>set<sp/>SMUX<sp/>low<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_setup_smux_lo_channels(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>SMUX<sp/>low<sp/>channels<sp/>for<sp/>set<sp/>SMUX<sp/>low<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae68c609a68336f84f6ee2b39a3444cb6" kindref="member">as7341_enable_smux</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>SMUX<sp/>for<sp/>set<sp/>SMUX<sp/>low<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_set_smux_hi_channels(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad59d118e1a7f4579c7516a9e09f2d302" kindref="member">as7341_disable_spectral_measurement</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>spectral<sp/>measurement<sp/>for<sp/>set<sp/>SMUX<sp/>high<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9eeac4357ce227edd26bf3d3da0d7c2a" kindref="member">as7341_set_smux_command</ref>(handle,<sp/><ref refid="group__drivers_1gga7f032ade17db7652f5be652c96877a72ac22283e8974a4b2e45ce9410439845a1" kindref="member">AS7341_SMUX_CMD_WRITE</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>SMUX<sp/>command<sp/>for<sp/>set<sp/>SMUX<sp/>high<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_setup_smux_hi_channels(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>SMUX<sp/>high<sp/>channels<sp/>for<sp/>set<sp/>SMUX<sp/>high<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae68c609a68336f84f6ee2b39a3444cb6" kindref="member">as7341_enable_smux</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>SMUX<sp/>for<sp/>set<sp/>SMUX<sp/>high<sp/>channels<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>as7341_setup_smux_flicker_detection(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>config<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x00,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x01,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x02,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x03,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x04,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x05,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x06,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x07,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x08,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x09,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0a,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0b,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0c,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0d,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0e,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x0f,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x10,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x11,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x12,<sp/>0x00),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>reserved<sp/>or<sp/>disabled<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/>0x13,<sp/>0x60),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>flicker<sp/>connected<sp/>to<sp/>ADC5<sp/>to<sp/>left<sp/>of<sp/>0x13<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga616a619c505b1e305eb93cb5b6649ad5" kindref="member">as7341_get_led_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_led_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a896606250a0eb27977c9e8b70038d717" kindref="member">AS7341_LED</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>LED<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga985cd6f80b3360ef5ddb1b3c9333c6ff" kindref="member">as7341_set_led_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_led_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1a896606250a0eb27977c9e8b70038d717" kindref="member">AS7341_LED</ref>,<sp/>reg.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>LED<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga967b930a0c139ab84bdd3b05e17f9a0f" kindref="member">as7341_get_astatus_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_astatus_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1abda111534e9b19c20ca36c4f84944928" kindref="member">AS7341_ASTATUS</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>astatus<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae5f745494c5028adb1a6f3f12a9ed1e8" kindref="member">as7341_get_status2_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_status2_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a824775754bcbfdb78a61019330b41689" kindref="member">AS7341_STATUS2</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gada15210baef6cc75808814f2b8552dac" kindref="member">as7341_disable_enable_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>enable<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_enable_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a479a3339512db6263fb5d4b5e7a3d780" kindref="member">AS7341_ENABLE</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_enable_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.reserved3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1a479a3339512db6263fb5d4b5e7a3d780" kindref="member">AS7341_ENABLE</ref>,<sp/>enable.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad68b26538cd1d5fdae7e45d423fadc2e" kindref="member">as7341_get_auxiliary_id_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_auxiliary_id_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a0ba249851e639ff795ca73530f480951" kindref="member">AS7341_AUXID</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>auxiliary<sp/>id<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga180d0f2987794ab39fd2a066b22ae824" kindref="member">as7341_get_revision_id_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_revision_id_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1ac62a5bc6720991dbe2e08ea80705c143" kindref="member">AS7341_REVID</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>revision<sp/>id<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga3a7aa8ee00b46e0999a5d6bb54ca6cf2" kindref="member">as7341_get_part_id_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_part_id_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1aa494b1e9f1e527f24e6ccc0aacd409aa" kindref="member">AS7341_ID</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>part<sp/>id<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaa4a221e2ea84c37bdd475b4e1a29bde4" kindref="member">as7341_get_config_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_config_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a3f8fec5f767ff229d6dc956a70fc9212" kindref="member">AS7341_CONFIG</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga55a833169ec9228fb2588afb774cc9fe" kindref="member">as7341_set_config_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_config_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config_register_t<sp/>config<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1a3f8fec5f767ff229d6dc956a70fc9212" kindref="member">AS7341_CONFIG</ref>,<sp/>config.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga2926857d23521a0e765273ecfafce5f8" kindref="member">as7341_get_config0_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_config0_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1aa1f0bad2efee241141a661ec72370c7d" kindref="member">AS7341_CONFIG0</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga736d79b5349ff251798725e3cec9bce2" kindref="member">as7341_set_config0_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_config0_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config0_register_t<sp/>config0<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>config0.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>config0.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>config0.bits.reserved3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1aa1f0bad2efee241141a661ec72370c7d" kindref="member">AS7341_CONFIG0</ref>,<sp/>config0.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5931e4f655418d61a6bb764852dce6fb" kindref="member">as7341_get_config1_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_config1_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1ab58f3102781d789e73358cbfc1a75c2e" kindref="member">AS7341_CONFIG1</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga9188a6aac85800676506fb1b541e22bb" kindref="member">as7341_set_config1_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_config1_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config1_register_t<sp/>config1<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1ab58f3102781d789e73358cbfc1a75c2e" kindref="member">AS7341_CONFIG1</ref>,<sp/>config1.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae3f997f1c1ade0a7c913637a402d7175" kindref="member">as7341_get_config6_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_config6_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a8adec03dd75f1a67726153a3ded8ea6d" kindref="member">AS7341_CONFIG6</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>6<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae0f278fd69005a486fef86c9b7bebf52" kindref="member">as7341_set_config6_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_config6_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config6_register_t<sp/>config6<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>config6.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>config6.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1a8adec03dd75f1a67726153a3ded8ea6d" kindref="member">AS7341_CONFIG6</ref>,<sp/>config6.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>6<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga9c9e05f39d2f3c031f453ae305648b36" kindref="member">as7341_get_atime_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1a7ad3d2562bfb52d28467257ab5b65ed3" kindref="member">AS7341_ATIME</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>atime<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga661b2e1fd733d3ccf71081e1dae7f97c" kindref="member">as7341_set_atime_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1a7ad3d2562bfb52d28467257ab5b65ed3" kindref="member">AS7341_ATIME</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>atime<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga13641fbc3ea284fffe6f7c4368aa218a" kindref="member">as7341_get_astep_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_word_from(handle,<sp/><ref refid="as7341_8c_1a94c8b413da8bc6875ab2af94021daf84" kindref="member">AS7341_ASTEP_L</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>astep<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga018d2ed80444158d315800c763a54608" kindref="member">as7341_set_astep_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1a94c8b413da8bc6875ab2af94021daf84" kindref="member">AS7341_ASTEP_L</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>astep<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga6f6e63de3091678f72f19d936f24245c" kindref="member">as7341_get_flicker_detection_status_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>as7341_flicker_detection_status_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_read_byte_from(handle,<sp/><ref refid="as7341_8c_1af90ae2a208cccc457000527c77719f47" kindref="member">AS7341_FD_STATUS</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>flicker<sp/>detection<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga9b094b6dd6806ff45f59a630e9f4d3f3" kindref="member">as7341_set_flicker_detection_status_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>as7341_flicker_detection_status_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_flicker_detection_status_register_t<sp/>flicker_detection_status<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>flicker_detection_status.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_i2c_write_byte_to(handle,<sp/><ref refid="as7341_8c_1af90ae2a208cccc457000527c77719f47" kindref="member">AS7341_FD_STATUS</ref>,<sp/>flicker_detection_status.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>flicker<sp/>detection<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gabdd244dad2d26a3af946960952a8eaa9" kindref="member">as7341_clear_flicker_detection_status_register</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>resettable<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_flicker_detection_status_register_t<sp/>flicker_detection_status<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bits.fd_saturation_detected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bits.fd_measurement_valid<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bits.fd_100hz_flicker_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bits.fd_120hz_flicker_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>device<sp/>handle<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9b094b6dd6806ff45f59a630e9f4d3f3" kindref="member">as7341_set_flicker_detection_status_register</ref>(handle,<sp/>flicker_detection_status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>flicker<sp/>detection<sp/>status<sp/>register<sp/>for<sp/>clear<sp/>flicker<sp/>detection<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaaeb8b18f5f952d58b3aaab21ee801e30" kindref="member">as7341_enable_hi_register_bank</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>from<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config0_register_t<sp/>config0_reg;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga2926857d23521a0e765273ecfafce5f8" kindref="member">as7341_get_config0_register</ref>(handle,<sp/>&amp;config0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>0<sp/>register<sp/>for<sp/>enable<sp/>high<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>high<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>config0_reg.bits.reg_bank_access<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>or<sp/>false<sp/>to<sp/>access<sp/>register<sp/>0x80<sp/>and<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga736d79b5349ff251798725e3cec9bce2" kindref="member">as7341_set_config0_register</ref>(handle,<sp/>config0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>0<sp/>register<sp/>for<sp/>enable<sp/>high<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafab077360e6f7fbbf4b4316e63bae644" kindref="member">as7341_enable_lo_register_bank</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>from<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config0_register_t<sp/>config0_reg;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga2926857d23521a0e765273ecfafce5f8" kindref="member">as7341_get_config0_register</ref>(handle,<sp/>&amp;config0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>0<sp/>register<sp/>for<sp/>enable<sp/>high<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>low<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>config0_reg.bits.reg_bank_access<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>or<sp/>true<sp/>to<sp/>access<sp/>register<sp/>0x60<sp/>to<sp/>0x74</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga736d79b5349ff251798725e3cec9bce2" kindref="member">as7341_set_config0_register</ref>(handle,<sp/>config0_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>0<sp/>register<sp/>for<sp/>enable<sp/>low<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga9eeac4357ce227edd26bf3d3da0d7c2a" kindref="member">as7341_set_smux_command</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gacd9eda447520eb4166bc70bf0d2e9f86" kindref="member">as7341_smux_commands_t</ref><sp/>command)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>smux<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config6_register_t<sp/>config6_reg<sp/>=<sp/>{<sp/>.bits.smux_command<sp/>=<sp/>command<sp/>};</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae0f278fd69005a486fef86c9b7bebf52" kindref="member">as7341_set_config6_register</ref>(handle,<sp/>config6_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>6<sp/>register<sp/>for<sp/>set<sp/>smux<sp/>command<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gab069ad9220c8849d2b938047e9420af0" kindref="member">as7341_init</ref>(i2c_master_bus_handle_t<sp/>master_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga927515039a6879c9453bd1eda2a49997" kindref="member">as7341_config_t</ref><sp/>*as7341_config,<sp/><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>*as7341_handle)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_part_id_register_t<sp/>part_id;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_revision_id_register_t<sp/>revision_id;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>master_handle<sp/>&amp;&amp;<sp/>as7341_config<sp/>);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_POWERUP_DELAY_MS));</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>exists<sp/>on<sp/>the<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>i2c_master_probe(master_handle,<sp/>as7341_config-&gt;<ref refid="structas7341__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ret,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>does<sp/>not<sp/>exist<sp/>at<sp/>address<sp/>0x%02x,<sp/>as7341<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>as7341_config-&gt;<ref refid="structas7341__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c<sp/>as7341<sp/>device,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structas7341__context__t_1ae59ccc5b9d2526757c4992de4cdc53c0" kindref="member">dev_config</ref><sp/>=<sp/>*as7341_config;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>i2c<sp/>device<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i2c_device_config_t<sp/>i2c_dev_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dev_addr_length<sp/><sp/><sp/><sp/>=<sp/>I2C_ADDR_BIT_LEN_7,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device_address<sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structas7341__context__t_1ae59ccc5b9d2526757c4992de4cdc53c0" kindref="member">dev_config</ref>.<ref refid="structas7341__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scl_speed_hz<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structas7341__context__t_1ae59ccc5b9d2526757c4992de4cdc53c0" kindref="member">dev_config</ref>.<ref refid="structas7341__config__s_1a770b3ab4bba557baec88287d86832a34" kindref="member">i2c_clock_speed</ref>,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(i2c_master_bus_add_device(master_handle,<sp/>&amp;i2c_dev_conf,<sp/>&amp;out_handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>new<sp/>bus<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga621d23d292f922d0fb0bb5f1894f564a" kindref="member">as7341_enable_power</ref>(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>power<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>part<sp/>id<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga3a7aa8ee00b46e0999a5d6bb54ca6cf2" kindref="member">as7341_get_part_id_register</ref>(out_handle,<sp/>&amp;part_id),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>part<sp/>id<sp/>register<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>revision<sp/>id<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga180d0f2987794ab39fd2a066b22ae824" kindref="member">as7341_get_revision_id_register</ref>(out_handle,<sp/>&amp;revision_id),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>revision<sp/>id<sp/>register<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;part_id<sp/>=<sp/>part_id.bits.identifier;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;revision_id<sp/>=<sp/>revision_id.bits.identifier;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>atime<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga3b7289ee6afbb585bb34cf86b8a78142" kindref="member">as7341_set_atime</ref>(out_handle,<sp/>out_handle-&gt;<ref refid="structas7341__context__t_1ae59ccc5b9d2526757c4992de4cdc53c0" kindref="member">dev_config</ref>.atime),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>atime<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>astep<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga4a9a9cc330e8120ff9f1c25d91b4f6fd" kindref="member">as7341_set_astep</ref>(out_handle,<sp/>out_handle-&gt;<ref refid="structas7341__context__t_1ae59ccc5b9d2526757c4992de4cdc53c0" kindref="member">dev_config</ref>.astep),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>astep<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*attempt<sp/>to<sp/>write<sp/>spectral<sp/>gain<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1gaba8a8ad4e703c319a2c2c717d3962b40" kindref="member">as7341_set_spectral_gain</ref>(out_handle,<sp/>out_handle-&gt;<ref refid="structas7341__context__t_1ae59ccc5b9d2526757c4992de4cdc53c0" kindref="member">dev_config</ref>.spectral_gain),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>spectral<sp/>gain<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>*as7341_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_APPSTART_DELAY_MS));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>err_handle:</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2c_master_bus_rm_device(out_handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gacc971a23bd190321d109026f790e6d61" kindref="member">as7341_get_spectral_measurements</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga9102f9187825808d80bcf5f77dbdc426" kindref="member">as7341_channels_spectral_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>spectral_data)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integration_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>start_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>rx[12]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>integration<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>as7341_get_integration_time(handle,<sp/>&amp;integration_time),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>integration<sp/>time,<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>************<sp/>LOW<sp/>CHANNELS<sp/>***********</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>setup<sp/>low<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>as7341_set_smux_lo_channels(handle),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>of<sp/>SMUX<sp/>low<sp/>channels<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>spectral<sp/>measurement<sp/>for<sp/>low<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gaad1a1c083514ad5485899fae51327b51" kindref="member">as7341_enable_spectral_measurement</ref>(handle),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>spectral<sp/>measurement,<sp/>low<sp/>channels,<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data,<sp/>low<sp/>channels,<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>check<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga507581339c88f7b4b985dead6443f6ca" kindref="member">as7341_get_data_status</ref>(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>ready<sp/>read,<sp/>low<sp/>channels,<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_DATA_READY_DELAY_MS));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(integration_time<sp/>+<sp/>50)<sp/>*<sp/>1000))</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>spectral<sp/>adc<sp/>data<sp/>from<sp/>low<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>as7341_i2c_read_from(handle,<sp/><ref refid="as7341_8c_1a6df777a329bb851165078b21b6d95605" kindref="member">AS7341_CH0_ADC_DATA_L</ref>,<sp/>rx,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx)),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>low<sp/>channel<sp/>measurements<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>adc<sp/>data<sp/>for<sp/>low<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1a1bafe90baa2dfcfd4b5ed0ce28e345cd" kindref="member">f1</ref><sp/>=<sp/>(uint16_t)rx[0]<sp/><sp/>|<sp/>(uint16_t)(rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1a142c71069ba1d764abbc01ecde519087" kindref="member">f2</ref><sp/>=<sp/>(uint16_t)rx[2]<sp/><sp/>|<sp/>(uint16_t)(rx[3]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1a5ab70a710d1b6e6d2120239336f84912" kindref="member">f3</ref><sp/>=<sp/>(uint16_t)rx[4]<sp/><sp/>|<sp/>(uint16_t)(rx[5]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1aea823337ec966766459efb504e2d0bb2" kindref="member">f4</ref><sp/>=<sp/>(uint16_t)rx[6]<sp/><sp/>|<sp/>(uint16_t)(rx[7]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>************<sp/>HIGH<sp/>CHANNELS<sp/>***********</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>setup<sp/>low<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>as7341_set_smux_hi_channels(handle),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>of<sp/>SMUX<sp/>high<sp/>channels<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>spectral<sp/>measurement<sp/>for<sp/>low<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gaad1a1c083514ad5485899fae51327b51" kindref="member">as7341_enable_spectral_measurement</ref>(handle),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>spectral<sp/>measurement,<sp/>high<sp/>channels,<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>start<sp/>time<sp/>for<sp/>timeout<sp/>monitoring<sp/>and<sp/>reset<sp/>data<sp/>ready<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>data_is_ready<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data,<sp/>high<sp/>channels,<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>check<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga507581339c88f7b4b985dead6443f6ca" kindref="member">as7341_get_data_status</ref>(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>ready<sp/>read,<sp/>low<sp/>channels,<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_DATA_READY_DELAY_MS));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(integration_time<sp/>+<sp/>50)<sp/>*<sp/>1000))</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>spectral<sp/>adc<sp/>data<sp/>from<sp/>high<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>as7341_i2c_read_from(handle,<sp/><ref refid="as7341_8c_1a6df777a329bb851165078b21b6d95605" kindref="member">AS7341_CH0_ADC_DATA_L</ref>,<sp/>rx,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx)),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>high<sp/>channel<sp/>measurements<sp/>for<sp/>get<sp/>adc<sp/>measurements<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>adc<sp/>data<sp/>for<sp/>high<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1a9834ccea49078a34d347ca38a5ac9724" kindref="member">f5</ref><sp/><sp/><sp/><sp/>=<sp/>(uint16_t)rx[0]<sp/><sp/>|<sp/>(uint16_t)(rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1a005080d6d4e70b420bf37eadcb49046c" kindref="member">f6</ref><sp/><sp/><sp/><sp/>=<sp/>(uint16_t)rx[2]<sp/><sp/>|<sp/>(uint16_t)(rx[3]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1a3731c683a4938e3e107e16ed5dd7f391" kindref="member">f7</ref><sp/><sp/><sp/><sp/>=<sp/>(uint16_t)rx[4]<sp/><sp/>|<sp/>(uint16_t)(rx[5]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;<ref refid="structas7341__channels__spectral__data__s_1ae727679fba9b76c8ea72a73060a3a280" kindref="member">f8</ref><sp/><sp/><sp/><sp/>=<sp/>(uint16_t)rx[6]<sp/><sp/>|<sp/>(uint16_t)(rx[7]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;clear<sp/>=<sp/>(uint16_t)rx[8]<sp/><sp/>|<sp/>(uint16_t)(rx[9]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>spectral_data-&gt;nir<sp/><sp/><sp/>=<sp/>(uint16_t)rx[10]<sp/>|<sp/>(uint16_t)(rx[11]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gabfdc2f461c3d2caedfcd2ae7af6e1741" kindref="member">as7341_get_basic_counts</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga9102f9187825808d80bcf5f77dbdc426" kindref="member">as7341_channels_spectral_data_t</ref><sp/>spectral_data,<sp/><ref refid="group__drivers_1gad0cdfc4fec333ed2019e55fc8e1ebb24" kindref="member">as7341_channels_basic_counts_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>basic_counts_data)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config1_register_t<sp/>config1;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>registers<sp/>(config1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5931e4f655418d61a6bb764852dce6fb" kindref="member">as7341_get_config1_register</ref>(handle,<sp/>&amp;config1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>1<sp/>register<sp/>for<sp/>get<sp/>integration<sp/>time<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>determine<sp/>gain<sp/>sensitivity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>as7341_get_spectral_gain_sensitivity(config1.bits.spectral_gain);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>integration<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>integration_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_get_integration_time(handle,<sp/>&amp;integration_time),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>integration<sp/>time<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>adc<sp/>value<sp/>to<sp/>basic<sp/>counts<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;<ref refid="structas7341__channels__basic__counts__data__s_1a343cbd40689d0f99b5a33e76a7e5fd86" kindref="member">f1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1a1bafe90baa2dfcfd4b5ed0ce28e345cd" kindref="member">f1</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;<ref refid="structas7341__channels__basic__counts__data__s_1a472bac04d61aeaed4a3e6b72be0b535e" kindref="member">f2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1a142c71069ba1d764abbc01ecde519087" kindref="member">f2</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;<ref refid="structas7341__channels__basic__counts__data__s_1a98a05c93d5a9c932fe24b606a5a31223" kindref="member">f3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1a5ab70a710d1b6e6d2120239336f84912" kindref="member">f3</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;f4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1aea823337ec966766459efb504e2d0bb2" kindref="member">f4</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;f5<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1a9834ccea49078a34d347ca38a5ac9724" kindref="member">f5</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;f6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1a005080d6d4e70b420bf37eadcb49046c" kindref="member">f6</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;f7<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1a3731c683a4938e3e107e16ed5dd7f391" kindref="member">f7</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;f8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.<ref refid="structas7341__channels__spectral__data__s_1ae727679fba9b76c8ea72a73060a3a280" kindref="member">f8</ref><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;clear<sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.clear<sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>basic_counts_data-&gt;nir<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)spectral_data.nir<sp/><sp/><sp/>/<sp/>gain<sp/>*<sp/>integration_time;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaec81d4f54832ea5edd3f95440972c54e" kindref="member">as7341_get_flicker_detection_status</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga820a0faa02578e68ad310882a50af614" kindref="member">as7341_flicker_detection_states_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_flicker_detection_status_register_t<sp/>fd_status;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/>start_time<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>disable<sp/>enable<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gada15210baef6cc75808814f2b8552dac" kindref="member">as7341_disable_enable_register</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>enable<sp/>register,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga621d23d292f922d0fb0bb5f1894f564a" kindref="member">as7341_enable_power</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>power,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>SMU<sp/>configuration<sp/>from<sp/>RAM<sp/>to<sp/>set<sp/>SMUX<sp/>chain<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9eeac4357ce227edd26bf3d3da0d7c2a" kindref="member">as7341_set_smux_command</ref>(handle,<sp/><ref refid="group__drivers_1gga7f032ade17db7652f5be652c96877a72ac22283e8974a4b2e45ce9410439845a1" kindref="member">AS7341_SMUX_CMD_WRITE</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>SMUX<sp/>command<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>setup<sp/>SMUX<sp/>flicker<sp/>detection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>as7341_setup_smux_flicker_detection(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;setup<sp/>SMUX<sp/>for<sp/>flicker<sp/>detection,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>SMUX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae68c609a68336f84f6ee2b39a3444cb6" kindref="member">as7341_enable_smux</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>SMUX,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>spectral<sp/>measurement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaad1a1c083514ad5485899fae51327b51" kindref="member">as7341_enable_spectral_measurement</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>spectral<sp/>measurement,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>flicker<sp/>detection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga66320962a6ce241ffc3afac05ea82b7f" kindref="member">as7341_enable_flicker_detection</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>flicker<sp/>detection,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data,<sp/>high<sp/>channels,<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>check<sp/>if<sp/>flicker<sp/>detection<sp/>measurement<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga6f6e63de3091678f72f19d936f24245c" kindref="member">as7341_get_flicker_detection_status_register</ref>(handle,<sp/>&amp;fd_status),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>flicker<sp/>detection<sp/>status<sp/>register,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>measurement<sp/>is<sp/>valid<sp/>or<sp/>saturation<sp/>is<sp/>detected,<sp/>set<sp/>data<sp/>ready<sp/>flag<sp/>to<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fd_status.bits.fd_measurement_valid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/>fd_status.bits.fd_saturation_detected<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(5));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(500)<sp/>*<sp/>1000))<sp/></highlight><highlight class="comment">//<sp/>start<sp/>with<sp/>500<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>disable<sp/>flicker<sp/>detection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga433cb2029d0cef547b2549216bd66ae6" kindref="member">as7341_disable_flicker_detection</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>flicker<sp/>detection,<sp/>for<sp/>get<sp/>flicker<sp/>detection<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(TAG,<sp/></highlight><highlight class="stringliteral">&quot;FD<sp/>Status<sp/>Register:<sp/><sp/>0x%02x<sp/>(0b%s)&quot;</highlight><highlight class="normal">,<sp/>fd_status.reg,<sp/><ref refid="group__utilities_1gad5099995b3a7cf28d0daa6a503b98645" kindref="member">uint8_to_binary</ref>(fd_status.reg));</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fd_status.bits.fd_saturation_detected<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/><ref refid="group__drivers_1gga7a2c8b2911ff3c7db880944f2cfe0c37a651a8836908bc9c7cd127f9828ef77e9" kindref="member">AS7341_FLICKER_DETECTION_SATURATED</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fd_status.bits.fd_measurement_valid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_status.bits.fd_100hz_flicker_valid<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_status.bits.fd_120hz_flicker_valid<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/><ref refid="group__drivers_1gga7a2c8b2911ff3c7db880944f2cfe0c37abf4afc7aec706e16693843db9bc75710" kindref="member">AS7341_FLICKER_DETECTION_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fd_status.bits.fd_100hz_flicker_valid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/><ref refid="group__drivers_1gga7a2c8b2911ff3c7db880944f2cfe0c37acafaf6cde212dc990377125130aed843" kindref="member">AS7341_FLICKER_DETECTION_100HZ</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fd_status.bits.fd_120hz_flicker_valid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/><ref refid="group__drivers_1gga7a2c8b2911ff3c7db880944f2cfe0c37a6f917238f019fa6f87f6e8c3f38b90b3" kindref="member">AS7341_FLICKER_DETECTION_120HZ</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/><ref refid="group__drivers_1gga7a2c8b2911ff3c7db880944f2cfe0c37ac9dc1ffb1c7cce6bdc967ab38bcf3fa7" kindref="member">AS7341_FLICKER_DETECTION_INVALID</ref>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga507581339c88f7b4b985dead6443f6ca" kindref="member">as7341_get_data_status</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_status2_register_t<sp/>status2;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>device<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae5f745494c5028adb1a6f3f12a9ed1e8" kindref="member">as7341_get_status2_register</ref>(handle,<sp/>&amp;status2),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>2<sp/>register<sp/>(data<sp/>ready<sp/>state)<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status2.bits.spectral_valid;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaf9eda90f0593c0baafd52b856ceec2c1" kindref="member">as7341_get_atime</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>atime)<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9c9e05f39d2f3c031f453ae305648b36" kindref="member">as7341_get_atime_register</ref>(handle,<sp/>atime),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>atime<sp/>register<sp/>for<sp/>get<sp/>atime<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga3b7289ee6afbb585bb34cf86b8a78142" kindref="member">as7341_set_atime</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>atime)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga661b2e1fd733d3ccf71081e1dae7f97c" kindref="member">as7341_set_atime_register</ref>(handle,<sp/>atime),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>atime<sp/>register<sp/>for<sp/>set<sp/>atime<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gadb90fff059916b771d5ee2b4655d3936" kindref="member">as7341_get_astep</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>astep)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga13641fbc3ea284fffe6f7c4368aa218a" kindref="member">as7341_get_astep_register</ref>(handle,<sp/>astep),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>atime<sp/>register<sp/>for<sp/>get<sp/>astep<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga4a9a9cc330e8120ff9f1c25d91b4f6fd" kindref="member">as7341_set_astep</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>astep)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga018d2ed80444158d315800c763a54608" kindref="member">as7341_set_astep_register</ref>(handle,<sp/>astep),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>astep<sp/>register<sp/>for<sp/>set<sp/>astep<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga9221fb2c4e5ba27119feab2a05b16b49" kindref="member">as7341_get_spectral_gain</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga27b623acd6c033c0a6ffc1ed0244b502" kindref="member">as7341_spectral_gains_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gain)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config1_register_t<sp/>config1;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5931e4f655418d61a6bb764852dce6fb" kindref="member">as7341_get_config1_register</ref>(handle,<sp/>&amp;config1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>1<sp/>register<sp/>for<sp/>get<sp/>spectral<sp/>gain<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>*gain<sp/>=<sp/>config1.bits.spectral_gain;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaba8a8ad4e703c319a2c2c717d3962b40" kindref="member">as7341_set_spectral_gain</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga27b623acd6c033c0a6ffc1ed0244b502" kindref="member">as7341_spectral_gains_t</ref><sp/>gain)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config1_register_t<sp/>config1;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5931e4f655418d61a6bb764852dce6fb" kindref="member">as7341_get_config1_register</ref>(handle,<sp/>&amp;config1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>1<sp/>register<sp/>for<sp/>get<sp/>spectral<sp/>gain<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>spectral<sp/>gain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.bits.spectral_gain<sp/>=<sp/>gain;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga9188a6aac85800676506fb1b541e22bb" kindref="member">as7341_set_config1_register</ref>(handle,<sp/>config1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>1<sp/>register<sp/>for<sp/>set<sp/>spectral<sp/>gain<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaa77f61c92d964558e829958fa90e256d" kindref="member">as7341_get_ambient_light_sensing_mode</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga22f338d9e4256e61c9cfa261878ea595" kindref="member">as7341_als_modes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config_register_t<sp/>config;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>low<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafab077360e6f7fbbf4b4316e63bae644" kindref="member">as7341_enable_lo_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>low<sp/>register<sp/>bank<sp/>for<sp/>get<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaa4a221e2ea84c37bdd475b4e1a29bde4" kindref="member">as7341_get_config_register</ref>(handle,<sp/>&amp;config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>get<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>high<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaaeb8b18f5f952d58b3aaab21ee801e30" kindref="member">as7341_enable_hi_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>high<sp/>register<sp/>bank<sp/>for<sp/>get<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>config.bits.irq_mode;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaf7e18bf3570fd0f2c93a051ca3516fbf" kindref="member">as7341_set_ambient_light_sensing_mode</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga22f338d9e4256e61c9cfa261878ea595" kindref="member">as7341_als_modes_t</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config_register_t<sp/>config;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>low<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafab077360e6f7fbbf4b4316e63bae644" kindref="member">as7341_enable_lo_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>low<sp/>register<sp/>bank<sp/>for<sp/>set<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaa4a221e2ea84c37bdd475b4e1a29bde4" kindref="member">as7341_get_config_register</ref>(handle,<sp/>&amp;config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>set<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.irq_mode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga55a833169ec9228fb2588afb774cc9fe" kindref="member">as7341_set_config_register</ref>(handle,<sp/>config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>for<sp/>set<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>high<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaaeb8b18f5f952d58b3aaab21ee801e30" kindref="member">as7341_enable_hi_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>high<sp/>register<sp/>bank<sp/>for<sp/>set<sp/>ambient<sp/>light<sp/>sensing<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga66320962a6ce241ffc3afac05ea82b7f" kindref="member">as7341_enable_flicker_detection</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>flicker<sp/>detection<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>flicker<sp/>detection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.flicker_detection_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>flicker<sp/>detection<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga433cb2029d0cef547b2549216bd66ae6" kindref="member">as7341_disable_flicker_detection</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>disable<sp/>flicker<sp/>detection<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>flicker<sp/>detection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.flicker_detection_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>disable<sp/>flicker<sp/>detection<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae68c609a68336f84f6ee2b39a3444cb6" kindref="member">as7341_enable_smux</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>SMUX<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>smux<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.smux_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>SMUX<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>SMUX<sp/>operation<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>timeout<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>time<sp/>=<sp/>0;<sp/>time<sp/>&lt;<sp/>timeout;<sp/>time++)<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>SMUXEN<sp/>bit<sp/>is<sp/>cleared<sp/>once<sp/>the<sp/>SMUX<sp/>operation<sp/>is<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>SMUX<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enable.bits.smux_enabled)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(AS7341_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_STATE;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaad1a1c083514ad5485899fae51327b51" kindref="member">as7341_enable_spectral_measurement</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>spectral<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>spectral<sp/>measurement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.spectral_measurement_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>spectral<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad59d118e1a7f4579c7516a9e09f2d302" kindref="member">as7341_disable_spectral_measurement</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>disable<sp/>spectral<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>spectral<sp/>measurement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.spectral_measurement_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>spectral<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga621d23d292f922d0fb0bb5f1894f564a" kindref="member">as7341_enable_power</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>power<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.power_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>enable<sp/>power<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga3a8830ec467e67d084b3a3f66d4b12d6" kindref="member">as7341_disable_power</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_enable_register_t<sp/>enable;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga1d4995220569e78a732a6875b86864f3" kindref="member">as7341_get_enable_register</ref>(handle,<sp/>&amp;enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>enable<sp/>register<sp/>for<sp/>disable<sp/>power<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>enable.bits.power_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gae7759cb5e1b5e888a800c548ace96341" kindref="member">as7341_set_enable_register</ref>(handle,<sp/>enable),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>enable<sp/>register<sp/>for<sp/>disable<sp/>power<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga066a4742bb09b5e255edebff326d2dc5" kindref="member">as7341_enable_led</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config_register_t<sp/>config;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_led_register_t<sp/><sp/><sp/><sp/>led;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>low<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafab077360e6f7fbbf4b4316e63bae644" kindref="member">as7341_enable_lo_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>low<sp/>register<sp/>bank<sp/>for<sp/>enable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaa4a221e2ea84c37bdd475b4e1a29bde4" kindref="member">as7341_get_config_register</ref>(handle,<sp/>&amp;config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>enable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>to<sp/>led<sp/>register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga616a619c505b1e305eb93cb5b6649ad5" kindref="member">as7341_get_led_register</ref>(handle,<sp/>&amp;led),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>led<sp/>register<sp/>for<sp/>enable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>led<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.led_ldr_control_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>led.bits.led_ldr_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga55a833169ec9228fb2588afb774cc9fe" kindref="member">as7341_set_config_register</ref>(handle,<sp/>config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>for<sp/>enable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>to<sp/>led<sp/>register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga985cd6f80b3360ef5ddb1b3c9333c6ff" kindref="member">as7341_set_led_register</ref>(handle,<sp/>led),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>led<sp/>register<sp/>for<sp/>enable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>high<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaaeb8b18f5f952d58b3aaab21ee801e30" kindref="member">as7341_enable_hi_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>high<sp/>register<sp/>bank<sp/>for<sp/>enable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga035f076f217294c33785c0f85455c729" kindref="member">as7341_disable_led</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_config_register_t<sp/>config;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>as7341_led_register_t<sp/><sp/><sp/><sp/>led;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>low<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafab077360e6f7fbbf4b4316e63bae644" kindref="member">as7341_enable_lo_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>low<sp/>register<sp/>bank<sp/>for<sp/>disable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaa4a221e2ea84c37bdd475b4e1a29bde4" kindref="member">as7341_get_config_register</ref>(handle,<sp/>&amp;config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>for<sp/>disable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>to<sp/>led<sp/>register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga616a619c505b1e305eb93cb5b6649ad5" kindref="member">as7341_get_led_register</ref>(handle,<sp/>&amp;led),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>led<sp/>register<sp/>for<sp/>disable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>led<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.led_ldr_control_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>led.bits.led_ldr_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga55a833169ec9228fb2588afb774cc9fe" kindref="member">as7341_set_config_register</ref>(handle,<sp/>config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>for<sp/>disable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>to<sp/>led<sp/>register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga985cd6f80b3360ef5ddb1b3c9333c6ff" kindref="member">as7341_set_led_register</ref>(handle,<sp/>led),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>led<sp/>register<sp/>for<sp/>disable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>high<sp/>register<sp/>bank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaaeb8b18f5f952d58b3aaab21ee801e30" kindref="member">as7341_enable_hi_register_bank</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>high<sp/>register<sp/>bank<sp/>for<sp/>disable<sp/>LED<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga67e5f9b57a1f45354fb5140f11bd6071" kindref="member">as7341_remove</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2c_master_bus_rm_device(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gabcff7a6cad0195e4915fa7fa61b7bdb4" kindref="member">as7341_delete</ref>(<ref refid="group__drivers_1gaca771a90491a159df8e5eaa1f23cb61f" kindref="member">as7341_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga67e5f9b57a1f45354fb5140f11bd6071" kindref="member">as7341_remove</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus,<sp/>delete<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>handle<sp/>instance<sp/>and<sp/>free<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle-&gt;<ref refid="structas7341__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__drivers_1gad6425e71e4be7003ad1ee101dfc4e2eb" kindref="member">as7341_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AS7341_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal">int32_t<sp/><ref refid="group__drivers_1ga212b77fd2a3d157f629f02f9165f4904" kindref="member">as7341_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AS7341_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_as7341/as7341.c"/>
  </compounddef>
</doxygen>
