.TH "components/utilities/esp_wx_utils/wx_utils.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/utilities/esp_wx_utils/wx_utils.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdio\&.h>\fP
.br
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include <esp_err\&.h>\fP
.br
\fR#include <math\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBwx_scalar_range_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBwx_set_temperature_range\fP (const float maximum, const float minimum)"
.br
.RI "Sets the global weather utilities maximum and minimum temperature range (\fRwx_temperature_range\fP) in degrees Celsius\&. "
.ti -1c
.RI "esp_err_t \fBwx_set_humidity_range\fP (const float maximum, const float minimum)"
.br
.RI "Sets the global weather utilities humidity maximum and minimum range (\fRwx_humidity_range\fP) in percent\&. "
.ti -1c
.RI "esp_err_t \fBwx_td_range\fP (const float temperature, const float humidity, float *const dewpoint)"
.br
.RI "Calculates dewpoint temperature from air temperature and relative humidity with range validation\&. The default temperature range is from -40 to 125 degrees Celsius and default humidity range is from 0 to 100 percent\&. 
.br
 The default ranges can be adjusted through the set range functions\&. "
.ti -1c
.RI "const double \fBwx_c_to_k\fP (const double t)"
.br
.RI "Converts degrees celsius to kelvin\&. "
.ti -1c
.RI "const double \fBwx_k_to_c\fP (const double t)"
.br
.RI "Converts kelvin to degrees celsius\&. "
.ti -1c
.RI "const double \fBwx_v\fP (const double t)"
.br
.RI "Calculates v at temperature\&. "
.ti -1c
.RI "const double \fBwx_pwi\fP (const double t)"
.br
.RI "Calculates aqueous vapor pressure of ice at temperature\&. "
.ti -1c
.RI "const double \fBwx_pws\fP (const double t)"
.br
.RI "Calculates aqueous vapor pressure of water at temperature\&. "
.ti -1c
.RI "const double \fBwx_pressure_at_sea_level\fP (const double pa, const double l, const double ta)"
.br
.RI "Calculates the reduced air pressure QFF (pressure at sea level) without QFE\&. "
.ti -1c
.RI "const double \fBwx_qfe\fP (const double pa, const double l, const double ta)"
.br
.RI "Calculates the reduced air pressure QFE (pressure at a certain level)\&. "
.ti -1c
.RI "const double \fBwx_qff\fP (const double qfe, const double l, const double ta)"
.br
.RI "Calculates the reduced air pressure QFF (pressure at sea level)\&. "
.ti -1c
.RI "const double \fBwx_qnh\fP (const double qfe, const double h, const double a)"
.br
.RI "Calculates the reduced air pressure QNH (pressure at sea level according to ICAO standard atmospheric)\&. "
.ti -1c
.RI "const double \fBwx_td\fP (const double ta, const double hr)"
.br
.RI "Calculates dewpoint temperature from air temperature and relative humidity\&. "
.ti -1c
.RI "const double \fBwx_tw\fP (const double ta, const double hr, const double td, const double pa)"
.br
.RI "Calculates wetbulb temperature from air temperature, relative humidity, and dewpoint temperature\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
