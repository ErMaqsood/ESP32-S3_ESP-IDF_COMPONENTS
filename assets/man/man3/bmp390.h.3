.TH "components/peripherals/i2c/esp_bmp390/include/bmp390.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/peripherals/i2c/esp_bmp390/include/bmp390.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include <esp_err\&.h>\fP
.br
\fR#include <driver/i2c_master\&.h>\fP
.br
\fR#include <type_utils\&.h>\fP
.br
\fR#include 'bmp390_version\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBbmp390_cal_factors_s\fP"
.br
.RI "BMP390 temperature and pressure calibration factors structure\&. "
.ti -1c
.RI "struct \fBbmp390_conv_cal_factors_s\fP"
.br
.RI "BMP390 temperature and pressure converted calibration factors structure\&. "
.ti -1c
.RI "struct \fBbmp390_config_s\fP"
.br
.RI "BMP390 configuration structure\&. "
.ti -1c
.RI "struct \fBbmp390_context_t\fP"
.br
.RI "BMP390 context structure\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBI2C_BMP390_DEV_CLK_SPD\fP   UINT32_C(100000)"
.br
.RI "bmp390 I2C default clock frequency (100KHz) "
.ti -1c
.RI "#define \fBI2C_BMP390_DEV_ADDR_LO\fP   UINT8_C(0x76)"
.br
.RI "bmp390 I2C address when ADDR pin low "
.ti -1c
.RI "#define \fBI2C_BMP390_DEV_ADDR_HI\fP   UINT8_C(0x77)"
.br
.RI "bmp390 I2C address when ADDR pin high "
.ti -1c
.RI "#define \fBI2C_XFR_TIMEOUT_MS\fP   (500)"
.br
.RI "I2C transaction timeout in milliseconds\&. "
.ti -1c
.RI "#define \fBI2C_BMP390_CONFIG_DEFAULT\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBbmp390_iir_filters_e\fP \fBbmp390_iir_filters_t\fP"
.br
.RI "BMP390 IIR filters coefficient enumerator\&. "
.ti -1c
.RI "typedef enum \fBbmp390_output_data_rates_e\fP \fBbmp390_output_data_rates_t\fP"
.br
.RI "BMP390 output data rates enumerator\&. "
.ti -1c
.RI "typedef enum \fBbmp390_power_modes_e\fP \fBbmp390_power_modes_t\fP"
.br
.RI "BMP390 power modes enumerator\&. "
.ti -1c
.RI "typedef enum \fBbmp390_pressure_oversampling_e\fP \fBbmp390_pressure_oversampling_t\fP"
.br
.RI "BMP390 pressure oversampling enumerator\&. "
.ti -1c
.RI "typedef enum \fBbmp390_temperature_oversampling_e\fP \fBbmp390_temperature_oversampling_t\fP"
.br
.RI "BMP390 temperature oversampling enumerator\&. "
.ti -1c
.RI "typedef struct \fBbmp390_cal_factors_s\fP \fBbmp390_cal_factors_t\fP"
.br
.RI "BMP390 temperature and pressure calibration factors structure\&. "
.ti -1c
.RI "typedef struct \fBbmp390_conv_cal_factors_s\fP \fBbmp390_conv_cal_factors_t\fP"
.br
.RI "BMP390 temperature and pressure converted calibration factors structure\&. "
.ti -1c
.RI "typedef struct \fBbmp390_config_s\fP \fBbmp390_config_t\fP"
.br
.RI "BMP390 configuration structure\&. "
.ti -1c
.RI "typedef struct bmp390_context_t \fBbmp390_context_t\fP"
.br
.RI "BMP390 context structure definition\&. "
.ti -1c
.RI "typedef struct \fBbmp390_context_t\fP * \fBbmp390_handle_t\fP"
.br
.RI "BMP390 handle structure definition\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBbmp390_iir_filters_e\fP { \fBBMP390_IIR_FILTER_OFF\fP = (0b000), \fBBMP390_IIR_FILTER_1\fP = (0b001), \fBBMP390_IIR_FILTER_3\fP = (0b010), \fBBMP390_IIR_FILTER_7\fP = (0b011), \fBBMP390_IIR_FILTER_15\fP = (0b100), \fBBMP390_IIR_FILTER_31\fP = (0b101), \fBBMP390_IIR_FILTER_63\fP = (0b110), \fBBMP390_IIR_FILTER_127\fP = (0b111) }"
.br
.RI "BMP390 IIR filters coefficient enumerator\&. "
.ti -1c
.RI "enum \fBbmp390_output_data_rates_e\fP { \fBBMP390_ODR_5MS\fP = (0x00), \fBBMP390_ODR_10MS\fP = (0x01), \fBBMP390_ODR_20MS\fP = (0x02), \fBBMP390_ODR_40MS\fP = (0x03), \fBBMP390_ODR_80MS\fP = (0x04), \fBBMP390_ODR_160MS\fP = (0x05), \fBBMP390_ODR_320MS\fP = (0x06), \fBBMP390_ODR_640MS\fP = (0x07) }"
.br
.RI "BMP390 output data rates enumerator\&. "
.ti -1c
.RI "enum \fBbmp390_power_modes_e\fP { \fBBMP390_POWER_MODE_SLEEP\fP = (0b00), \fBBMP390_POWER_MODE_FORCED\fP = (0b01), \fBBMP390_POWER_MODE_FORCED1\fP = (0b10), \fBBMP390_POWER_MODE_NORMAL\fP = (0b11) }"
.br
.RI "BMP390 power modes enumerator\&. "
.ti -1c
.RI "enum \fBbmp390_pressure_oversampling_e\fP { \fBBMP390_PRESSURE_OVERSAMPLING_SKIPPED\fP = (0b000), \fBBMP390_PRESSURE_OVERSAMPLING_2X\fP = (0b001), \fBBMP390_PRESSURE_OVERSAMPLING_4X\fP = (0b010), \fBBMP390_PRESSURE_OVERSAMPLING_8X\fP = (0b011), \fBBMP390_PRESSURE_OVERSAMPLING_16X\fP = (0b100), \fBBMP390_PRESSURE_OVERSAMPLING_32X\fP = (0b101) }"
.br
.RI "BMP390 pressure oversampling enumerator\&. "
.ti -1c
.RI "enum \fBbmp390_temperature_oversampling_e\fP { \fBBMP390_TEMPERATURE_OVERSAMPLING_SKIPPED\fP = (0b000), \fBBMP390_TEMPERATURE_OVERSAMPLING_2X\fP = (0b001), \fBBMP390_TEMPERATURE_OVERSAMPLING_4X\fP = (0b010), \fBBMP390_TEMPERATURE_OVERSAMPLING_8X\fP = (0b011), \fBBMP390_TEMPERATURE_OVERSAMPLING_16X\fP = (0b100), \fBBMP390_TEMPERATURE_OVERSAMPLING_32X\fP = (0b101) }"
.br
.RI "BMP390 temperature oversampling enumerator\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "union \fB__attribute__\fP ((packed)) ahtxx_status_register_u"
.br
.RI "AHTXX status register structure definition\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_chip_id_register\fP (\fBbmp390_handle_t\fP handle, uint8_t *const reg)"
.br
.RI "Reads chip identification register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_status_register\fP (\fBbmp390_handle_t\fP handle, bmp390_status_register_t *const reg)"
.br
.RI "Reads status register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_interrupt_status_register\fP (\fBbmp390_handle_t\fP handle, bmp390_interrupt_status_register_t *const reg)"
.br
.RI "Reads interrupt control register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_interrupt_control_register\fP (\fBbmp390_handle_t\fP handle, bmp390_interrupt_control_register_t *const reg)"
.br
.RI "Reads interrupt control register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_interrupt_control_register\fP (\fBbmp390_handle_t\fP handle, const bmp390_interrupt_control_register_t reg)"
.br
.RI "Writes interrupt control register to BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_power_control_register\fP (\fBbmp390_handle_t\fP handle, bmp390_power_control_register_t *const reg)"
.br
.RI "Reads power control register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_power_control_register\fP (\fBbmp390_handle_t\fP handle, const bmp390_power_control_register_t reg)"
.br
.RI "Writes power control register to BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_output_data_rate_register\fP (\fBbmp390_handle_t\fP handle, bmp390_output_data_rate_register_t *const reg)"
.br
.RI "Reads output data rate register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_output_data_rate_register\fP (\fBbmp390_handle_t\fP handle, const bmp390_output_data_rate_register_t reg)"
.br
.RI "Writes output data rate register to BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_oversampling_register\fP (\fBbmp390_handle_t\fP handle, bmp390_oversampling_register_t *const reg)"
.br
.RI "Reads oversampling register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_oversampling_register\fP (\fBbmp390_handle_t\fP handle, const bmp390_oversampling_register_t reg)"
.br
.RI "Writes oversampling register to BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_configuration_register\fP (\fBbmp390_handle_t\fP handle, bmp390_configuration_register_t *const reg)"
.br
.RI "Reads configuration register from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_configuration_register\fP (\fBbmp390_handle_t\fP handle, const bmp390_configuration_register_t reg)"
.br
.RI "Writes configuration register to BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_init\fP (i2c_master_bus_handle_t master_handle, const \fBbmp390_config_t\fP *bmp390_config, \fBbmp390_handle_t\fP *bmp280_handle)"
.br
.RI "Initializes an BMP390 device onto the master bus\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_measurements\fP (\fBbmp390_handle_t\fP handle, float *const temperature, float *const pressure)"
.br
.RI "Reads high-level measurements (temperature & pressure) from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_status\fP (\fBbmp390_handle_t\fP handle, bool *const temperature_ready, bool *const pressure_ready, bool *const command_ready)"
.br
.RI "Reads status of the BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_data_status\fP (\fBbmp390_handle_t\fP handle, bool *const temperature_ready, bool *const pressure_ready)"
.br
.RI "Reads data status of the BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_power_mode\fP (\fBbmp390_handle_t\fP handle, \fBbmp390_power_modes_t\fP *const power_mode)"
.br
.RI "Reads power mode setting from the BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_power_mode\fP (\fBbmp390_handle_t\fP handle, const \fBbmp390_power_modes_t\fP power_mode)"
.br
.RI "Writes power mode setting to the BMP390\&. See datasheet, section 3\&.6, table 10\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_pressure_oversampling\fP (\fBbmp390_handle_t\fP handle, \fBbmp390_pressure_oversampling_t\fP *const oversampling)"
.br
.RI "Reads pressure oversampling setting from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_pressure_oversampling\fP (\fBbmp390_handle_t\fP handle, const \fBbmp390_pressure_oversampling_t\fP oversampling)"
.br
.RI "Writes pressure oversampling setting to BMP390\&. See datasheet, section 3\&.3\&.1, table 4\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_temperature_oversampling\fP (\fBbmp390_handle_t\fP handle, \fBbmp390_temperature_oversampling_t\fP *const oversampling)"
.br
.RI "Reads temperature oversampling setting from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_temperature_oversampling\fP (\fBbmp390_handle_t\fP handle, const \fBbmp390_temperature_oversampling_t\fP oversampling)"
.br
.RI "Writes temperature oversampling setting to BMP390\&. See datasheet, section 3\&.3\&.1, table 4\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_output_data_rate\fP (\fBbmp390_handle_t\fP handle, \fBbmp390_output_data_rates_t\fP *const output_data_rate)"
.br
.RI "Reads output data rate setting from BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_output_data_rate\fP (\fBbmp390_handle_t\fP handle, const \fBbmp390_output_data_rates_t\fP output_data_rate)"
.br
.RI "writes output data rate setting to bmp390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_get_iir_filter\fP (\fBbmp390_handle_t\fP handle, \fBbmp390_iir_filters_t\fP *const iir_filter)"
.br
.RI "Reads IIR filter setting to BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_set_iir_filter\fP (\fBbmp390_handle_t\fP handle, const \fBbmp390_iir_filters_t\fP iir_filter)"
.br
.RI "Writes IIR filter setting from BMP390\&. See datasheet, section 3\&.4, table 7\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_reset\fP (\fBbmp390_handle_t\fP handle)"
.br
.RI "Issues soft-reset sensor and initializes registers for BMP390\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_remove\fP (\fBbmp390_handle_t\fP handle)"
.br
.RI "removes an BMP390 device from master bus\&. "
.ti -1c
.RI "esp_err_t \fBbmp390_delete\fP (\fBbmp390_handle_t\fP handle)"
.br
.RI "Removes an BMP390 device from master I2C bus and delete the handle\&. "
.ti -1c
.RI "const char * \fBbmp390_get_fw_version\fP (void)"
.br
.RI "Converts BMP390 firmware version numbers (major, minor, patch) into a string\&. "
.ti -1c
.RI "int32_t \fBbmp390_get_fw_version_number\fP (void)"
.br
.RI "Converts BMP390 firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBbmp390_status_register_t\fP"
.br
.ti -1c
.RI "\fBbmp390_interrupt_status_register_t\fP"
.br
.ti -1c
.RI "\fBbmp390_interrupt_control_register_t\fP"
.br
.ti -1c
.RI "\fBbmp390_power_control_register_t\fP"
.br
.ti -1c
.RI "\fBbmp390_oversampling_register_t\fP"
.br
.ti -1c
.RI "\fBbmp390_output_data_rate_register_t\fP"
.br
.ti -1c
.RI "\fBbmp390_configuration_register_t\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
