.TH "components/peripherals/adc/esp_s12sd/s12sd.c" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/peripherals/adc/esp_s12sd/s12sd.c
.SH SYNOPSIS
.br
.PP
\fR#include 'include/s12sd\&.h'\fP
.br
\fR#include <string\&.h>\fP
.br
\fR#include <stdio\&.h>\fP
.br
\fR#include <sdkconfig\&.h>\fP
.br
\fR#include <freertos/FreeRTOS\&.h>\fP
.br
\fR#include <freertos/task\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_0_MIN\fP   (\-1)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_0_MAX\fP   (49)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_1_MIN\fP   ADC_UV_MV_TO_INDEX_0_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_1_MAX\fP   (227)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_2_MIN\fP   ADC_UV_MV_TO_INDEX_1_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_2_MAX\fP   (318)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_3_MIN\fP   ADC_UV_MV_TO_INDEX_2_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_3_MAX\fP   (408)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_4_MIN\fP   ADC_UV_MV_TO_INDEX_3_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_4_MAX\fP   (503)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_5_MIN\fP   ADC_UV_MV_TO_INDEX_4_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_5_MAX\fP   (606)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_6_MIN\fP   ADC_UV_MV_TO_INDEX_5_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_6_MAX\fP   (696)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_7_MIN\fP   ADC_UV_MV_TO_INDEX_6_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_7_MAX\fP   (795)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_8_MIN\fP   ADC_UV_MV_TO_INDEX_7_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_8_MAX\fP   (881)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_9_MIN\fP   ADC_UV_MV_TO_INDEX_8_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_9_MAX\fP   (976)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_10_MIN\fP   ADC_UV_MV_TO_INDEX_9_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_10_MAX\fP   (1079)"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_11_MIN\fP   ADC_UV_MV_TO_INDEX_10_MAX"
.br
.ti -1c
.RI "#define \fBADC_UV_MV_TO_INDEX_11_MAX\fP   (1500)"
.br
.ti -1c
.RI "#define \fBESP_ARG_CHECK\fP(VAL)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBs12sd_init\fP (const \fBs12sd_config_t\fP *s12sd_config, \fBs12sd_handle_t\fP *s12sd_handle)"
.br
.RI "Initializes an adc S12SD device\&. "
.ti -1c
.RI "esp_err_t \fBs12sd_measure\fP (\fBs12sd_handle_t\fP handle, uint8_t *uv_index)"
.br
.RI "Measure S12SD device\&. "
.ti -1c
.RI "esp_err_t \fBs12sd_delete\fP (\fBs12sd_handle_t\fP handle)"
.br
.RI "Deinitialize S12SD device\&. "
.ti -1c
.RI "const char * \fBs12sd_get_fw_version\fP (void)"
.br
.RI "Converts S12SD firmware version numbers (major, minor, patch) into a string\&. "
.ti -1c
.RI "int32_t \fBs12sd_get_fw_version_number\fP (void)"
.br
.RI "Converts S12SD firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SH "Detailed Description"
.PP 
ESP-IDF driver for GUVA-S12SD UV sensor

.PP
Ported from esp-open-rtos

.PP
Copyright (c) 2024 Eric Gionet (gionet.c.eric@gmail.com)

.PP
MIT Licensed as described in the file LICENSE 
.SH "Macro Definition Documentation"
.PP 
.SS "#define ADC_UV_MV_TO_INDEX_0_MIN   (\-1)"
constant definitions 
.SS "#define ESP_ARG_CHECK( VAL)"
\fBValue:\fP
.nf
do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)
.PP
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
