.TH "components/peripherals/i2c/esp_veml7700/veml7700.c" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/peripherals/i2c/esp_veml7700/veml7700.c
.SH SYNOPSIS
.br
.PP
\fR#include 'include/veml7700\&.h'\fP
.br
\fR#include <string\&.h>\fP
.br
\fR#include <stdio\&.h>\fP
.br
\fR#include <math\&.h>\fP
.br
\fR#include <esp_log\&.h>\fP
.br
\fR#include <esp_check\&.h>\fP
.br
\fR#include <freertos/FreeRTOS\&.h>\fP
.br
\fR#include <freertos/task\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBVEML7700_DEVICE_ID\fP   UINT8_C(0x81)"
.br
.RI "veml7700 device identifier (fixed) "
.ti -1c
.RI "#define \fBVEML7700_POLY_COEF_A\fP   (6\&.0135e\-13)"
.br
.ti -1c
.RI "#define \fBVEML7700_POLY_COEF_B\fP   (\-9\&.3924e\-9)"
.br
.ti -1c
.RI "#define \fBVEML7700_POLY_COEF_C\fP   (8\&.1488e\-5)"
.br
.ti -1c
.RI "#define \fBVEML7700_POLY_COEF_D\fP   (1\&.0023)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_ALS_CONF\fP   UINT8_C(0x00)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_ALS_WH\fP   UINT8_C(0x01)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_ALS_WL\fP   UINT8_C(0x02)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_POWER_SAVING\fP   UINT8_C(0x03)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_ALS\fP   UINT8_C(0x04)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_WHITE\fP   UINT8_C(0x05)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_ALS_INT\fP   UINT8_C(0x06)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_ID\fP   UINT8_C(0x07)"
.br
.ti -1c
.RI "#define \fBVEML7700_POWERUP_DELAY_MS\fP   UINT16_C(5)"
.br
.ti -1c
.RI "#define \fBVEML7700_APPSTART_DELAY_MS\fP   UINT16_C(10)"
.br
.ti -1c
.RI "#define \fBVEML7700_CMD_DELAY_MS\fP   UINT16_C(5)"
.br
.ti -1c
.RI "#define \fBVEML7700_RETRY_DELAY_MS\fP   UINT16_C(2)"
.br
.ti -1c
.RI "#define \fBVEML7700_TX_RX_DELAY_MS\fP   UINT16_C(10)"
.br
.ti -1c
.RI "#define \fBVEML7700_GAIN_OPTIONS_COUNT\fP   UINT8_C(4)"
.br
.ti -1c
.RI "#define \fBVEML7700_IT_TIMES_COUNT\fP   UINT8_C(6)"
.br
.ti -1c
.RI "#define \fBVEML7700_IT_OPTIONS_COUNT\fP   UINT8_C(2)"
.br
.ti -1c
.RI "#define \fBVEML7700_PSM_TIMES_COUNT\fP   UINT8_C(24)"
.br
.ti -1c
.RI "#define \fBVEML7700_PSM_OPTIONS_COUNT\fP   UINT8_C(4)"
.br
.ti -1c
.RI "#define \fBESP_ARG_CHECK\fP(VAL)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBveml7700_optimize_configuration\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Optimizes VEML7700 gain and integration time configuration\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_configuration_register\fP (\fBveml7700_handle_t\fP handle, veml7700_configuration_register_t *const reg)"
.br
.RI "Reads configuration register from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_configuration_register\fP (\fBveml7700_handle_t\fP handle, const veml7700_configuration_register_t reg)"
.br
.RI "Writes configuration register to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_threshold_registers\fP (\fBveml7700_handle_t\fP handle, uint16_t *const hi_threshold, uint16_t *const lo_threshold)"
.br
.RI "Reads high and low threshold registers from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_threshold_registers\fP (\fBveml7700_handle_t\fP handle, const uint16_t hi_threshold, const uint16_t lo_threshold)"
.br
.RI "Writes high and low threshold registers to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_power_saving_mode_register\fP (\fBveml7700_handle_t\fP handle, veml7700_power_saving_mode_register_t *const reg)"
.br
.RI "Reads power saving mode register from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_power_saving_mode_register\fP (\fBveml7700_handle_t\fP handle, const veml7700_power_saving_mode_register_t power_saving_mode_reg)"
.br
.RI "Writes power saving mode register to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_interrupt_status_register\fP (\fBveml7700_handle_t\fP handle, veml7700_interrupt_status_register_t *const reg)"
.br
.RI "Reads interrupt status register from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBi2c_veml7700_get_identifier_register\fP (\fBveml7700_handle_t\fP handle, veml7700_identifier_register_t *const reg)"
.br
.ti -1c
.RI "esp_err_t \fBveml7700_init\fP (i2c_master_bus_handle_t master_handle, const \fBveml7700_config_t\fP *veml7700_config, \fBveml7700_handle_t\fP *veml7700_handle)"
.br
.RI "Initializes an VEML7700 device onto the I2C master bus\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_ambient_light_counts\fP (\fBveml7700_handle_t\fP handle, uint16_t *const counts)"
.br
.RI "Reads ambient light counts from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_ambient_light\fP (\fBveml7700_handle_t\fP handle, float *const ambient_light)"
.br
.RI "Reads ambient light (0 lux to 140 klux) from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_ambient_light_auto\fP (\fBveml7700_handle_t\fP handle, float *const ambient_light)"
.br
.RI "Reads optimal ambient light (0 lux to 140 klux) from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_white_channel_counts\fP (\fBveml7700_handle_t\fP handle, uint16_t *const counts)"
.br
.RI "Reads white channel counts from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_white_channel\fP (\fBveml7700_handle_t\fP handle, float *const white_light)"
.br
.RI "Reads white channel from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_white_channel_auto\fP (\fBveml7700_handle_t\fP handle, float *const white_light)"
.br
.RI "Reads optimal white channel from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_thresholds\fP (\fBveml7700_handle_t\fP handle, uint16_t *const hi_threshold, uint16_t *const lo_threshold)"
.br
.RI "Reads high and low als thresholds (lux) from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_thresholds\fP (\fBveml7700_handle_t\fP handle, const uint16_t hi_threshold, const uint16_t lo_threshold)"
.br
.RI "Writes high and low als thresholds (lux) to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_gain\fP (\fBveml7700_handle_t\fP handle, \fBveml7700_gains_t\fP *const gain)"
.br
.RI "Reads als gain from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_gain\fP (\fBveml7700_handle_t\fP handle, const \fBveml7700_gains_t\fP gain)"
.br
.RI "Writes als gain to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_integration_time\fP (\fBveml7700_handle_t\fP handle, \fBveml7700_integration_times_t\fP *const integration_time)"
.br
.RI "Reads als integration time from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_integration_time\fP (\fBveml7700_handle_t\fP handle, const \fBveml7700_integration_times_t\fP integration_time)"
.br
.RI "Writes als integration time to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_persistence_protection\fP (\fBveml7700_handle_t\fP handle, \fBveml7700_persistence_protections_t\fP *const persistence_protection)"
.br
.RI "Reads als persistence protection from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_persistence_protection\fP (\fBveml7700_handle_t\fP handle, const \fBveml7700_persistence_protections_t\fP persistence_protection)"
.br
.RI "Writes als persistence protection to VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_power_saving_mode\fP (\fBveml7700_handle_t\fP handle, \fBveml7700_power_saving_modes_t\fP *const power_saving_mode, bool *const power_saving_enabled)"
.br
.RI "Reads power saving mode from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_set_power_saving_mode\fP (\fBveml7700_handle_t\fP handle, const \fBveml7700_power_saving_modes_t\fP power_saving_mode, const bool power_saving_enabled)"
.br
.RI "Reads power saving mode from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_get_interrupt_status\fP (\fBveml7700_handle_t\fP handle, bool *const hi_threshold_exceeded, bool *const lo_threshold_exceeded)"
.br
.RI "Reads interrupt status from VEML7700\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_enable_irq\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Enables interrupt assertion\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_disable_irq\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Disables interrupt assertion\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_disable\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Shuts down VEML7700 until woken\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_enable\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Wakes up VEML7700 from shut-down\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_remove\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Removes an VEML7700 device from master bus\&. "
.ti -1c
.RI "esp_err_t \fBveml7700_delete\fP (\fBveml7700_handle_t\fP handle)"
.br
.RI "Removes an VEML7700 device from master I2C bus and delete the handle\&. "
.ti -1c
.RI "const char * \fBveml7700_get_fw_version\fP (void)"
.br
.RI "Converts VEML7700 firmware version numbers (major, minor, patch) into a string\&. "
.ti -1c
.RI "int32_t \fBveml7700_get_fw_version_number\fP (void)"
.br
.RI "Converts VEML7700 firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SH "Detailed Description"
.PP 
ESP-IDF driver for VEML7700 illuminance sensor

.PP
Ported from esp-open-rtos

.PP
Copyright (c) 2024 Eric Gionet (gionet.c.eric@gmail.com)

.PP
MIT Licensed as described in the file LICENSE 
.SH "Macro Definition Documentation"
.PP 
.SS "#define ESP_ARG_CHECK( VAL)"
\fBValue:\fP
.nf
do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)
.PP
.fi

.SS "#define VEML7700_APPSTART_DELAY_MS   UINT16_C(10)"
veml7700 delay after initialization before application start-up 
.SS "#define VEML7700_CMD_DELAY_MS   UINT16_C(5)"
veml7700 delay before attempting I2C transactions after a command is issued 
.SS "#define VEML7700_GAIN_OPTIONS_COUNT   UINT8_C(4)"
Possible gain values count 
.SS "#define VEML7700_IT_OPTIONS_COUNT   UINT8_C(2)"
Possible integration time values count 
.SS "#define VEML7700_IT_TIMES_COUNT   UINT8_C(6)"
Possible integration time values count 
.SS "#define VEML7700_POWERUP_DELAY_MS   UINT16_C(5)"
veml7700 delay on power-up before attempting I2C transactions 
.SS "#define VEML7700_RETRY_DELAY_MS   UINT16_C(2)"
veml7700 delay between an I2C receive transaction retry 
.SS "#define VEML7700_TX_RX_DELAY_MS   UINT16_C(10)"
veml7700 delay after attempting an I2C transmit transaction and attempting an I2C receive transaction 
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
