.TH "components/peripherals/i2c/esp_ak8975/include/ak8975.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/peripherals/i2c/esp_ak8975/include/ak8975.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include <esp_err\&.h>\fP
.br
\fR#include <driver/i2c_master\&.h>\fP
.br
\fR#include <type_utils\&.h>\fP
.br
\fR#include 'ak8975_version\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBak8975_magnetic_axes_data_s\fP"
.br
.RI "AK8975 processed compass axes data structure and axes have a range +/-1229 uT\&. "
.ti -1c
.RI "struct \fBak8975_axes_data_s\fP"
.br
.RI "AK8975 axes data registers (HX, HZ, HZ) structure\&. "
.ti -1c
.RI "struct \fBak8975_config_s\fP"
.br
.RI "AK8975 configuration structure\&. "
.ti -1c
.RI "struct \fBak8975_context_t\fP"
.br
.RI "AK8975 context structure\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBI2C_AK8975_DEV_CLK_SPD\fP   UINT32_C(100000)"
.br
.RI "ak8975 I2C default clock frequency (100KHz) "
.ti -1c
.RI "#define \fBI2C_AK8975_DEV_ADDR_CAD1_0_CAD0_0\fP   UINT8_C(0x0c)"
.br
.RI "ak8975 I2C address when CAD1 and CAD0 are low "
.ti -1c
.RI "#define \fBI2C_AK8975_DEV_ADDR_CAD1_0_CAD0_1\fP   UINT8_C(0x0d)"
.br
.RI "ak8975 I2C address when CAD1 is low and CAD0 is high "
.ti -1c
.RI "#define \fBI2C_AK8975_DEV_ADDR_CAD1_1_CAD0_0\fP   UINT8_C(0x0e)"
.br
.RI "ak8975 I2C address when CAD1 is high and CAD0 is low "
.ti -1c
.RI "#define \fBI2C_AK8975_DEV_ADDR_CAD1_1_CAD0_1\fP   UINT8_C(0x0f)"
.br
.RI "ak8975 I2C address when CAD1 and CAD0 are high "
.ti -1c
.RI "#define \fBI2C_XFR_TIMEOUT_MS\fP   (500)"
.br
.RI "I2C transaction timeout in milliseconds\&. "
.ti -1c
.RI "#define \fBI2C_AK8975_CONFIG_DEFAULT\fP"
.br
.RI "Macro that initializes \fRi2c_ak8975_config_t\fP to default configuration settings\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBak8975_operating_modes_e\fP \fBak8975_operating_modes_t\fP"
.br
.RI "AK8975 operating modes enumerator\&. "
.ti -1c
.RI "typedef struct \fBak8975_magnetic_axes_data_s\fP \fBak8975_magnetic_axes_data_t\fP"
.br
.RI "AK8975 processed compass axes data structure and axes have a range +/-1229 uT\&. "
.ti -1c
.RI "typedef struct \fBak8975_axes_data_s\fP \fBak8975_axes_data_t\fP"
.br
.RI "AK8975 axes data registers (HX, HZ, HZ) structure\&. "
.ti -1c
.RI "typedef struct \fBak8975_config_s\fP \fBak8975_config_t\fP"
.br
.RI "AK8975 configuration structure\&. "
.ti -1c
.RI "typedef struct ak8975_context_t \fBak8975_context_t\fP"
.br
.RI "AK8975 context structure definition\&. "
.ti -1c
.RI "typedef struct \fBak8975_context_t\fP * \fBak8975_handle_t\fP"
.br
.RI "AK8975 handle structure definition\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBak8975_operating_modes_e\fP { \fBAK8975_OPMODE_POWER_DOWN\fP = (0b0000), \fBAK8975_OPMODE_SINGLE_MEAS\fP = (0b0001), \fBAK8975_OPMODE_SELF_TEST\fP = (0b1000), \fBAK8975_OPMODE_FUSE_ROM\fP = (0b1111) }"
.br
.RI "AK8975 operating modes enumerator\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "union \fB__attribute__\fP ((packed)) ahtxx_status_register_u"
.br
.RI "AHTXX status register structure definition\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_control_register\fP (\fBak8975_handle_t\fP handle, ak8975_control_register_t *const reg)"
.br
.RI "Reads control register from AK8975\&. "
.ti -1c
.RI "esp_err_t \fBak8975_set_control_register\fP (\fBak8975_handle_t\fP handle, const ak8975_control_register_t reg)"
.br
.RI "Writes control register to AK8975\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_selftest_control_register\fP (\fBak8975_handle_t\fP handle, ak8975_selftest_control_register_t *const reg)"
.br
.RI "Reads self-test control register from AK8975\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_status1_register\fP (\fBak8975_handle_t\fP handle, ak8975_status1_register_t *const reg)"
.br
.RI "Reads status 1 register from AK8975\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_status2_register\fP (\fBak8975_handle_t\fP handle, ak8975_status2_register_t *const reg)"
.br
.RI "Reads status 2 register from AK8975\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_asa_registers\fP (\fBak8975_handle_t\fP handle, uint8_t *const asa_x_reg, uint8_t *const asa_y_reg, uint8_t *const asa_z_reg)"
.br
.RI "Reads ASA (X, Y, Z) registers from AK8975\&. "
.ti -1c
.RI "float \fBak8975_convert_to_heading\fP (const \fBak8975_magnetic_axes_data_t\fP axes_data)"
.br
.RI "Converts heading (0-359 degrees) from magnetic axes\&. "
.ti -1c
.RI "esp_err_t \fBak8975_init\fP (i2c_master_bus_handle_t master_handle, const \fBak8975_config_t\fP *ak8975_config, \fBak8975_handle_t\fP *ak8975_handle)"
.br
.RI "Initializes an AK8975 device onto the I2C master bus\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_magnetic_axes\fP (\fBak8975_handle_t\fP handle, \fBak8975_magnetic_axes_data_t\fP *const axes_data)"
.br
.RI "Read magnetic measurement from AK8975\&. "
.ti -1c
.RI "esp_err_t \fBak8975_selftest\fP (\fBak8975_handle_t\fP handle, \fBak8975_magnetic_axes_data_t\fP *const axes_data)"
.br
.RI "Self-test judgement of AK8975 to check if sensor is working normally\&. "
.ti -1c
.RI "esp_err_t \fBak8975_get_data_status\fP (\fBak8975_handle_t\fP handle, bool *const ready)"
.br
.ti -1c
.RI "esp_err_t \fBak8975_get_error_status\fP (\fBak8975_handle_t\fP handle, bool *const error)"
.br
.ti -1c
.RI "esp_err_t \fBak8975_get_overflow_status\fP (\fBak8975_handle_t\fP handle, bool *const overflow)"
.br
.ti -1c
.RI "esp_err_t \fBak8975_power_down\fP (\fBak8975_handle_t\fP handle)"
.br
.ti -1c
.RI "esp_err_t \fBak8975_remove\fP (\fBak8975_handle_t\fP handle)"
.br
.RI "Removes an AK8975 device from master I2C bus\&. "
.ti -1c
.RI "esp_err_t \fBak8975_delete\fP (\fBak8975_handle_t\fP handle)"
.br
.RI "Removes an AK8975 device from master bus and frees handle\&. "
.ti -1c
.RI "const char * \fBak8975_get_fw_version\fP (void)"
.br
.RI "Converts AK8975 firmware version numbers (major, minor, patch, build) into a string\&. "
.ti -1c
.RI "int32_t \fBak8975_get_fw_version_number\fP (void)"
.br
.RI "Converts AK8975 firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBak8975_control_register_t\fP"
.br
.ti -1c
.RI "\fBak8975_status1_register_t\fP"
.br
.ti -1c
.RI "\fBak8975_status2_register_t\fP"
.br
.ti -1c
.RI "\fBak8975_selftest_control_register_t\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
