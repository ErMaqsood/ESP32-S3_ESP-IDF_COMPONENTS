.TH "components/utilities/esp_uuid/include/uuid.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/utilities/esp_uuid/include/uuid.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include 'uuid_version\&.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBuuid_modes_e\fP \fBuuid_modes_t\fP"
.br
.RI "UUID modes enumerator definition\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBuuid_modes_e\fP { \fBUUID_MODE_VARIANT4\fP = 0, \fBUUID_MODE_RANDOM\fP = 1 }"
.br
.RI "UUID modes enumerator definition\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBuuid_init\fP (void)"
.br
.RI "Initialize UUID generator with default seed values from hash algorithm\&. "
.ti -1c
.RI "void \fBuuid_seed\fP (uint8_t size,\&.\&.\&.)"
.br
.RI "Seed the UUID generator with a variable number of arguments\&. The total number of arguments must be between 1 and 2\&. Otherwise, the generator will be seeded with default values (1 and 2)\&. "
.ti -1c
.RI "const char * \fBuuid_generate\fP (void)"
.br
.RI "Generate a UUID (i\&.e\&. d29b226d-04b5-e3ae-cd63-e6ec0d5611ab)\&. "
.ti -1c
.RI "void \fBuuid_set_mode\fP (const \fBuuid_modes_t\fP mode)"
.br
.RI "Set the UUID mode to either variant-4 or random\&. "
.ti -1c
.RI "\fBuuid_modes_t\fP \fBuuid_get_mode\fP (void)"
.br
.RI "Get the current UUID mode\&. "
.ti -1c
.RI "const char * \fBuuid_get_fw_version\fP (void)"
.br
.RI "Converts \fRuuid\fP firmware version numbers (major, minor, patch) into a string\&. "
.ti -1c
.RI "int32_t \fBuuid_get_fw_version_number\fP (void)"
.br
.RI "Converts \fRuuid\fP firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
