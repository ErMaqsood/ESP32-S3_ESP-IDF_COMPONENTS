.TH "components/storage/esp_datalogger/include/datatable.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/storage/esp_datalogger/include/datatable.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include <esp_err\&.h>\fP
.br
\fR#include <freertos/FreeRTOS\&.h>\fP
.br
\fR#include <freertos/task\&.h>\fP
.br
\fR#include <freertos/semphr\&.h>\fP
.br
\fR#include <cJSON\&.h>\fP
.br
\fR#include <time_into_interval\&.h>\fP
.br
\fR#include 'datalogger_version\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBdatatable_event_tag\fP"
.br
.RI "Data-table event structure\&. "
.ti -1c
.RI "struct \fBdatatable_id_column_data_type_tag\fP"
.br
.RI "Data-table record identifier column data-type structure\&. "
.ti -1c
.RI "struct \fBdatatable_ts_column_data_type_tag\fP"
.br
.RI "Data-table record timestamp (utc) column data-type structure\&. "
.ti -1c
.RI "struct \fBdatatable_vector_column_data_type_tag\fP"
.br
.RI "Data-table vector data-type column structure\&. "
.ti -1c
.RI "struct \fBdatatable_bool_column_data_type_tag\fP"
.br
.RI "Data-table bool data-type column structure\&. "
.ti -1c
.RI "struct \fBdatatable_float_column_data_type_tag\fP"
.br
.RI "Data-table float data-type column structure\&. "
.ti -1c
.RI "struct \fBdatatable_fp16_column_data_type_tag\fP"
.br
.RI "Data-table float 16-bit data-type column structure\&. "
.ti -1c
.RI "struct \fBdatatable_int16_column_data_type_tag\fP"
.br
.RI "Data-table int16 data-type column structure\&. "
.ti -1c
.RI "struct \fBdatatable_column_name_tag\fP"
.br
.RI "Data-table column name structure\&. "
.ti -1c
.RI "struct \fBdatatable_column_tag\fP"
.br
.RI "Data-table column structure\&. The data-table record identifier and timestamp columns are created by default when the data-table is created\&. The record identifier and record timestamp data-types are excluded from data processing\&. "
.ti -1c
.RI "struct \fBdatatable_process_tag\fP"
.br
.RI "Data-table process structure\&. "
.ti -1c
.RI "union \fBdatatable_buffer_tag\fP"
.br
.RI "Data-table buffer union structure\&. "
.ti -1c
.RI "union \fBdatatable_row_data_column_tag\fP"
.br
.RI "Data-table row data column structure\&. This structure is a data model that represents data storage of the record based on the data-table's column column data-type\&. "
.ti -1c
.RI "struct \fBdatatable_row_tag\fP"
.br
.RI "Data-table row structure\&. This structure is a data model that represents data storage of record by data-table row and configured data-table columns\&. "
.ti -1c
.RI "struct \fBdatatable_config_tag\fP"
.br
.RI "Data-table configuration structure definition\&. "
.ti -1c
.RI "struct \fBdatatable_t\fP"
.br
.RI "Data-table state object structure definition\&. Do not modify these fields once the data-table handle is created, these are read-only, and represent a state machine\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDATATABLE_NAME_MAX_SIZE\fP   (15)"
.br
.RI "15-characters for user-defined table name "
.ti -1c
.RI "#define \fBDATATABLE_COLUMN_NAME_SIZE\fP   (15)"
.br
.RI "15-characters for user-defined column name "
.ti -1c
.RI "#define \fBDATATABLE_COLUMN_NAME_MAX_SIZE\fP   (25)"
.br
.RI "25-characters for column name "
.ti -1c
.RI "#define \fBDATATABLE_COLUMNS_MAX\fP   (255)"
.br
.ti -1c
.RI "#define \fBDATATABLE_ROWS_MAX\fP   (65535)"
.br
.ti -1c
.RI "#define \fBDATATABLE_COLUMN_ID_NAME\fP   'Record ID'"
.br
.ti -1c
.RI "#define \fBDATATABLE_COLUMN_TS_NAME\fP   'TS'"
.br
.ti -1c
.RI "#define \fBDATATABLE_COLUMN_TII_SMP_NAME\fP   '_tii_smp'"
.br
.ti -1c
.RI "#define \fBDATATABLE_COLUMN_TII_PRC_NAME\fP   '_tii_prc'"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBdatatable_event_types_tag\fP \fBdatatable_event_types_t\fP"
.br
.RI "Data-table event types enumerator\&. "
.ti -1c
.RI "typedef enum \fBdatatable_data_storage_types_tag\fP \fBdatatable_data_storage_types_t\fP"
.br
.RI "Data-table data storage-types enumerator\&. "
.ti -1c
.RI "typedef enum \fBdatatable_column_process_types_tag\fP \fBdatatable_column_process_types_t\fP"
.br
.RI "Data-table column statistical process-types enumerator\&. "
.ti -1c
.RI "typedef enum \fBdatatable_column_data_types_tag\fP \fBdatatable_column_data_types_t\fP"
.br
.RI "Data-table column data-types enumerator\&. "
.ti -1c
.RI "typedef struct \fBdatatable_event_tag\fP \fBdatatable_event_t\fP"
.br
.RI "Data-table event structure\&. "
.ti -1c
.RI "typedef void(* \fBdatatable_event\fP) (void *handle, \fBdatatable_event_t\fP)"
.br
.RI "Data-logger event\&. "
.ti -1c
.RI "typedef struct \fBdatatable_id_column_data_type_tag\fP \fBdatatable_id_column_data_type_t\fP"
.br
.RI "Data-table record identifier column data-type structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_ts_column_data_type_tag\fP \fBdatatable_ts_column_data_type_t\fP"
.br
.RI "Data-table record timestamp (utc) column data-type structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_vector_column_data_type_tag\fP \fBdatatable_vector_column_data_type_t\fP"
.br
.RI "Data-table vector data-type column structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_bool_column_data_type_tag\fP \fBdatatable_bool_column_data_type_t\fP"
.br
.RI "Data-table bool data-type column structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_float_column_data_type_tag\fP \fBdatatable_float_column_data_type_t\fP"
.br
.RI "Data-table float data-type column structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_fp16_column_data_type_tag\fP \fBdatatable_fp16_column_data_type_t\fP"
.br
.RI "Data-table float 16-bit data-type column structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_int16_column_data_type_tag\fP \fBdatatable_int16_column_data_type_t\fP"
.br
.RI "Data-table int16 data-type column structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_column_name_tag\fP \fBdatatable_column_name_t\fP"
.br
.RI "Data-table column name structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_column_tag\fP \fBdatatable_column_t\fP"
.br
.RI "Data-table column structure\&. The data-table record identifier and timestamp columns are created by default when the data-table is created\&. The record identifier and record timestamp data-types are excluded from data processing\&. "
.ti -1c
.RI "typedef struct \fBdatatable_process_tag\fP \fBdatatable_process_t\fP"
.br
.RI "Data-table process structure\&. "
.ti -1c
.RI "typedef union \fBdatatable_buffer_tag\fP \fBdatatable_buffer_t\fP"
.br
.RI "Data-table buffer union structure\&. "
.ti -1c
.RI "typedef union \fBdatatable_row_data_column_tag\fP \fBdatatable_row_data_column_t\fP"
.br
.RI "Data-table row data column structure\&. This structure is a data model that represents data storage of the record based on the data-table's column column data-type\&. "
.ti -1c
.RI "typedef struct \fBdatatable_row_tag\fP \fBdatatable_row_t\fP"
.br
.RI "Data-table row structure\&. This structure is a data model that represents data storage of record by data-table row and configured data-table columns\&. "
.ti -1c
.RI "typedef struct \fBdatatable_config_tag\fP \fBdatatable_config_t\fP"
.br
.RI "Data-table configuration structure definition\&. "
.ti -1c
.RI "typedef struct datatable_t \fBdatatable_t\fP"
.br
.RI "Data-table structure\&. "
.ti -1c
.RI "typedef struct \fBdatatable_t\fP * \fBdatatable_handle_t\fP"
.br
.RI "Data-table handle structure\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBdatatable_event_types_tag\fP { \fBDATATABLE_EVENT_INIT\fP, \fBDATATABLE_EVENT_RESET_ROWS\fP, \fBDATATABLE_EVENT_RESET_SAMPLES\fP, \fBDATATABLE_EVENT_FIFO_ROWS\fP, \fBDATATABLE_EVENT_FIFO_SAMPLES\fP, \fBDATATABLE_EVENT_SAMPLE_PUSHED\fP, \fBDATATABLE_EVENT_PROCESS\fP, \fBDATATABLE_EVENT_PROCESS_ELAPSED\fP }"
.br
.RI "Data-table event types enumerator\&. "
.ti -1c
.RI "enum \fBdatatable_data_storage_types_tag\fP { \fBDATATABLE_DATA_STORAGE_MEMORY_RING\fP, \fBDATATABLE_DATA_STORAGE_MEMORY_RESET\fP, \fBDATATABLE_DATA_STORAGE_MEMORY_STOP\fP }"
.br
.RI "Data-table data storage-types enumerator\&. "
.ti -1c
.RI "enum \fBdatatable_column_process_types_tag\fP { \fBDATATABLE_COLUMN_PROCESS_SMP\fP, \fBDATATABLE_COLUMN_PROCESS_AVG\fP, \fBDATATABLE_COLUMN_PROCESS_MIN\fP, \fBDATATABLE_COLUMN_PROCESS_MAX\fP, \fBDATATABLE_COLUMN_PROCESS_MIN_TS\fP, \fBDATATABLE_COLUMN_PROCESS_MAX_TS\fP }"
.br
.RI "Data-table column statistical process-types enumerator\&. "
.ti -1c
.RI "enum \fBdatatable_column_data_types_tag\fP { \fBDATATABLE_COLUMN_DATA_ID\fP, \fBDATATABLE_COLUMN_DATA_TS\fP, \fBDATATABLE_COLUMN_DATA_VECTOR\fP, \fBDATATABLE_COLUMN_DATA_BOOL\fP, \fBDATATABLE_COLUMN_DATA_FLOAT\fP, \fBDATATABLE_COLUMN_DATA_INT16\fP }"
.br
.RI "Data-table column data-types enumerator\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBdatatable_init\fP (const \fBdatatable_config_t\fP *datatable_config, \fBdatatable_handle_t\fP *datatable_handle)"
.br
.RI "Initializes a data-table handle\&. A data-table handle instance is required before any other data-table functions can be called\&. Once the data-table is initialized the following functions are used to configure the data-table columns and within the sampling task\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_vector_smp_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name_uc, const char *name_vc, uint8_t *index)"
.br
.RI "Appends a vector based data-type column as a sample to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_vector_avg_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name_uc, const char *name_vc, uint8_t *index)"
.br
.RI "Appends a vector based data-type column as an average to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_vector_min_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name_uc, const char *name_vc, uint8_t *index)"
.br
.RI "Appends a vector based data-type column as a v-component minimum to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_vector_max_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name_uc, const char *name_vc, uint8_t *index)"
.br
.RI "Appends a vector based data-type column as a v-component maximum to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_vector_min_ts_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name_uc, const char *name_vc, uint8_t *index)"
.br
.RI "Appends a vector based data-type column as a v-component minimum with timestamp to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_vector_max_ts_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name_uc, const char *name_vc, uint8_t *index)"
.br
.RI "Appends a vector based data-type column as a v-component maximum with timestamp to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_bool_smp_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a bool based data-type column as a sample process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_float_smp_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a float based data-type column as a sample process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_float_avg_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a float based data-type column as an average process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_float_min_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a float based data-type column as a minimum process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_float_max_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a float based data-type column as a maximum process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_float_min_ts_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a float based data-type column as a minimum with timestamp process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_float_max_ts_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a float based data-type column as a maximum with timestamp process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_int16_smp_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a int16 based data-type column as a sample process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_int16_avg_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a int16 based data-type column as an average process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_int16_min_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a int16 based data-type column as a minimum process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_int16_max_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a int16 based data-type column as a maximum process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_int16_min_ts_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a int16 based data-type column as a minimum with timestamp process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_add_int16_max_ts_column\fP (\fBdatatable_handle_t\fP datatable_handle, const char *name, uint8_t *index)"
.br
.RI "Appends a int16 based data-type column as a maximum with timestamp process-type to the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_get_columns_count\fP (\fBdatatable_handle_t\fP datatable_handle, uint8_t *count)"
.br
.RI "Gets the number of columns in the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_get_rows_count\fP (\fBdatatable_handle_t\fP datatable_handle, uint8_t *count)"
.br
.RI "Gets the number of rows in the data-table\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_get_column\fP (\fBdatatable_handle_t\fP datatable_handle, const uint8_t index, \fBdatatable_column_t\fP **column)"
.br
.RI "Gets the column structure from the data-table based on the column index\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_get_row\fP (\fBdatatable_handle_t\fP datatable_handle, const uint8_t index, \fBdatatable_row_t\fP **row)"
.br
.RI "Gets the row structure from the data-table based on the row index\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_push_vector_sample\fP (\fBdatatable_handle_t\fP datatable_handle, const uint8_t index, const float uc_value, const float vc_value)"
.br
.RI "Pushes a vector data-type sample onto the column sample data buffer stack for processing\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_push_bool_sample\fP (\fBdatatable_handle_t\fP datatable_handle, const uint8_t index, const bool value)"
.br
.RI "Pushes a boolean data-type sample onto the column sample data buffer stack for processing\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_push_float_sample\fP (\fBdatatable_handle_t\fP datatable_handle, const uint8_t index, const float value)"
.br
.RI "Pushes a float data-type sample onto the column sample data buffer stack for processing\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_push_int16_sample\fP (\fBdatatable_handle_t\fP datatable_handle, const uint8_t index, const int16_t value)"
.br
.RI "Pushes an int16 data-type sample onto the column sample data buffer stack for processing\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_sampling_task_delay\fP (\fBdatatable_handle_t\fP datatable_handle)"
.br
.RI "Delays the data-table's sampling task until the next scheduled task event\&. 
.br
 This function should be placed after the \fRfor (;;) {\fP syntax to delay the task based on the configured time-into-interval handle interval type, period, and offset parameters\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_process_samples\fP (\fBdatatable_handle_t\fP datatable_handle)"
.br
.RI "Processes data-table samples on the data buffer stack in each column based on the data-table's 
.br
 configured processing interval\&. When the samples are processed, the data buffer stack is cleared for each column\&. This function must be called after data-table samples are pushed in the sampling task\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_delete\fP (\fBdatatable_handle_t\fP datatable_handle)"
.br
.RI "Deletes the data-table handle to frees up resources\&. "
.ti -1c
.RI "esp_err_t \fBdatatable_to_json\fP (\fBdatatable_handle_t\fP datatable_handle, cJSON **datatable)"
.br
.RI "Converts a data-table to a \fRcJSON\fP object\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
