.TH "components/peripherals/i2c/esp_as3935/include/as3935.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/peripherals/i2c/esp_as3935/include/as3935.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include <esp_types\&.h>\fP
.br
\fR#include <esp_event\&.h>\fP
.br
\fR#include <esp_err\&.h>\fP
.br
\fR#include <driver/i2c_master\&.h>\fP
.br
\fR#include <type_utils\&.h>\fP
.br
\fR#include <driver/gpio\&.h>\fP
.br
\fR#include 'as3935_version\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBas3935_config_s\fP"
.br
.RI "I2C AS3935 device configuration structure\&. "
.ti -1c
.RI "struct \fBas3935_context_t\fP"
.br
.RI "I2C AS3935 device handle structure\&. "
.ti -1c
.RI "struct \fBas3935_monitor_base_s\fP"
.br
.RI "AS3935 device event object structure\&. "
.ti -1c
.RI "struct \fBas3935_monitor_context_s\fP"
.br
.RI "esp AS3935 device state machine structure\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBI2C_AS3935_DEV_CLK_SPD\fP   UINT32_C(100000)"
.br
.RI "AS3935 definitions\&. "
.ti -1c
.RI "#define \fBI2C_AS3935_DEV_ADDR_1\fP   UINT8_C(0x01)"
.br
.RI "as3935 I2C address when ADD1 pin floating/low and ADD0 pin high "
.ti -1c
.RI "#define \fBI2C_AS3935_DEV_ADDR_2\fP   UINT8_C(0x02)"
.br
.RI "as3935 I2C address when ADD0 pin floating/low and ADD1 pin high "
.ti -1c
.RI "#define \fBI2C_AS3935_DEV_ADDR_3\fP   UINT8_C(0x03)"
.br
.RI "as3935 I2C address when ADD0 and ADD1 pins high "
.ti -1c
.RI "#define \fBI2C_XFR_TIMEOUT_MS\fP   (500)"
.br
.RI "I2C transaction timeout in milliseconds\&. "
.ti -1c
.RI "#define \fBAS3935_REG_00\fP   UINT8_C(0x00)"
.br
.RI "as3935 I2C register to access AFE gain boost and power-down "
.ti -1c
.RI "#define \fBAS3935_REG_01\fP   UINT8_C(0x01)"
.br
.RI "as3935 I2C register to access noise floor level and watchdog threshold (0-15) "
.ti -1c
.RI "#define \fBAS3935_REG_02\fP   UINT8_C(0x02)"
.br
.RI "as3935 I2C register to access clearing statistics, minimum number of lightning, and spike rejection "
.ti -1c
.RI "#define \fBAS3935_REG_03\fP   UINT8_C(0x03)"
.br
.RI "as3935 I2C register to access frequency division ratio and mask disturber "
.ti -1c
.RI "#define \fBAS3935_REG_04\fP   UINT8_C(0x04)"
.br
.RI "as3935 I2C register to access energy of lightning (LSBYTE) "
.ti -1c
.RI "#define \fBAS3935_REG_05\fP   UINT8_C(0x05)"
.br
.RI "as3935 I2C register to access energy of lightning (MSBYTE) "
.ti -1c
.RI "#define \fBAS3935_REG_06\fP   UINT8_C(0x06)"
.br
.RI "as3935 I2C register to access energy of lightning (MMSBYTE) "
.ti -1c
.RI "#define \fBAS3935_REG_07\fP   UINT8_C(0x07)"
.br
.RI "as3935 I2C register to access distance estimation of lightning "
.ti -1c
.RI "#define \fBAS3935_REG_08\fP   UINT8_C(0x08)"
.br
.RI "as3935 I2C register to access internal tuning caps and display (LCO, SRCO, TRCO) on IRQ pin "
.ti -1c
.RI "#define \fBAS3935_REG_RST\fP   UINT8_C(0x96)"
.br
.RI "as3935 I2C register to either calibrate or reset registers to default "
.ti -1c
.RI "#define \fBAS3935_CMD_PRESET_DEFAULT\fP   UINT8_C(0x3c)"
.br
.RI "as3935 I2C command to set all registers in default mode "
.ti -1c
.RI "#define \fBAS3935_CMD_CALIB_RCO\fP   UINT8_C(0x3d)"
.br
.RI "as3935 I2C command to automatically calibrate the internal RC oscillators "
.ti -1c
.RI "#define \fBAS3935_POWERUP_DELAY_MS\fP   (25)"
.br
.ti -1c
.RI "#define \fBAS3935_APPSTART_DELAY_MS\fP   (25)"
.br
.ti -1c
.RI "#define \fBAS3935_STARTUP_DELAY_MS\fP   (2)"
.br
.RI "as3935 I2C LCO start-up delay in milliseconds "
.ti -1c
.RI "#define \fBAS3935_INTERRUPT_DELAY_MS\fP   (2)"
.br
.RI "as3935 I2C interrupt delay in milliseconds "
.ti -1c
.RI "#define \fBAS3935_CALIBRATION_DELAY_MS\fP   (2)"
.br
.RI "as3935 I2C calibration delay in milliseconds for RC oscillators "
.ti -1c
.RI "#define \fBAS3935_TX_RX_DELAY_MS\fP   UINT16_C(10)"
.br
.ti -1c
.RI "#define \fBI2C_AS3935_CONFIG_DEFAULT\fP"
.br
.RI "CJMCU-3935 Board Wiring (I2C interface): ADD0 & ADD1 pin to VCC (3\&.3v) -> I2C address 0x03 SI pin to VCC (3\&.3v) -> enable I2C interface SCL pin 10k-ohm pull-up resistor to VCC (3\&.3v) SCL pin to MCU SCL pin MOSI (SDA) pin to MCU SDA pin IRQ pin to MCU interrupt pin VCC pin to 3\&.3v GND pin to common ground\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void * \fBas3935_monitor_handle_t\fP"
.br
.RI "AS3935 monitor handle definition\&. "
.ti -1c
.RI "typedef enum \fBas3935_analog_frontends_e\fP \fBas3935_analog_frontends_t\fP"
.br
.RI "AS3935 enumerator and structure declarations\&. "
.ti -1c
.RI "typedef enum \fBas3935_power_states_e\fP \fBas3935_power_states_t\fP"
.br
.RI "AS3935 power states REG0x00[0] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_clear_statistics_states_e\fP \fBas3935_clear_statistics_states_t\fP"
.br
.RI "AS3935 clear statistics states REG0x02[6] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_disturber_detection_states_e\fP \fBas3935_disturber_detection_states_t\fP"
.br
.RI "AS3935 disturber detection states REG0x03[5] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_co_irq_pin_states_e\fP \fBas3935_co_irq_pin_states_t\fP"
.br
.RI "AS3935 CO IRQ pin states REG0x08[5]|[6]|[7] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_watchdog_thresholds_e\fP \fBas3935_watchdog_thresholds_t\fP"
.br
.RI "AS3935 watchdog thresholds REG0x01[3:0] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_noise_levels_e\fP \fBas3935_noise_levels_t\fP"
.br
.RI "AS3935 noise floor generator and evaluation REG0x01[6:4] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_interrupt_states_e\fP \fBas3935_interrupt_states_t\fP"
.br
.RI "AS3935 interrupt states REG0x03[3:0] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_minimum_lightnings_e\fP \fBas3935_minimum_lightnings_t\fP"
.br
.RI "AS3935 minimum number of lightning detections REG0x02[5:4] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_frequency_division_ratios_e\fP \fBas3935_frequency_division_ratios_t\fP"
.br
.RI "AS3935 frequency division ratio for antenna tunning REG0x03[7:3] LCO_FDIV enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_lightning_distances_e\fP \fBas3935_lightning_distances_t\fP"
.br
.RI "AS3935 lightning estimated distances REG0x07[5:0] enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_rco_calibration_results_e\fP \fBas3935_rco_calibration_results_t\fP"
.br
.RI "AS3935 oscillator calibration status results enumerator\&. "
.ti -1c
.RI "typedef enum \fBas3935_oscillator_modes_e\fP \fBas3935_oscillator_modes_t\fP"
.br
.RI "AS3935 tuning mode oscillators enumerator\&. "
.ti -1c
.RI "typedef struct \fBas3935_config_s\fP \fBas3935_config_t\fP"
.br
.RI "I2C AS3935 device configuration structure\&. "
.ti -1c
.RI "typedef struct as3935_context_t \fBas3935_context_t\fP"
.br
.RI "AS3935 context structure definition\&. "
.ti -1c
.RI "typedef struct \fBas3935_context_t\fP * \fBas3935_handle_t\fP"
.br
.RI "AS3935 handle structure definition\&. "
.ti -1c
.RI "typedef gpio_isr_t \fBas3935_isr_t\fP"
.br
.ti -1c
.RI "typedef struct \fBas3935_monitor_base_s\fP \fBas3935_monitor_base_t\fP"
.br
.RI "AS3935 device event object structure\&. "
.ti -1c
.RI "typedef struct \fBas3935_monitor_context_s\fP \fBas3935_monitor_context_t\fP"
.br
.RI "esp AS3935 device state machine structure\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBas3935_analog_frontends_e\fP { \fBAS3935_AFE_INDOOR\fP = (0b10010), \fBAS3935_AFE_OUTDOOR\fP = (0b01110) }"
.br
.RI "AS3935 enumerator and structure declarations\&. "
.ti -1c
.RI "enum \fBas3935_power_states_e\fP { \fBAS3935_POWER_OFF\fP = 1, \fBAS3935_POWER_ON\fP = 0 }"
.br
.RI "AS3935 power states REG0x00[0] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_clear_statistics_states_e\fP { \fBAS3935_CLEAR_STATS_DISABLED\fP = 1, \fBAS3935_CLEAR_STATS_ENABLED\fP = 0 }"
.br
.RI "AS3935 clear statistics states REG0x02[6] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_disturber_detection_states_e\fP { \fBAS3935_DISTURBER_DETECTION_ENABLED\fP = 0, \fBAS3935_DISTURBER_DETECTION_DISABLED\fP = 1 }"
.br
.RI "AS3935 disturber detection states REG0x03[5] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_co_irq_pin_states_e\fP { \fBAS3935_CO_IRQ_PIN_ENABLED\fP = 1, \fBAS3935_CO_IRQ_PIN_DISABLED\fP = 0 }"
.br
.RI "AS3935 CO IRQ pin states REG0x08[5]|[6]|[7] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_watchdog_thresholds_e\fP { \fBAS3935_WD_THRESHOLD_0\fP = (0b0000), \fBAS3935_WD_THRESHOLD_1\fP = (0b0001), \fBAS3935_WD_THRESHOLD_2\fP = (0b0010), \fBAS3935_WD_THRESHOLD_3\fP = (0b0011), \fBAS3935_WD_THRESHOLD_4\fP = (0b0100), \fBAS3935_WD_THRESHOLD_5\fP = (0b0101), \fBAS3935_WD_THRESHOLD_6\fP = (0b0110), \fBAS3935_WD_THRESHOLD_7\fP = (0b0111), \fBAS3935_WD_THRESHOLD_8\fP = (0b1000), \fBAS3935_WD_THRESHOLD_9\fP = (0b1001), \fBAS3935_WD_THRESHOLD_10\fP = (0b1010) }"
.br
.RI "AS3935 watchdog thresholds REG0x01[3:0] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_noise_levels_e\fP { \fBAS3935_NOISE_LEVEL_390_28\fP = (0b000), \fBAS3935_NOISE_LEVEL_630_45\fP = (0b001), \fBAS3935_NOISE_LEVEL_860_62\fP = (0b010), \fBAS3935_NOISE_LEVEL_1100_78\fP = (0b011), \fBAS3935_NOISE_LEVEL_1140_95\fP = (0b100), \fBAS3935_NOISE_LEVEL_1570_112\fP = (0b101), \fBAS3935_NOISE_LEVEL_1800_130\fP = (0b110), \fBAS3935_NOISE_LEVEL_2000_146\fP = (0b111) }"
.br
.RI "AS3935 noise floor generator and evaluation REG0x01[6:4] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_interrupt_states_e\fP { \fBAS3935_INT_NOISE\fP = (0b0001), \fBAS3935_INT_DISTURBER\fP = (0b0100), \fBAS3935_INT_LIGHTNING\fP = (0b1000), \fBAS3935_INT_NONE\fP = (0b0000) }"
.br
.RI "AS3935 interrupt states REG0x03[3:0] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_minimum_lightnings_e\fP { \fBAS3935_MIN_LIGHTNING_1\fP = (0b00), \fBAS3935_MIN_LIGHTNING_5\fP = (0b01), \fBAS3935_MIN_LIGHTNING_9\fP = (0b10), \fBAS3935_MIN_LIGHTNING_16\fP = (0b11) }"
.br
.RI "AS3935 minimum number of lightning detections REG0x02[5:4] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_frequency_division_ratios_e\fP { \fBAS3935_FREQ_DIV_RATIO_16\fP = (0b00), \fBAS3935_FREQ_DIV_RATIO_32\fP = (0b01), \fBAS3935_FREQ_DIV_RATIO_64\fP = (0b10), \fBAS3935_FREQ_DIV_RATIO_128\fP = (0b11) }"
.br
.RI "AS3935 frequency division ratio for antenna tunning REG0x03[7:3] LCO_FDIV enumerator\&. "
.ti -1c
.RI "enum \fBas3935_lightning_distances_e\fP { \fBAS3935_L_DISTANCE_OVERHEAD\fP = (0b000001), \fBAS3935_L_DISTANCE_5KM\fP = (0b000101), \fBAS3935_L_DISTANCE_6KM\fP = (0b000110), \fBAS3935_L_DISTANCE_8KM\fP = (0b001000), \fBAS3935_L_DISTANCE_10KM\fP = (0b001010), \fBAS3935_L_DISTANCE_12KM\fP = (0b001100), \fBAS3935_L_DISTANCE_14KM\fP = (0b001110), \fBAS3935_L_DISTANCE_17KM\fP = (0b010001), \fBAS3935_L_DISTANCE_20KM\fP = (0b010100), \fBAS3935_L_DISTANCE_24KM\fP = (0b011000), \fBAS3935_L_DISTANCE_27KM\fP = (0b011011), \fBAS3935_L_DISTANCE_31KM\fP = (0b011111), \fBAS3935_L_DISTANCE_34KM\fP = (0b100010), \fBAS3935_L_DISTANCE_37KM\fP = (0b100101), \fBAS3935_L_DISTANCE_40KM\fP = (0b101000), \fBAS3935_L_DISTANCE_OO_RANGE\fP = (0b111111) }"
.br
.RI "AS3935 lightning estimated distances REG0x07[5:0] enumerator\&. "
.ti -1c
.RI "enum \fBas3935_rco_calibration_results_e\fP { \fBAS3935_RCO_CALIBRATION_SUCCESSFUL\fP, \fBAS3935_RCO_CALIBRATION_UNSUCCESSFUL\fP, \fBAS3935_RCO_CALIBRATION_INCOMPLETE\fP }"
.br
.RI "AS3935 oscillator calibration status results enumerator\&. "
.ti -1c
.RI "enum \fBas3935_oscillator_modes_e\fP { \fBAS3935_OSCILLATOR_ANTENNA_LC\fP, \fBAS3935_OSCILLATOR_TIMER_RC\fP, \fBAS3935_OSCILLATOR_SYSTEM_RC\fP }"
.br
.RI "AS3935 tuning mode oscillators enumerator\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBESP_EVENT_DECLARE_BASE\fP (ESP_AS3935_EVENT)"
.br
.RI "declare of AS3935 monitor event base\&. "
.ti -1c
.RI "union \fB__attribute__\fP ((packed)) ahtxx_status_register_u"
.br
.RI "AHTXX status register structure definition\&. "
.ti -1c
.RI "esp_err_t \fBas3935_monitor_init\fP (i2c_master_bus_handle_t master_handle, const \fBas3935_config_t\fP *as3935_config, \fBas3935_monitor_handle_t\fP *monitor_handle)"
.br
.RI "initialize AS3935 monitor instance\&. "
.ti -1c
.RI "esp_err_t \fBas3935_monitor_deinit\fP (\fBas3935_monitor_handle_t\fP monitor_handle)"
.br
.RI "de-initialize AS3935 monitor instance\&. "
.ti -1c
.RI "esp_err_t \fBas3935_monitor_add_handler\fP (\fBas3935_monitor_handle_t\fP monitor_handle, esp_event_handler_t event_handler, void *handler_args)"
.br
.RI "adds user defined event handler for AS3935 monitor\&. "
.ti -1c
.RI "esp_err_t \fBas3935_monitor_remove_handler\fP (\fBas3935_monitor_handle_t\fP monitor_handle, esp_event_handler_t event_handler)"
.br
.RI "removes user defined event handler for AS3935 monitor\&. "
.ti -1c
.RI "esp_err_t \fBas3935_get_0x00_register\fP (\fBas3935_handle_t\fP handle, as3935_0x00_register_t *const reg)"
.br
.RI "gets 0x00 register from AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_set_0x00_register\fP (\fBas3935_handle_t\fP handle, const as3935_0x00_register_t reg)"
.br
.RI "sets 0x00 register on AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_get_0x01_register\fP (\fBas3935_handle_t\fP handle, as3935_0x01_register_t *const reg)"
.br
.RI "gets 0x01 register from AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_set_0x01_register\fP (\fBas3935_handle_t\fP handle, const as3935_0x01_register_t reg)"
.br
.RI "sets 0x01 register on AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_get_0x02_register\fP (\fBas3935_handle_t\fP handle, as3935_0x02_register_t *const reg)"
.br
.RI "gets 0x02 register from AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_set_0x02_register\fP (\fBas3935_handle_t\fP handle, const as3935_0x02_register_t reg)"
.br
.RI "sets 0x02 register on AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_get_0x03_register\fP (\fBas3935_handle_t\fP handle, as3935_0x03_register_t *const reg)"
.br
.RI "gets 0x03 register from AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_set_0x03_register\fP (\fBas3935_handle_t\fP handle, const as3935_0x03_register_t reg)"
.br
.RI "sets 0x03 register on AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_get_0x08_register\fP (\fBas3935_handle_t\fP handle, as3935_0x08_register_t *const reg)"
.br
.RI "gets 0x08 register from AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_set_0x08_register\fP (\fBas3935_handle_t\fP handle, const as3935_0x08_register_t reg)"
.br
.RI "sets 0x08 register on AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_init\fP (i2c_master_bus_handle_t master_handle, const \fBas3935_config_t\fP *as3935_config, \fBas3935_handle_t\fP *as3935_handle)"
.br
.RI "initializes an AS3935 device onto the I2C master bus\&. "
.ti -1c
.RI "esp_err_t \fBas3935_register_isr\fP (\fBas3935_handle_t\fP handle, const as3935_isr_t isr)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_reset_to_defaults\fP (\fBas3935_handle_t\fP handle)"
.br
.RI "resets AS3935 to defaults\&. "
.ti -1c
.RI "esp_err_t \fBas3935_calibrate_rco\fP (\fBas3935_handle_t\fP handle)"
.br
.RI "calibrates AS3935 RC oscillator\&. "
.ti -1c
.RI "esp_err_t \fBas3935_clear_lightning_statistics\fP (\fBas3935_handle_t\fP handle)"
.br
.RI "clears AS3935 lightning statistics\&. "
.ti -1c
.RI "esp_err_t \fBas3935_enable_power\fP (\fBas3935_handle_t\fP handle)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_analog_frontend\fP (\fBas3935_handle_t\fP handle, \fBas3935_analog_frontends_t\fP *const analog_frontend)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_watchdog_threshold\fP (\fBas3935_handle_t\fP handle, \fBas3935_watchdog_thresholds_t\fP *const watchdog_threshold)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_noise_floor_threshold\fP (\fBas3935_handle_t\fP handle, \fBas3935_noise_levels_t\fP *const noise_level)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_spike_rejection\fP (\fBas3935_handle_t\fP handle, uint8_t *const spike_rejection)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_minimum_lightnings\fP (\fBas3935_handle_t\fP handle, \fBas3935_minimum_lightnings_t\fP *const min_lightnings)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_enable_disturber_detection\fP (\fBas3935_handle_t\fP handle)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_frequency_division_ratio\fP (\fBas3935_handle_t\fP handle, \fBas3935_frequency_division_ratios_t\fP *const ratio)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_display_oscillator_on_irq\fP (\fBas3935_handle_t\fP handle, \fBas3935_oscillator_modes_t\fP oscillator_mode, bool *const enabled)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_internal_capacitors\fP (\fBas3935_handle_t\fP handle, uint8_t *const value)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_disable_power\fP (\fBas3935_handle_t\fP handle)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_analog_frontend\fP (\fBas3935_handle_t\fP handle, const \fBas3935_analog_frontends_t\fP analog_frontend)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_watchdog_threshold\fP (\fBas3935_handle_t\fP handle, const \fBas3935_watchdog_thresholds_t\fP watchdog_threshold)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_noise_floor_threshold\fP (\fBas3935_handle_t\fP handle, const \fBas3935_noise_levels_t\fP noise_level)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_spike_rejection\fP (\fBas3935_handle_t\fP handle, const uint8_t spike_rejection)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_minimum_lightnings\fP (\fBas3935_handle_t\fP handle, const \fBas3935_minimum_lightnings_t\fP min_lightnings)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_disable_disturber_detection\fP (\fBas3935_handle_t\fP handle)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_frequency_division_ratio\fP (\fBas3935_handle_t\fP handle, const \fBas3935_frequency_division_ratios_t\fP ratio)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_display_oscillator_on_irq\fP (\fBas3935_handle_t\fP handle, const \fBas3935_oscillator_modes_t\fP oscillator_mode, const bool enabled)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_set_internal_capacitors\fP (\fBas3935_handle_t\fP handle, const uint8_t value)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_interrupt_state\fP (\fBas3935_handle_t\fP handle, \fBas3935_interrupt_states_t\fP *const state)"
.br
.RI "gets interrupt state of AS3935\&. "
.ti -1c
.RI "esp_err_t \fBas3935_get_lightning_energy\fP (\fBas3935_handle_t\fP handle, uint32_t *const energy)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_lightning_distance\fP (\fBas3935_handle_t\fP handle, \fBas3935_lightning_distances_t\fP *const distance)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_lightning_distance_km\fP (\fBas3935_handle_t\fP handle, uint8_t *const distance)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_get_lightning_event\fP (\fBas3935_handle_t\fP handle, \fBas3935_lightning_distances_t\fP *const distance, uint32_t *const energy)"
.br
.ti -1c
.RI "esp_err_t \fBas3935_remove\fP (\fBas3935_handle_t\fP handle)"
.br
.RI "Removes an AS3935 device from I2C master bus\&. "
.ti -1c
.RI "esp_err_t \fBas3935_delete\fP (\fBas3935_handle_t\fP handle)"
.br
.RI "Removes an AS3935 device from master bus and frees handle\&. "
.ti -1c
.RI "const char * \fBas3935_get_fw_version\fP (void)"
.br
.RI "Converts AS3935 firmware version numbers (major, minor, patch, build) into a string\&. "
.ti -1c
.RI "int32_t \fBas3935_get_fw_version_number\fP (void)"
.br
.RI "Converts AS3935 firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBas3935_0x00_register_t\fP"
.br
.ti -1c
.RI "\fBas3935_0x01_register_t\fP"
.br
.ti -1c
.RI "\fBas3935_0x02_register_t\fP"
.br
.ti -1c
.RI "\fBas3935_0x03_register_t\fP"
.br
.ti -1c
.RI "\fBas3935_0x07_register_t\fP"
.br
.ti -1c
.RI "\fBas3935_0x08_register_t\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
