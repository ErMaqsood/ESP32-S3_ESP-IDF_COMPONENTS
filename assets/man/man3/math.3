.TH "math" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
math \- kalman motion
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBkalman_motion_t\fP"
.br
.RI "Kalman motion state structure\&. "
.ti -1c
.RI "struct \fBquaternion_t\fP"
.br
.RI "Quaternion structure\&. "
.ti -1c
.RI "struct \fBvector_float_t\fP"
.br
.RI "Vector float structure\&. "
.ti -1c
.RI "struct \fBvector_int16_t\fP"
.br
.RI "Vector_int16 structure\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct kalman_motion_t \fBkalman_motion_t\fP"
.br
.RI "Kalman motion definition\&. "
.ti -1c
.RI "typedef struct \fBkalman_motion_t\fP * \fBkalman_motion_handle_t\fP"
.br
.RI "Kalman motion handle definition\&. "
.ti -1c
.RI "typedef struct quaternion_t \fBquaternion_t\fP"
.br
.RI "Quaternion definitions\&. "
.ti -1c
.RI "typedef struct \fBquaternion_t\fP * \fBquaternion_handle_t\fP"
.br
.RI "Quaternion handle structure\&. "
.ti -1c
.RI "typedef struct vector_float_t \fBvector_float_t\fP"
.br
.RI "Vector float definition\&. "
.ti -1c
.RI "typedef struct \fBvector_float_t\fP * \fBvector_float_handle_t\fP"
.br
.RI "Vector float handle structure\&. "
.ti -1c
.RI "typedef struct vector_int16_t \fBvector_int16_t\fP"
.br
.RI "Vector_int16 definitions\&. "
.ti -1c
.RI "typedef struct \fBvector_int16_t\fP * \fBvector_int16_handle_t\fP"
.br
.RI "Vector_int16 handle structure\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBkalman_motion_init\fP (\fBkalman_motion_handle_t\fP *kalman_handle)"
.br
.RI "Initializes a kalman motion handle instance to filter data from a gyroscope and/or accelerometer\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_get_angle\fP (\fBkalman_motion_handle_t\fP kalman_handle, const float new_angle, const float new_rate, const float delta_time, float *const angle)"
.br
.RI "Calculates angle using a Kalman motion filter\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_set_angle\fP (\fBkalman_motion_handle_t\fP kalman_handle, const float angle)"
.br
.RI "Sets the angle and should be used to set the starting angle\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_get_rate\fP (\fBkalman_motion_handle_t\fP kalman_handle, float *const rate)"
.br
.RI "Gets the unbiased rate calculated from the rate and the calculated bias\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_set_q_angle\fP (\fBkalman_motion_handle_t\fP kalman_handle, const float q_angle)"
.br
.RI "Sets q_angle noise variance for the accelerometer\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_set_q_bias\fP (\fBkalman_motion_handle_t\fP kalman_handle, const float q_bias)"
.br
.RI "Sets q_bias noise variance for the gyroscope\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_set_r_measure\fP (\fBkalman_motion_handle_t\fP kalman_handle, const float r_measure)"
.br
.RI "Sets r_measure noise variance for the measurement\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_get_q_angle\fP (\fBkalman_motion_handle_t\fP kalman_handle, float *const q_angle)"
.br
.RI "Gets q_angle noise variance for the accelerometer\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_get_q_bias\fP (\fBkalman_motion_handle_t\fP kalman_handle, float *const q_bias)"
.br
.RI "Gets q_bias noise variance for the gyroscope\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_get_r_measure\fP (\fBkalman_motion_handle_t\fP kalman_handle, float *const r_measure)"
.br
.RI "Gets r_measure noise variance for the measurement\&. "
.ti -1c
.RI "esp_err_t \fBkalman_motion_delete\fP (\fBkalman_motion_handle_t\fP kalman_handle)"
.br
.RI "Frees Kalman motion handle\&. "
.ti -1c
.RI "esp_err_t \fBquaternion_init\fP (\fBquaternion_handle_t\fP *quaternion_handle)"
.br
.ti -1c
.RI "esp_err_t \fBquaternion_init_data\fP (\fBquaternion_handle_t\fP quaternion_handle, float nw, float nx, float ny, float nz)"
.br
.ti -1c
.RI "esp_err_t \fBquaternion_get_product\fP (\fBquaternion_handle_t\fP quaternion_handle, \fBquaternion_handle_t\fP *product_handle)"
.br
.ti -1c
.RI "esp_err_t \fBquaternion_get_conjugate\fP (\fBquaternion_handle_t\fP quaternion_handle, \fBquaternion_handle_t\fP *conjugate_handle)"
.br
.ti -1c
.RI "esp_err_t \fBquaternion_get_magnitude\fP (\fBquaternion_handle_t\fP quaternion_handle, float *magnitude)"
.br
.ti -1c
.RI "esp_err_t \fBquaternion_normalize\fP (\fBquaternion_handle_t\fP quaternion_handle)"
.br
.ti -1c
.RI "esp_err_t \fBquaternion_get_normalized\fP (\fBquaternion_handle_t\fP quaternion_handle, \fBquaternion_handle_t\fP *normalized_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_init\fP (\fBvector_float_handle_t\fP *vector_float_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_init_data\fP (\fBvector_float_handle_t\fP vector_float_handle, float nx, float ny, float nz)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_get_magnitude\fP (\fBvector_float_handle_t\fP vector_float_handle, float *magnitude)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_normalize\fP (\fBvector_float_handle_t\fP vector_float_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_get_normalized\fP (\fBvector_float_handle_t\fP vector_float_handle, \fBvector_float_handle_t\fP *normalized_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_rotate\fP (\fBvector_float_handle_t\fP vector_float_handle, \fBquaternion_handle_t\fP quaternion_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_float_get_rotated\fP (\fBvector_float_handle_t\fP vector_float_handle, \fBquaternion_handle_t\fP quaternion_handle, \fBvector_float_handle_t\fP *rotated_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_init\fP (\fBvector_int16_handle_t\fP *vector_int16_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_init_data\fP (\fBvector_int16_handle_t\fP vector_int16_handle, int16_t nx, int16_t ny, int16_t nz)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_get_magnitude\fP (\fBvector_int16_handle_t\fP vector_int16_handle, float *magnitude)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_normalize\fP (\fBvector_int16_handle_t\fP vector_int16_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_get_normalized\fP (\fBvector_int16_handle_t\fP vector_int16_handle, \fBvector_int16_handle_t\fP *normalized_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_rotate\fP (\fBvector_int16_handle_t\fP vector_int16_handle, \fBquaternion_handle_t\fP quaternion_handle)"
.br
.ti -1c
.RI "esp_err_t \fBvector_int16_get_rotated\fP (\fBvector_int16_handle_t\fP vector_int16_handle, \fBquaternion_handle_t\fP quaternion_handle, \fBvector_int16_handle_t\fP *rotated_handle)"
.br
.in -1c
.SH "Detailed Description"
.PP 
ESP-IDF kalman motion filter library

.PP
Ported from esp-open-rtos

.PP
http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it/ https://github.com/TKJElectronics/KalmanFilter/blob/master/Kalman.cpp

.PP
Copyright (c) 2024 Eric Gionet (gionet.c.eric@gmail.com)

.PP
MIT Licensed as described in the file LICENSE

.PP
ESP-IDF 3d math library

.PP
Ported from esp-open-rtos

.PP
Copyright (c) 2024 Eric Gionet (gionet.c.eric@gmail.com)

.PP
MIT Licensed as described in the file LICENSE 
.SH "Function Documentation"
.PP 
.SS "esp_err_t kalman_motion_delete (\fBkalman_motion_handle_t\fP kalman_handle)"

.PP
Frees Kalman motion handle\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_get_angle (\fBkalman_motion_handle_t\fP kalman_handle, const float new_angle, const float new_rate, const float delta_time, float *const angle)"

.PP
Calculates angle using a Kalman motion filter\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fInew_angle\fP New angle in degrees to process\&. 
.br
\fInew_rate\fP New rate in degrees per second to process\&. 
.br
\fIdelta_time\fP Delta time in seconds\&. 
.br
\fIangle\fP Calculated angle using Kalman filter\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_get_q_angle (\fBkalman_motion_handle_t\fP kalman_handle, float *const q_angle)"

.PP
Gets q_angle noise variance for the accelerometer\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIq_angle\fP Angle noise variance in degrees\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_get_q_bias (\fBkalman_motion_handle_t\fP kalman_handle, float *const q_bias)"

.PP
Gets q_bias noise variance for the gyroscope\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIq_bias\fP Bias noise variance\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_get_r_measure (\fBkalman_motion_handle_t\fP kalman_handle, float *const r_measure)"

.PP
Gets r_measure noise variance for the measurement\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIr_measure\fP Measurement noise variance\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_get_rate (\fBkalman_motion_handle_t\fP kalman_handle, float *const rate)"

.PP
Gets the unbiased rate calculated from the rate and the calculated bias\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIrate\fP Rate in degrees per second\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_init (\fBkalman_motion_handle_t\fP * kalman_handle)"

.PP
Initializes a kalman motion handle instance to filter data from a gyroscope and/or accelerometer\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_set_angle (\fBkalman_motion_handle_t\fP kalman_handle, const float angle)"

.PP
Sets the angle and should be used to set the starting angle\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIangle\fP Angle in degrees\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_set_q_angle (\fBkalman_motion_handle_t\fP kalman_handle, const float q_angle)"

.PP
Sets q_angle noise variance for the accelerometer\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIq_angle\fP Angle noise variance in degrees\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_set_q_bias (\fBkalman_motion_handle_t\fP kalman_handle, const float q_bias)"

.PP
Sets q_bias noise variance for the gyroscope\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIq_bias\fP Bias noise variance\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SS "esp_err_t kalman_motion_set_r_measure (\fBkalman_motion_handle_t\fP kalman_handle, const float r_measure)"

.PP
Sets r_measure noise variance for the measurement\&. 
.PP
\fBParameters\fP
.RS 4
\fIkalman_handle\fP Kalman motion state handle\&. 
.br
\fIr_measure\fP Measurement noise variance\&. 
.RE
.PP
\fBReturns\fP
.RS 4
esp_err_t ESP_OK on success\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
