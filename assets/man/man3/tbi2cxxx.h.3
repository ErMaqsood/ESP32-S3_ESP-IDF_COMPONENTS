.TH "components/peripherals/i2c/esp_tbi2cxxx/include/tbi2cxxx.h" 3 "ESP-IDF Components by K0I05" \" -*- nroff -*-
.ad l
.nh
.SH NAME
components/peripherals/i2c/esp_tbi2cxxx/include/tbi2cxxx.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br
\fR#include <esp_err\&.h>\fP
.br
\fR#include <driver/i2c_master\&.h>\fP
.br
\fR#include <type_utils\&.h>\fP
.br
\fR#include 'tbi2cxxx_version\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBtbi2cxxx_config_s\fP"
.br
.RI "TBI2CXXX configuration structure\&. "
.ti -1c
.RI "struct \fBtbi2cxxx_context_t\fP"
.br
.RI "TBI2CXXX context structure\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBI2C_TBI2CXXX_DEV_CLK_SPD\fP   UINT32_C(100000)"
.br
.RI "tbi2cxxx I2C default clock frequency (100KHz) "
.ti -1c
.RI "#define \fBI2C_TBI2CXXX_DEV_ADDR\fP   UINT8_C(0x3a)"
.br
.RI "tbi2cxxx I2C address "
.ti -1c
.RI "#define \fBI2C_XFR_TIMEOUT_MS\fP   (500)"
.br
.RI "I2C transaction timeout in milliseconds\&. "
.ti -1c
.RI "#define \fBI2C_AHT2X_CONFIG_DEFAULT\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBtbi2cxxx_types_e\fP \fBtbi2cxxx_types_t\fP"
.br
.RI "TBI2CXXX types enumerators\&. "
.ti -1c
.RI "typedef struct \fBtbi2cxxx_config_s\fP \fBtbi2cxxx_config_t\fP"
.br
.RI "TBI2CXXX configuration structure\&. "
.ti -1c
.RI "typedef struct tbi2cxxx_context_t \fBtbi2cxxx_context_t\fP"
.br
.RI "TBI2CXXX context structure definition\&. "
.ti -1c
.RI "typedef struct \fBtbi2cxxx_context_t\fP * \fBtbi2cxxx_handle_t\fP"
.br
.RI "TBI2CXXX handle structure definition\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBtbi2cxxx_types_e\fP { \fBTBI2CH04\fP, \fBTBI2CH08\fP, \fBTBI2CH70\fP, \fBTBI2CS70\fP }"
.br
.RI "TBI2CXXX types enumerators\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_init\fP (i2c_master_bus_handle_t master_handle, const \fBtbi2cxxx_config_t\fP *tbi2cxxx_config, \fBtbi2cxxx_handle_t\fP *tbi2cxxx_handle)"
.br
.RI "Initializes an TBI2CXXX device onto the I2C master bus\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_get_temperatures\fP (\fBtbi2cxxx_handle_t\fP handle, float *const ambient_temperature, float *const object_temperature)"
.br
.RI "Reads ambient and object temperatures from TBI2CXXX\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_get_ambient_temperature\fP (\fBtbi2cxxx_handle_t\fP handle, float *const temperature)"
.br
.RI "Reads ambient temperature from TBI2CXXX\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_get_object_temperature\fP (\fBtbi2cxxx_handle_t\fP handle, float *const temperature)"
.br
.RI "Reads object temperature from TBI2CXXX\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_get_emissivity\fP (\fBtbi2cxxx_handle_t\fP handle, float *const coefficient)"
.br
.RI "Reads emissivity coefficient setting from TBI2CXXX\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_set_emissivity\fP (\fBtbi2cxxx_handle_t\fP handle, const float coefficient)"
.br
.RI "Writes emissivity coefficient setting to TBI2CXXX\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_remove\fP (\fBtbi2cxxx_handle_t\fP handle)"
.br
.RI "Removes an TBI2CXXX device from master bus\&. "
.ti -1c
.RI "esp_err_t \fBtbi2cxxx_delete\fP (\fBtbi2cxxx_handle_t\fP handle)"
.br
.RI "Removes an TBI2CXXX device from master bus and frees handle\&. "
.ti -1c
.RI "const char * \fBtbi2cxxx_get_fw_version\fP (void)"
.br
.RI "Converts TBI2CXXX firmware version numbers (major, minor, patch, build) into a string\&. "
.ti -1c
.RI "int32_t \fBtbi2cxxx_get_fw_version_number\fP (void)"
.br
.RI "Converts TBI2CXXX firmware version numbers (major, minor, patch) into an integer value\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for ESP-IDF Components by K0I05 from the source code\&.
