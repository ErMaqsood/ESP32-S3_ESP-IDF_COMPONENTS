<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pressure__tendency_8c" kind="file" language="C++">
    <compoundname>pressure_tendency.c</compoundname>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_types.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="pressure__tendency_8h" local="yes">include/pressure_tendency.h</includes>
    <incdepgraph>
      <node id="6">
        <label>include/pressure_tendency.h</label>
        <link refid="pressure__tendency_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pressure_tendency_version.h</label>
        <link refid="pressure__tendency__version_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/utilities/esp_pressure_tendency/pressure_tendency.c</label>
        <link refid="pressure__tendency_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>esp_check.h</label>
      </node>
      <node id="3">
        <label>esp_log.h</label>
      </node>
      <node id="4">
        <label>esp_types.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="pressure__tendency_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="48" column="9" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="pressure__tendency_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;pressure_tendency&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="53" column="19" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="pressure__tendency_8c_1abdfc685f6f2abff2900a51ebef05df2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * pressure_tendency_code_to_string</definition>
        <argsstring>(const pressure_tendency_codes_t code)</argsstring>
        <name>pressure_tendency_code_to_string</name>
        <param>
          <type>const <ref refid="pressure__tendency_8h_1a10e8ef7107f8ea37166e4423e920cdaf" kindref="member">pressure_tendency_codes_t</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Converts <computeroutput><ref refid="pressure__tendency_8h_1a10e8ef7107f8ea37166e4423e920cdaf" kindref="member">pressure_tendency_codes_t</ref></computeroutput> enumerator pressure tendency code to string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency code to convert to a string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* String representation of the pressure tendency code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="55" column="12" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="55" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="pressure__tendency_8c_1a4bcd677b48fd8bd6acad4e472e5ba31e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t pressure_tendency_init</definition>
        <argsstring>(const uint16_t samples_size, pressure_tendency_handle_t *pressure_tendency_handle)</argsstring>
        <name>pressure_tendency_init</name>
        <param>
          <type>const uint16_t</type>
          <declname>samples_size</declname>
        </param>
        <param>
          <type><ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref> *</type>
          <declname>pressure_tendency_handle</declname>
        </param>
        <briefdescription>
<para>Initializes a pressure tendency handle by size of the 3-hr samples to analyze. The size of the samples is calculated from the sampling rate. <linebreak/>
 As an example, if the sampling rate is once every minute, the size of the samples buffer should be 180 e.g., three (3) hours. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>samples_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency samples buffer size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pressure_tendency_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="70" column="11" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="70" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="pressure__tendency_8c_1a8f25d3d3d856aa285b773760b8575b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t pressure_tendency_analysis</definition>
        <argsstring>(pressure_tendency_handle_t pressure_tendency_handle, const float sample, pressure_tendency_codes_t *const code, float *const change)</argsstring>
        <name>pressure_tendency_analysis</name>
        <param>
          <type><ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref></type>
          <declname>pressure_tendency_handle</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>sample</declname>
        </param>
        <param>
          <type><ref refid="pressure__tendency_8h_1a10e8ef7107f8ea37166e4423e920cdaf" kindref="member">pressure_tendency_codes_t</ref> *const</type>
          <declname>code</declname>
        </param>
        <param>
          <type>float *const</type>
          <declname>change</declname>
        </param>
        <briefdescription>
<para>Analyzes historical samples and pressure tendency appears after three (3) hours of operation. The pressure tendency are based the 3-hr variance of the previous 3-hour history. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pressure_tendency_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample</parametername>
</parameternamelist>
<parameterdescription>
<para>Air pressure sample, in millibars or hecto-pascal, to push onto the samples stack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency code of three (3) hour analysis. Pressure tendency code <computeroutput>PRESSURE_TENDENCY_UNKNOWN</computeroutput> is reported when there is an insufficient number of samples to analyze. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>change</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency variance over the past three (3) hours. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="98" column="11" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="98" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="pressure__tendency_8c_1aececf3a09cfaba87373aa43313176277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t pressure_tendency_reset</definition>
        <argsstring>(pressure_tendency_handle_t pressure_tendency_handle)</argsstring>
        <name>pressure_tendency_reset</name>
        <param>
          <type><ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref></type>
          <declname>pressure_tendency_handle</declname>
        </param>
        <briefdescription>
<para>Purges pressure tendency samples array and resets samples counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pressure_tendency_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="161" column="11" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="161" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="pressure__tendency_8c_1af7370f9b7e6c674b4b2317f81c7271da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t pressure_tendency_delete</definition>
        <argsstring>(pressure_tendency_handle_t pressure_tendency_handle)</argsstring>
        <name>pressure_tendency_delete</name>
        <param>
          <type><ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref></type>
          <declname>pressure_tendency_handle</declname>
        </param>
        <briefdescription>
<para>Frees pressure tendency handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pressure_tendency_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pressure tendency handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="176" column="11" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="176" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="pressure__tendency_8c_1afb1937afb675db139a11ccc782236d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * pressure_tendency_get_fw_version</definition>
        <argsstring>(void)</argsstring>
        <name>pressure_tendency_get_fw_version</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Converts <computeroutput>pressure_tendency</computeroutput> firmware version numbers (major, minor, patch) into a string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>char* <computeroutput>pressure_tendency</computeroutput> firmware version as a string that is formatted as X.X.X (e.g. 4.0.0). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="185" column="12" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="pressure__tendency_8c_1ad818989dd42eb2028a4c7b13b3080039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t pressure_tendency_get_fw_version_number</definition>
        <argsstring>(void)</argsstring>
        <name>pressure_tendency_get_fw_version_number</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Converts <computeroutput>pressure_tendency</computeroutput> firmware version numbers (major, minor, patch) into an integer value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int32_t <computeroutput>pressure_tendency</computeroutput> firmware version number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c" line="189" column="9" bodyfile="components/utilities/esp_pressure_tendency/pressure_tendency.c" bodystart="189" bodyend="191"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Air pressure tendency libary</para>
<para>A air pressure tendency appears after three (3) hours of operation. The tendency codes and change are based on the 3-hr variance from the previous 3-hr history.</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pressure__tendency_8h" kindref="compound">include/pressure_tendency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pressure_tendency&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="pressure__tendency_8c_1abdfc685f6f2abff2900a51ebef05df2d" kindref="member">pressure_tendency_code_to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pressure__tendency_8h_1a10e8ef7107f8ea37166e4423e920cdaf" kindref="member">pressure_tendency_codes_t</ref><sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(code)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa9fb97aacb59f862a9443de755c5dac99" kindref="member">PRESSURE_TENDENCY_CODE_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unkown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aabfe2dfc6f354367d088a198d5787d9c1" kindref="member">PRESSURE_TENDENCY_CODE_RISING</ref>:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Rising&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa78ecfbbe23c1c11a7a4fc5d2f10d336b" kindref="member">PRESSURE_TENDENCY_CODE_STEADY</ref>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Steady&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa7109e9900db9d55b4f3e74797b4dc80c" kindref="member">PRESSURE_TENDENCY_CODE_FALLING</ref>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Falling&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unkown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">esp_err_t<sp/><ref refid="pressure__tendency_8c_1a4bcd677b48fd8bd6acad4e472e5ba31e" kindref="member">pressure_tendency_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>samples_size,<sp/><ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref><sp/>*pressure_tendency_handle)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>samples_size<sp/>&gt;<sp/>2,<sp/>ESP_ERR_INVALID_ARG,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;samples<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>2,<sp/>pressure<sp/>tendency<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>pressure<sp/>tendency<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref><sp/>out_handle<sp/>=<sp/>(<ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpressure__tendency__t" kindref="compound">pressure_tendency_t</ref>));<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>pressure<sp/>tendency<sp/>handle,<sp/>pressure<sp/>tendency<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>samples<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)calloc(samples_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>out_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>,<sp/>ESP_ERR_NO_MEM,<sp/>err_out_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>pressure<sp/>tendency<sp/>handle<sp/>samples,<sp/>pressure<sp/>tendency<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref><sp/>=<sp/>samples_size;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>*pressure_tendency_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>err_out_handle:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">esp_err_t<sp/><ref refid="pressure__tendency_8c_1a8f25d3d3d856aa285b773760b8575b33" kindref="member">pressure_tendency_analysis</ref>(<ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref><sp/>pressure_tendency_handle,<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample,<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pressure__tendency_8h_1a10e8ef7107f8ea37166e4423e920cdaf" kindref="member">pressure_tendency_codes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>code,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>change)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(pressure_tendency_handle);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>we<sp/>filled<sp/>the<sp/>array?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref><sp/>&lt;<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no!<sp/>add<sp/>this<sp/>observation<sp/>to<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref>]<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bump<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref>++;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yes!<sp/>the<sp/>array<sp/>is<sp/>full<sp/>so<sp/>we<sp/>have<sp/>to<sp/>make<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i-1]<sp/>=<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>fill<sp/>in<sp/>the<sp/>last<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>-1]<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>array<sp/>full<sp/>yet?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref><sp/>&lt;<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no!<sp/>we<sp/>are<sp/>still<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa9fb97aacb59f862a9443de755c5dac99" kindref="member">PRESSURE_TENDENCY_CODE_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*change<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>subtract<sp/>pressure<sp/>from<sp/>3-hrs<sp/>ago<sp/>from<sp/>latest<sp/>pressure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>-1]<sp/>-<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[0];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>evaluate<sp/>delta<sp/>aka<sp/>3-hr<sp/>change<sp/>in<sp/>pressure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>absolute<sp/>variance<sp/>is<sp/>less<sp/>than<sp/>1<sp/>hPa,<sp/>air<sp/>pressure<sp/>is<sp/>steady<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>delta<sp/>is<sp/>negative,<sp/>and<sp/>absolute<sp/>variance<sp/>is<sp/>greater<sp/>than<sp/>1<sp/>hPa,<sp/>air<sp/>pressure<sp/>is<sp/>falling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>delta<sp/>is<sp/>positive,<sp/>and<sp/>absolute<sp/>variance<sp/>is<sp/>greater<sp/>than<sp/>1<sp/>hPa,<sp/>air<sp/>pressure<sp/>is<sp/>rising<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(delta)<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>steady</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa78ecfbbe23c1c11a7a4fc5d2f10d336b" kindref="member">PRESSURE_TENDENCY_CODE_STEADY</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*change<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>fabs(delta)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>falling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa7109e9900db9d55b4f3e74797b4dc80c" kindref="member">PRESSURE_TENDENCY_CODE_FALLING</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*change<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fabs(delta)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rising<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aabfe2dfc6f354367d088a198d5787d9c1" kindref="member">PRESSURE_TENDENCY_CODE_RISING</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*change<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pressure__tendency_8h_1ae6bc2231355a8c0fe05cc2b1fabb062aa9fb97aacb59f862a9443de755c5dac99" kindref="member">PRESSURE_TENDENCY_CODE_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*change<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">esp_err_t<sp/><ref refid="pressure__tendency_8c_1aececf3a09cfaba87373aa43313176277" kindref="member">pressure_tendency_reset</ref>(<ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref><sp/>pressure_tendency_handle)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(pressure_tendency_handle);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>purge<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1ae98a41a4f5862e4f0c3afb40d75da0ae" kindref="member">samples_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>[i]<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>samples<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a0e025ab0342d54f7a6c806d879b23051" kindref="member">samples_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">esp_err_t<sp/><ref refid="pressure__tendency_8c_1af7370f9b7e6c674b4b2317f81c7271da" kindref="member">pressure_tendency_delete</ref>(<ref refid="pressure__tendency_8h_1a14deb96a2b909bed7d689c1114c8b26f" kindref="member">pressure_tendency_handle_t</ref><sp/>pressure_tendency_handle)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(pressure_tendency_handle);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>)<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pressure_tendency_handle-&gt;<ref refid="structpressure__tendency__t_1a7e88f0a7fee65306124ad95c12916751" kindref="member">samples</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pressure_tendency_handle);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="pressure__tendency_8c_1afb1937afb675db139a11ccc782236d76" kindref="member">pressure_tendency_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PRESSURE_TENDENCY_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">int32_t<sp/><ref refid="pressure__tendency_8c_1ad818989dd42eb2028a4c7b13b3080039" kindref="member">pressure_tendency_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PRESSURE_TENDENCY_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/utilities/esp_pressure_tendency/pressure_tendency.c"/>
  </compounddef>
</doxygen>
