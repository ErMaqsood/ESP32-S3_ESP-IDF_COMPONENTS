<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ccs811_8c" kind="file" language="C++">
    <compoundname>ccs811.c</compoundname>
    <includes refid="ccs811_8h" local="yes">include/ccs811.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/peripherals/i2c/esp_ccs811/ccs811.c</label>
        <link refid="ccs811_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/ccs811.h</label>
        <link refid="ccs811_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ccs811_version.h</label>
        <link refid="ccs811__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/gpio.h</label>
      </node>
      <node id="7">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="16">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="15">
        <label>esp_log.h</label>
      </node>
      <node id="9">
        <label>esp_mac.h</label>
      </node>
      <node id="17">
        <label>esp_timer.h</label>
      </node>
      <node id="18">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="19">
        <label>freertos/task.h</label>
      </node>
      <node id="14">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="ccs811_8c_1aae262a346059d19e4740db59aeacf4fc" prot="public" static="no">
        <name>CCS811_HW_ID</name>
        <initializer>UINT8_C(0x81)</initializer>
        <briefdescription>
<para>ccs811 I2C hardware identification (0x81) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="49" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1acb0da4715312b34f0f2b654cd9b47d65" prot="public" static="no">
        <name>CCS811_REG_STATUS_R</name>
        <initializer>UINT8_C(0x00)</initializer>
        <briefdescription>
<para>ccs811 I2C status register (1-byte) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="51" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a9c87cdf7717a1d373317395c3c629b08" prot="public" static="no">
        <name>CCS811_REG_MEAS_MODE_RW</name>
        <initializer>UINT8_C(0x01)</initializer>
        <briefdescription>
<para>ccs811 I2C measurement mode and conditions register (1-byte) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="52" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a0aecf6d661d26c2031972a95781ff4e7" prot="public" static="no">
        <name>CCS811_REG_ALG_RESULT_DATA_R</name>
        <initializer>UINT8_C(0x02)</initializer>
        <briefdescription>
<para>ccs811 I2C algorithm results (up to 8-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="53" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a94050dc404f48c49c1b05425153ef171" prot="public" static="no">
        <name>CCS811_REG_RAW_DATA_R</name>
        <initializer>UINT8_C(0x03)</initializer>
        <briefdescription>
<para>ccs811 I2C raw ADC data values (2-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="54" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a53e3a2d8f1fc5a57b0549bf62d74f35a" prot="public" static="no">
        <name>CCS811_REG_ENV_DATA_W</name>
        <initializer>UINT8_C(0x05)</initializer>
        <briefdescription>
<para>ccs811 I2C temperature and humidity compensation (4-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a478af02d0d3e25adedae5f6764997750" prot="public" static="no">
        <name>CCS811_REG_NTC_R</name>
        <initializer>UINT8_C(0x06)</initializer>
        <briefdescription>
<para>ccs811 I2C temperature and humidity compensation (4-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="56" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a67894a8e9c3451119f0fb6f766733b6a" prot="public" static="no">
        <name>CCS811_REG_THRESHOLDS_W</name>
        <initializer>UINT8_C(0x10)</initializer>
        <briefdescription>
<para>ccs811 I2C interrupt threshold when in operation (4-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="57" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1ab8346908375c6e29caff70b019700d0d" prot="public" static="no">
        <name>CCS811_REG_BASELINE_RW</name>
        <initializer>UINT8_C(0x11)</initializer>
        <briefdescription>
<para>ccs811 I2C encoded current baseline (2-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="58" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a7e63a5c16d84908ff04afe6d751ba032" prot="public" static="no">
        <name>CCS811_REG_HW_ID_R</name>
        <initializer>UINT8_C(0x20)</initializer>
        <briefdescription>
<para>ccs811 I2C hardware identification register (1-byte), value is 0x81 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="59" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a703160d1416b163f9bb43a3026168bf3" prot="public" static="no">
        <name>CCS811_REG_HW_VERSION_R</name>
        <initializer>UINT8_C(0x21)</initializer>
        <briefdescription>
<para>ccs811 I2C hardware version register (1-byte), value is 0x1x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="60" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1aa9967947ed62d7326e0faa8dd76a922f" prot="public" static="no">
        <name>CCS811_REG_FW_BOOT_VERSION_R</name>
        <initializer>UINT8_C(0x23)</initializer>
        <briefdescription>
<para>ccs811 I2C firmware boot version register (2-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="61" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1acf1fbbac521f1686ace029799e92975e" prot="public" static="no">
        <name>CCS811_REG_FW_APP_VERSION_R</name>
        <initializer>UINT8_C(0x24)</initializer>
        <briefdescription>
<para>ccs811 I2C firmware application version register (2-bytes) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="62" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1ae66e380f08af94ce79a84df73d7b700a" prot="public" static="no">
        <name>CCS811_REG_INTERNAL_STATE_R</name>
        <initializer>UINT8_C(0xa0)</initializer>
        <briefdescription>
<para>ccs811 I2C internal status register (1-byte) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="63" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a61a5032a9eab4fc1f1a9e08f40a977a7" prot="public" static="no">
        <name>CCS811_REG_ERROR_ID_R</name>
        <initializer>UINT8_C(0xe0)</initializer>
        <briefdescription>
<para>ccs811 I2C error source register from internal status register (1-byte) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="64" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a1828facc9981058b7d3fbb676940df71" prot="public" static="no">
        <name>CCS811_REG_APP_START_W</name>
        <initializer>UINT8_C(0xf4)</initializer>
        <briefdescription>
<para>ccs811 I2C application start (1-byte) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="65" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1aa8717db2ab11a5400dbfbfb97d297391" prot="public" static="no">
        <name>CCS811_REG_SW_RESET_W</name>
        <initializer>UINT8_C(0xff)</initializer>
        <briefdescription>
<para>ccs811 I2C software reset when correct 4-bytes written (0x11 0xe5 0x72 0x8a) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="66" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1aa2440f3687ae80202c43de13d7599bb4" prot="public" static="no">
        <name>CCS811_ECO2_RANGE_MIN</name>
        <initializer>(400)</initializer>
        <briefdescription>
<para>ccs811 eCO2 minimum in ppm </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a494270ef5655ffd9208285ac14edfa00" prot="public" static="no">
        <name>CCS811_ECO2_RANGE_MAX</name>
        <initializer>(32768)</initializer>
        <briefdescription>
<para>ccs811 eCO2 maximum in ppm </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="69" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a418662946d8dcf277978a64d075e8330" prot="public" static="no">
        <name>CCS811_ETVOC_RANGE_MIN</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>ccs811 eTVOC minimum in ppb </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a104204ed762c1fc792cf9d790836ca1a" prot="public" static="no">
        <name>CCS811_ETVOC_RANGE_MAX</name>
        <initializer>(29206)</initializer>
        <briefdescription>
<para>ccs811 eTVOC maximum in ppb </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="71" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1aeb1f3d1cd7b8a9ec1077963830725e22" prot="public" static="no">
        <name>CCS811_TEMPERATURE_RANGE_MIN</name>
        <initializer>(-25)</initializer>
        <briefdescription>
<para>ccs811 temperature minimum in degrees Celsius </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="72" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1afa30d19f27292c60bb3e187ff2c55795" prot="public" static="no">
        <name>CCS811_TEMPERATURE_RANGE_MAX</name>
        <initializer>(50)</initializer>
        <briefdescription>
<para>ccs811 temperature maximum in degrees Celsius </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="73" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a5c377e08bc1c17570b9875b2a825b13f" prot="public" static="no">
        <name>CCS811_HUMIDITY_RANGE_MIN</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>ccs811 relative humidity minimum in percent </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="74" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a7a362fe8e0c30f3ac9785433185d5b1a" prot="public" static="no">
        <name>CCS811_HUMIDITY_RANGE_MAX</name>
        <initializer>(100)</initializer>
        <briefdescription>
<para>ccs811 relative humidity maximum in percent </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a8c56e538f483de634a6852a1fd9b8dd3" prot="public" static="no">
        <name>CCS811_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
<para>ccs811 I2C start-up delay before device accepts transactions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="77" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a9fcebb8e951048e0b1759419b24a034c" prot="public" static="no">
        <name>CCS811_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="78" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1aee16d79acb336163405e51bf8b74a76d" prot="public" static="no">
        <name>CCS811_RESET_DELAY_MS</name>
        <initializer>UINT16_C(250)</initializer>
        <briefdescription>
<para>ccs811 I2C software reset delay before device accepts transactions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="79" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a1e1996b2576e80d86962aefb4b22877b" prot="public" static="no">
        <name>CCS811_WAKE_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
<para>ccs811 I2C wake-up delay from sleep before device accepts transactions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="80" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1ae180690414e28b1ec0c677bf87906d05" prot="public" static="no">
        <name>CCS811_DATA_READY_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="81" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1af552ae06cdc703984054b3adffb1f0e5" prot="public" static="no">
        <name>CCS811_DATA_POLL_TIMEOUT_MS</name>
        <initializer>UINT16_C(100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="82" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1adca2d00d36eb15fa494bb7992aa768b0" prot="public" static="no">
        <name>CCS811_ERASE_DELAY_MS</name>
        <initializer>UINT16_C(500)</initializer>
        <briefdescription>
<para>ccs811 I2C erase delay before device accepts transactions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="83" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a661284ada1c7829adee0b9417b76df89" prot="public" static="no">
        <name>CCS811_VERIFY_DELAY_MS</name>
        <initializer>UINT16_C(70)</initializer>
        <briefdescription>
<para>ccs811 I2C verification delay before device accepts transactions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="84" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a80477721250dd0b853e6d8b8d78ecca7" prot="public" static="no">
        <name>CCS811_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="85" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a0ea4516848f0f59cb769ce6857d53f38" prot="public" static="no">
        <name>CCS811_SW_RESET_DATA</name>
        <initializer>{ 0x11, 0xe5, 0x72, 0x8a }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="90" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1a9a46e592ef23247d7e79fe9689545d0c" prot="public" static="no">
        <name>CCS811_ERASE_DATA</name>
        <initializer>{ 0xe7, 0xa7, 0xe6, 0x09 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="91" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1aee7b193fcb571e0c3bc88c29f1662af4" prot="public" static="no">
        <name>ESP_TIMEOUT_CHECK</name>
        <param><defname>start</defname></param>
        <param><defname>len</defname></param>
        <initializer>((uint64_t)(esp_timer_get_time() - (start)) &gt;= (len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="93" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ccs811_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="94" column="9" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="ccs811_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;ccs811&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="100" column="19" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ccs811_8c_1a55350b1f84a7f1b279cad30903768f2e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ccs811_unknown_msg</definition>
        <argsstring></argsstring>
        <name>ccs811_unknown_msg</name>
        <initializer>= &quot;Unknown error.&quot;</initializer>
        <briefdescription>
<para>CCS811 I2C unknown error message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="105" column="19" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ccs811_8c_1a7b50b449ae41fc987748ff2c5aaf58d9" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ccs811_unknown_code</definition>
        <argsstring></argsstring>
        <name>ccs811_unknown_code</name>
        <initializer>= &quot;UNKNOWN.&quot;</initializer>
        <briefdescription>
<para>CCS811 I2C unknown error code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="110" column="19" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ccs811_8c_1ad8535af9763b05f3e75e6ff03a9d2994" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structccs811__error__row__s" kindref="compound">ccs811_error_row_s</ref></type>
        <definition>const struct ccs811_error_row_s ccs811_error_definition_table[CCS811_ERROR_TABLE_SIZE]</definition>
        <argsstring>[CCS811_ERROR_TABLE_SIZE]</argsstring>
        <name>ccs811_error_definition_table</name>
        <initializer>= {
  {&quot;WRITE_REG_INVALID&quot;,  &quot;The CCS811 received an I²C write request addressed to this station but with invalid register address ID&quot;},
  {&quot;READ_REG_INVALID&quot;,   &quot;The CCS811 received an I²C read request to a mailbox ID that is invalid&quot;},
  {&quot;DRIVERMODE_INVALID&quot;, &quot;The CCS811 received an I²C request to write an unsupported mode to driver mode&quot;},
  {&quot;MAX_RESISTANCE&quot;,     &quot;The sensor resistance measurement has reached or exceeded the maximum range&quot;},
  {&quot;HEATER_FAULT&quot;,       &quot;The Heater current in the CCS811 is not in range&quot;},
  {&quot;HEATER_SUPPLY&quot;,      &quot;The Heater voltage is not being applied correctly&quot;}
}</initializer>
        <briefdescription>
<para>CCS811 I2C error definition table structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="116" column="38" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="variable" id="ccs811_8c_1ad7d7fa4032ce5ce74ca32ce4678b8cea" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ccs811_unknown_measure_mode</definition>
        <argsstring></argsstring>
        <name>ccs811_unknown_measure_mode</name>
        <initializer>= &quot;UNKNOWN.&quot;</initializer>
        <briefdescription>
<para>CCS811 I2C unknown measure mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="128" column="19" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ccs811_8c_1af9ce73511c15919edef3aa60178976b1" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structccs811__measure__mode__row__s" kindref="compound">ccs811_measure_mode_row_s</ref></type>
        <definition>const struct ccs811_measure_mode_row_s ccs811_measure_mode_definition_table[CCS811_MEASURE_MODE_TABLE_SIZE]</definition>
        <argsstring>[CCS811_MEASURE_MODE_TABLE_SIZE]</argsstring>
        <name>ccs811_measure_mode_definition_table</name>
        <initializer>= {
    {<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a927a472dd6d96402a8527b31d3b284d8" kindref="member">CCS811_DRIVE_MODE_IDLE</ref>,                    &quot;Idle - measurements are disabled&quot;},
    {<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a1576068aa364e7161710aa725246b0ca" kindref="member">CCS811_DRIVE_MODE_CONSTANT_POWER_IAQ</ref>,      &quot;Constant Power IAQ - iaq measurement every second&quot;},
    {<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a5da13e811ece358296d6c30bed60a035" kindref="member">CCS811_DRIVE_MODE_PULSE_HEATING_IAQ</ref>,       &quot;Pulse Heating IAQ - iaq measurement every 10-seconds&quot;},
    {<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a7995182e6e67ebf4bb4aca62232e0cde" kindref="member">CCS811_DRIVE_MODE_LP_PULSE_HEATING_IAQ</ref>,    &quot;Low-Power Pulse Heating IAQ - iaq measurement every 60-seconds&quot;},
    {<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a7bf4c5a5370085433832ccf4cf4572a1" kindref="member">CCS811_DRIVE_MODE_CONSTANT_POWER</ref>,          &quot;Constant Power - measurement every 250ms&quot;}
}</initializer>
        <briefdescription>
<para>CCS811 I2C measure mode definition table structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="133" column="45" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="133" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ccs811_8c_1a0598b9ec476c055e621df2adbe018a0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_read_from</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t reg_addr, uint8_t *buffer, const uint8_t size)</argsstring>
        <name>ccs811_i2c_read_from</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C read from register address transaction. This is a write and then read process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 read transaction return buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="156" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="156" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1a48f52d86ddd8b605f13d4a0b6a279e2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_read_word_from</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t reg_addr, uint16_t *const word)</argsstring>
        <name>ccs811_i2c_read_word_from</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *const</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C read halfword from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 read transaction return halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="175" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="175" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1adc4b026ad5ac89a73e100dfb0aac7d7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_read_byte_from</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t reg_addr, uint8_t *const byte)</argsstring>
        <name>ccs811_i2c_read_byte_from</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C read byte from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 read transaction return byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="198" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="198" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1ab14bb40d9fb4719bdfa8955f1f57338f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_write_command</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t reg_addr)</argsstring>
        <name>ccs811_i2c_write_command</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C write command to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 command register address to write to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="220" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="220" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1adcec174a029271fd5dbab42a4ded566b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_write</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t *buffer, const uint8_t size)</argsstring>
        <name>ccs811_i2c_write</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C write transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to write for write transaction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to write for write transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="240" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="240" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1a48d240848e7a66dac5a96deb0aca9c01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_write_word_to</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t reg_addr, const uint16_t word)</argsstring>
        <name>ccs811_i2c_write_word_to</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C write halfword to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 write transaction input halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="258" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1a2634d68abe809166a5c50b88f40af2e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_i2c_write_byte_to</definition>
        <argsstring>(ccs811_handle_t handle, const uint8_t reg_addr, const uint8_t byte)</argsstring>
        <name>ccs811_i2c_write_byte_to</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>CCS811 I2C write byte to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 write transaction input byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="278" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="278" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1a88ae56d5b8a21ac54c3c71d9f6f50986" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>static uint64_t ccs811_get_duration_us</definition>
        <argsstring>(ccs811_handle_t handle)</argsstring>
        <name>ccs811_get_duration_us</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Gets CCS811 microsecond duration from device handle. See datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ccs811_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>CCS811 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>duration in microseconds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="297" column="24" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="297" bodyend="320"/>
      </memberdef>
      <member refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kind="function"><name>ccs811_get_status_register</name></member>
      <member refid="group__drivers_1gad2a11eca0777e7719a0a1e9e566576de" kind="function"><name>ccs811_get_measure_mode_register</name></member>
      <member refid="group__drivers_1gad3b44884f844b3777372970af4145217" kind="function"><name>ccs811_set_measure_mode_register</name></member>
      <member refid="group__drivers_1ga61b35f4a71f4b97d0012f77d411375c6" kind="function"><name>ccs811_get_error_register</name></member>
      <member refid="group__drivers_1ga3376d27746958386be2ab4a5bbfc398d" kind="function"><name>ccs811_set_environmental_data_register</name></member>
      <member refid="group__drivers_1ga25478eadc453cd81afe79e8be0bc0389" kind="function"><name>ccs811_set_thresholds_register</name></member>
      <member refid="group__drivers_1gaffafc27a7d92e5fa6c5c523e7b3473ba" kind="function"><name>ccs811_get_baseline_register</name></member>
      <member refid="group__drivers_1ga4f9290f72d94b19f5f9cca0e2ed43c63" kind="function"><name>ccs811_set_baseline_register</name></member>
      <member refid="group__drivers_1gaeeedd12bb1ac608249d2ced247383657" kind="function"><name>ccs811_get_hardware_identifier_register</name></member>
      <member refid="group__drivers_1ga5a5c0f26a73196ef7f8b3a86a7151133" kind="function"><name>ccs811_get_hardware_version_register</name></member>
      <member refid="group__drivers_1gaacddf12a1b0fa04e95f4f425fce71483" kind="function"><name>ccs811_start_application</name></member>
      <memberdef kind="function" id="ccs811_8c_1a22b2888ca697d300359c000a9b1e9bb5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_init_io</definition>
        <argsstring>(ccs811_handle_t handle)</argsstring>
        <name>ccs811_init_io</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Initializes CCS811 wake and reset GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="492" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="492" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="ccs811_8c_1aa503951f7e066b4f1efe5c79b7d5e0cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ccs811_setup</definition>
        <argsstring>(ccs811_handle_t handle)</argsstring>
        <name>ccs811_setup</name>
        <param>
          <type><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ccs811/ccs811.c" line="570" column="25" bodyfile="components/peripherals/i2c/esp_ccs811/ccs811.c" bodystart="570" bodyend="615"/>
      </memberdef>
      <member refid="group__drivers_1gafb2476c99e169fab5776d8795fb2bfe7" kind="function"><name>ccs811_init</name></member>
      <member refid="group__drivers_1gaa02485dd45552bcdab58c102c0df56e7" kind="function"><name>ccs811_get_measurement</name></member>
      <member refid="group__drivers_1ga72d5edd9419a160994e6efd2fb4c5dd8" kind="function"><name>ccs811_set_environmental_data</name></member>
      <member refid="group__drivers_1gae958fb94ab668f974903ba290fbdace4" kind="function"><name>ccs811_set_thresholds</name></member>
      <member refid="group__drivers_1gae4a67a7a46ce69f0b857b79f9b8c2376" kind="function"><name>ccs811_get_drive_mode</name></member>
      <member refid="group__drivers_1gacdddac5cd9dae68712edb710148f1b11" kind="function"><name>ccs811_set_drive_mode</name></member>
      <member refid="group__drivers_1ga024130f529315f52acbe65121df34581" kind="function"><name>ccs811_get_firmware_mode</name></member>
      <member refid="group__drivers_1ga320ffdba546b10f2327379aa76a0deed" kind="function"><name>ccs811_get_ntc_resistance</name></member>
      <member refid="group__drivers_1gaea36b6c9e450ae85fcf0e89c51f2a4ad" kind="function"><name>ccs811_get_data_status</name></member>
      <member refid="group__drivers_1gaf0b5cc8ab33a370424bbe905ed7a1c76" kind="function"><name>ccs811_get_error_status</name></member>
      <member refid="group__drivers_1gaa5141a128d613111e1a3f5b5b189f49b" kind="function"><name>ccs811_reset</name></member>
      <member refid="group__drivers_1ga53ca5f2dc25d5785c6d05ddb711a2f26" kind="function"><name>ccs811_io_wake</name></member>
      <member refid="group__drivers_1ga585652bc7c427d8c3f1745aa1d6fdf06" kind="function"><name>ccs811_io_sleep</name></member>
      <member refid="group__drivers_1ga8f5338c785855e5a7fff79194aa4cb9f" kind="function"><name>ccs811_io_reset</name></member>
      <member refid="group__drivers_1ga94d2bde4433eccabe0971f3646a8c581" kind="function"><name>ccs811_remove</name></member>
      <member refid="group__drivers_1ga411b556cedc994f96c23259453c55d27" kind="function"><name>ccs811_delete</name></member>
      <member refid="group__drivers_1gae1a3cb157ee35d3a706afea61c4c85e0" kind="function"><name>ccs811_err_to_message</name></member>
      <member refid="group__drivers_1gad3c6b76aefc8ee97bf3d646d57e99a75" kind="function"><name>ccs811_err_to_code</name></member>
      <member refid="group__drivers_1ga6549ec2730d45f8316474755e09f6a04" kind="function"><name>ccs811_measure_mode_description</name></member>
      <member refid="group__drivers_1gae2118089810b70ab33694f634ec10262" kind="function"><name>ccs811_get_fw_version</name></member>
      <member refid="group__drivers_1ga241483f7879eb78e0c440d0a95def97d" kind="function"><name>ccs811_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for CCS811 Air Quality sensor</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ccs811_8h" kindref="compound">include/ccs811.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>CCS811<sp/>definitions</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_HW_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x81)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_STATUS_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x00)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_MEAS_MODE_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x01)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_ALG_RESULT_DATA_R<sp/><sp/><sp/><sp/>UINT8_C(0x02)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_RAW_DATA_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x03)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_ENV_DATA_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x05)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_NTC_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x06)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_THRESHOLDS_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x10)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_BASELINE_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x11)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_HW_ID_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x20)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_HW_VERSION_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x21)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_FW_BOOT_VERSION_R<sp/><sp/><sp/><sp/>UINT8_C(0x23)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_FW_APP_VERSION_R<sp/><sp/><sp/><sp/><sp/>UINT8_C(0x24)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_INTERNAL_STATE_R<sp/><sp/><sp/><sp/><sp/>UINT8_C(0xa0)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_ERROR_ID_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xe0)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_APP_START_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xf4)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_REG_SW_RESET_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xff)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_ECO2_RANGE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(400)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_ECO2_RANGE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32768)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_ETVOC_RANGE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_ETVOC_RANGE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(29206)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_TEMPERATURE_RANGE_MIN<sp/><sp/><sp/><sp/>(-25)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_TEMPERATURE_RANGE_MAX<sp/><sp/><sp/><sp/>(50)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_HUMIDITY_RANGE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_HUMIDITY_RANGE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(100)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(25)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(25)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(250)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_WAKE_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_DATA_READY_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_DATA_POLL_TIMEOUT_MS<sp/><sp/><sp/><sp/><sp/>UINT16_C(100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_ERASE_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(500)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_VERIFY_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(70)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_SW_RESET_DATA<sp/><sp/><sp/><sp/>{<sp/>0x11,<sp/>0xe5,<sp/>0x72,<sp/>0x8a<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CCS811_ERASE_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0xe7,<sp/>0xa7,<sp/>0xe6,<sp/>0x09<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_TIMEOUT_CHECK(start,<sp/>len)<sp/>((uint64_t)(esp_timer_get_time()<sp/>-<sp/>(start))<sp/>&gt;=<sp/>(len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ccs811&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ccs811_unknown_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ccs811_unknown_code<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structccs811__error__row__s" kindref="compound">ccs811_error_row_s</ref><sp/>ccs811_error_definition_table[<ref refid="group__drivers_1ga2ce64e208d4916728d421a9f782a1f4b" kindref="member">CCS811_ERROR_TABLE_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;WRITE_REG_INVALID&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>CCS811<sp/>received<sp/>an<sp/>I²C<sp/>write<sp/>request<sp/>addressed<sp/>to<sp/>this<sp/>station<sp/>but<sp/>with<sp/>invalid<sp/>register<sp/>address<sp/>ID&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;READ_REG_INVALID&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>CCS811<sp/>received<sp/>an<sp/>I²C<sp/>read<sp/>request<sp/>to<sp/>a<sp/>mailbox<sp/>ID<sp/>that<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;DRIVERMODE_INVALID&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>CCS811<sp/>received<sp/>an<sp/>I²C<sp/>request<sp/>to<sp/>write<sp/>an<sp/>unsupported<sp/>mode<sp/>to<sp/>driver<sp/>mode&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MAX_RESISTANCE&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>sensor<sp/>resistance<sp/>measurement<sp/>has<sp/>reached<sp/>or<sp/>exceeded<sp/>the<sp/>maximum<sp/>range&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HEATER_FAULT&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Heater<sp/>current<sp/>in<sp/>the<sp/>CCS811<sp/>is<sp/>not<sp/>in<sp/>range&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;HEATER_SUPPLY&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Heater<sp/>voltage<sp/>is<sp/>not<sp/>being<sp/>applied<sp/>correctly&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ccs811_unknown_measure_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structccs811__measure__mode__row__s" kindref="compound">ccs811_measure_mode_row_s</ref><sp/>ccs811_measure_mode_definition_table[<ref refid="group__drivers_1ga29a57c6f12a44f68158f0f9576726a59" kindref="member">CCS811_MEASURE_MODE_TABLE_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a927a472dd6d96402a8527b31d3b284d8" kindref="member">CCS811_DRIVE_MODE_IDLE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Idle<sp/>-<sp/>measurements<sp/>are<sp/>disabled&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a1576068aa364e7161710aa725246b0ca" kindref="member">CCS811_DRIVE_MODE_CONSTANT_POWER_IAQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Constant<sp/>Power<sp/>IAQ<sp/>-<sp/>iaq<sp/>measurement<sp/>every<sp/>second&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a5da13e811ece358296d6c30bed60a035" kindref="member">CCS811_DRIVE_MODE_PULSE_HEATING_IAQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pulse<sp/>Heating<sp/>IAQ<sp/>-<sp/>iaq<sp/>measurement<sp/>every<sp/>10-seconds&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a7995182e6e67ebf4bb4aca62232e0cde" kindref="member">CCS811_DRIVE_MODE_LP_PULSE_HEATING_IAQ</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Low-Power<sp/>Pulse<sp/>Heating<sp/>IAQ<sp/>-<sp/>iaq<sp/>measurement<sp/>every<sp/>60-seconds&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{<ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a7bf4c5a5370085433832ccf4cf4572a1" kindref="member">CCS811_DRIVE_MODE_CONSTANT_POWER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Constant<sp/>Power<sp/>-<sp/>measurement<sp/>every<sp/>250ms&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="144"><highlight class="comment">*<sp/>functions<sp/>and<sp/>subroutines</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_read_from(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_read_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_read_word_from(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_read_word_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>*word<sp/>=<sp/>(uint16_t)rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_read_byte_from(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>bit8_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_read_byte_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>rx[0];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_write_command(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_write_command,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_write(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_write,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_write_word_to(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit24_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/>(uint8_t)(word<sp/>&amp;<sp/>0xff),<sp/>(uint8_t)((word<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)<sp/>};<sp/></highlight><highlight class="comment">//<sp/>register,<sp/>lsb,<sp/>msb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT24_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_write_word_to,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_i2c_write_byte_to(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit16_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ccs811_i2c_write_byte_to,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/>ccs811_get_duration_us(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_measure_mode_register_t<sp/>mmode;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad2a11eca0777e7719a0a1e9e566576de" kindref="member">ccs811_get_measure_mode_register</ref>(handle,<sp/>&amp;mmode),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mmode.bits.drive_mode)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a927a472dd6d96402a8527b31d3b284d8" kindref="member">CCS811_DRIVE_MODE_IDLE</ref>:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stand-by<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a1576068aa364e7161710aa725246b0ca" kindref="member">CCS811_DRIVE_MODE_CONSTANT_POWER_IAQ</ref>:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1500000;<sp/></highlight><highlight class="comment">//<sp/>1-second<sp/>(1000-ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a5da13e811ece358296d6c30bed60a035" kindref="member">CCS811_DRIVE_MODE_PULSE_HEATING_IAQ</ref>:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>15000000;<sp/></highlight><highlight class="comment">//<sp/>10-seconds<sp/>(10000-ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a7995182e6e67ebf4bb4aca62232e0cde" kindref="member">CCS811_DRIVE_MODE_LP_PULSE_HEATING_IAQ</ref>:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>65000000;<sp/></highlight><highlight class="comment">//<sp/>60-seconds<sp/>(60000-ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggad77e9dec744afbae856a9e21ee269514a7bf4c5a5370085433832ccf4cf4572a1" kindref="member">CCS811_DRIVE_MODE_CONSTANT_POWER</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>300000;<sp/></highlight><highlight class="comment">//<sp/>250-ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1500000;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kindref="member">ccs811_get_status_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>ccs811_status_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_byte_from(handle,<sp/><ref refid="ccs811_8c_1acb0da4715312b34f0f2b654cd9b47d65" kindref="member">CCS811_REG_STATUS_R</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad2a11eca0777e7719a0a1e9e566576de" kindref="member">ccs811_get_measure_mode_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>ccs811_measure_mode_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_byte_from(handle,<sp/><ref refid="ccs811_8c_1a9c87cdf7717a1d373317395c3c629b08" kindref="member">CCS811_REG_MEAS_MODE_RW</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad3b44884f844b3777372970af4145217" kindref="member">ccs811_set_measure_mode_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ccs811_measure_mode_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_measure_mode_register_t<sp/>measure_mode<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>measure_mode.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>measure_mode.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_write_byte_to(handle,<sp/><ref refid="ccs811_8c_1a9c87cdf7717a1d373317395c3c629b08" kindref="member">CCS811_REG_MEAS_MODE_RW</ref>,<sp/>measure_mode.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga61b35f4a71f4b97d0012f77d411375c6" kindref="member">ccs811_get_error_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>ccs811_error_code_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_byte_from(handle,<sp/><ref refid="ccs811_8c_1a61a5032a9eab4fc1f1a9e08f40a977a7" kindref="member">CCS811_REG_ERROR_ID_R</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>error<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga3376d27746958386be2ab4a5bbfc398d" kindref="member">ccs811_set_environmental_data_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>bit40_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/><ref refid="ccs811_8c_1a53e3a2d8f1fc5a57b0549bf62d74f35a" kindref="member">CCS811_REG_ENV_DATA_W</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>temperature<sp/>range<sp/>(-25<sp/>to<sp/>50<sp/>C)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(temperature<sp/>&lt;<sp/><ref refid="ccs811_8c_1aeb1f3d1cd7b8a9ec1077963830725e22" kindref="member">CCS811_TEMPERATURE_RANGE_MIN</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Temperature<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>-25<sp/>to<sp/>50<sp/>degrees<sp/>Celsius&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(temperature<sp/>&gt;<sp/><ref refid="ccs811_8c_1afa30d19f27292c60bb3e187ff2c55795" kindref="member">CCS811_TEMPERATURE_RANGE_MAX</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Temperature<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>-25<sp/>to<sp/>50<sp/>degrees<sp/>Celsius&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>humidity<sp/>range<sp/>(0<sp/>to<sp/>100<sp/>%)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(humidity<sp/>&lt;<sp/><ref refid="ccs811_8c_1a5c377e08bc1c17570b9875b2a825b13f" kindref="member">CCS811_HUMIDITY_RANGE_MIN</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Relative<sp/>humidity<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>0<sp/>to<sp/>100<sp/>percent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(humidity<sp/>&gt;<sp/><ref refid="ccs811_8c_1a7a362fe8e0c30f3ac9785433185d5b1a" kindref="member">CCS811_HUMIDITY_RANGE_MAX</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Relative<sp/>humidity<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>0<sp/>to<sp/>100<sp/>percent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>application<sp/>note<sp/>appears<sp/>to<sp/>be<sp/>incorrect<sp/>with<sp/>value<sp/>to<sp/>register<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temperature<sp/>with<sp/>offset<sp/>and<sp/>humidity<sp/>multipliers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>h_uint<sp/>=<sp/>humidity<sp/>*<sp/>1000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>42.348<sp/>becomes<sp/>42348</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t_uint<sp/>=<sp/>(temperature<sp/>*<sp/>1000)<sp/>+<sp/>25000;<sp/></highlight><highlight class="comment">//<sp/>23.2<sp/>becomes<sp/>23200<sp/>with<sp/>25<sp/>C<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>frame<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>rounding,<sp/>see<sp/>issue<sp/>8:<sp/>https://github.com/sparkfun/Qwiic_BME280_CCS811_Combo/issues/8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[1]<sp/>=<sp/>(h_uint<sp/>+<sp/>250)<sp/>/<sp/>500;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[2]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>CCS811<sp/>only<sp/>supports<sp/>increments<sp/>of<sp/>0.5<sp/>so<sp/>bits<sp/>7-0<sp/>will<sp/>always<sp/>be<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[3]<sp/>=<sp/>(t_uint<sp/>+<sp/>250)<sp/>/<sp/>500;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_write(handle,<sp/>tx,<sp/>BIT40_UINT8_BUFFER_SIZE),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>environmental<sp/>data<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>handle<sp/>environmental<sp/>data<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a6a87b2b0cff24d38b367ccd34843a206" kindref="member">humidity</ref><sp/>=<sp/>humidity;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afc1d28cfbce795d6ea954ebe725241f5" kindref="member">temperature</ref><sp/>=<sp/>temperature;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga25478eadc453cd81afe79e8be0bc0389" kindref="member">ccs811_set_thresholds_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>low_to_med,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>med_to_high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>hysteresis)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>bit48_uint8_buffer_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/><ref refid="ccs811_8c_1a67894a8e9c3451119f0fb6f766733b6a" kindref="member">CCS811_REG_THRESHOLDS_W</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_threshold_value_t<sp/><sp/><sp/><sp/>low_to_med_value<sp/><sp/><sp/>=<sp/>{<sp/>.value<sp/>=<sp/>low_to_med<sp/>};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_threshold_value_t<sp/><sp/><sp/><sp/>med_to_high_value<sp/><sp/>=<sp/>{<sp/>.value<sp/>=<sp/>med_to_high<sp/>};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>eCO2<sp/>threshold<sp/>ranges<sp/>(400<sp/>to<sp/>32768)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(low_to_med<sp/>&gt;=<sp/>med_to_high),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>to<sp/>medium<sp/>threshold<sp/>must<sp/>be<sp/>less<sp/>than<sp/>medium<sp/>to<sp/>high<sp/>threshold&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(med_to_high<sp/>&lt;=<sp/>low_to_med),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>to<sp/>high<sp/>threshold<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>low<sp/>to<sp/>medium<sp/>threshold&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(low_to_med<sp/>&lt;<sp/><ref refid="ccs811_8c_1aa2440f3687ae80202c43de13d7599bb4" kindref="member">CCS811_ECO2_RANGE_MIN</ref>),<sp/><sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>to<sp/>medium<sp/>threshold<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>400<sp/>to<sp/>32768<sp/>ppm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(low_to_med<sp/>&gt;<sp/><ref refid="ccs811_8c_1a494270ef5655ffd9208285ac14edfa00" kindref="member">CCS811_ECO2_RANGE_MAX</ref>),<sp/><sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>to<sp/>medium<sp/>threshold<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>400<sp/>to<sp/>32768<sp/>ppm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(med_to_high<sp/>&lt;<sp/><ref refid="ccs811_8c_1aa2440f3687ae80202c43de13d7599bb4" kindref="member">CCS811_ECO2_RANGE_MIN</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>to<sp/>high<sp/>threshold<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>400<sp/>to<sp/>32768<sp/>ppm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(!(med_to_high<sp/>&gt;<sp/><ref refid="ccs811_8c_1a494270ef5655ffd9208285ac14edfa00" kindref="member">CCS811_ECO2_RANGE_MAX</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>to<sp/>high<sp/>threshold<sp/>must<sp/>within<sp/>a<sp/>range<sp/>of<sp/>400<sp/>to<sp/>32768<sp/>ppm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>frame<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[1]<sp/>=<sp/>low_to_med_value.bits.hi_byte;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[2]<sp/>=<sp/>low_to_med_value.bits.lo_byte;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[3]<sp/>=<sp/>med_to_high_value.bits.hi_byte;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[4]<sp/>=<sp/>med_to_high_value.bits.lo_byte;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[5]<sp/>=<sp/>hysteresis;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_write(handle,<sp/>tx,<sp/>BIT48_UINT8_BUFFER_SIZE),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>thresholds<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaffafc27a7d92e5fa6c5c523e7b3473ba" kindref="member">ccs811_get_baseline_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_word_from(handle,<sp/><ref refid="ccs811_8c_1ab8346908375c6e29caff70b019700d0d" kindref="member">CCS811_REG_BASELINE_RW</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>baseline<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga4f9290f72d94b19f5f9cca0e2ed43c63" kindref="member">ccs811_set_baseline_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>baseline)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_write_word_to(handle,<sp/><ref refid="ccs811_8c_1ab8346908375c6e29caff70b019700d0d" kindref="member">CCS811_REG_BASELINE_RW</ref>,<sp/>baseline),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>baseline<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaeeedd12bb1ac608249d2ced247383657" kindref="member">ccs811_get_hardware_identifier_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_byte_from(handle,<sp/><ref refid="ccs811_8c_1a7e63a5c16d84908ff04afe6d751ba032" kindref="member">CCS811_REG_HW_ID_R</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>hardware<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5a5c0f26a73196ef7f8b3a86a7151133" kindref="member">ccs811_get_hardware_version_register</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_byte_from(handle,<sp/><ref refid="ccs811_8c_1a703160d1416b163f9bb43a3026168bf3" kindref="member">CCS811_REG_HW_VERSION_R</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>hardware<sp/>version<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaacddf12a1b0fa04e95f4f425fce71483" kindref="member">ccs811_start_application</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_write_command(handle,<sp/><ref refid="ccs811_8c_1a1828facc9981058b7d3fbb676940df71" kindref="member">CCS811_REG_APP_START_W</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>application<sp/>start<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_init_io(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config_t<sp/>io_conf<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/>gpio_pin_sel;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>and<sp/>init<sp/>gpio<sp/>for<sp/>reset<sp/>and/or<sp/>wake<sp/>pins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1acff0aeed76f5cb293de63fcc923ed1e7" kindref="member">reset_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afaafb2c6920016adb532a0670c4ec346" kindref="member">wake_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>reset<sp/>io<sp/>num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(GPIO_IS_VALID_GPIO(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;reset<sp/>gpio<sp/>number<sp/>is<sp/>invalid,<sp/>ccs811<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>wake<sp/>io<sp/>num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(GPIO_IS_VALID_GPIO(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;wake<sp/>gpio<sp/>number<sp/>is<sp/>invalid,<sp/>ccs811<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>gpio<sp/>pin<sp/>bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_pin_sel<sp/>=<sp/>((1ULL&lt;&lt;handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>)<sp/>|<sp/>(1ULL&lt;&lt;handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interrupt<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.intr_type<sp/>=<sp/>GPIO_INTR_DISABLE;<sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>mask<sp/>of<sp/>the<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>gpio_pin_sel;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>as<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>pull-down<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>pull-up<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>gpio<sp/>with<sp/>the<sp/>given<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_config(&amp;io_conf),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gpio<sp/>configuration<sp/>for<sp/>reset<sp/>and<sp/>wake<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1acff0aeed76f5cb293de63fcc923ed1e7" kindref="member">reset_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afaafb2c6920016adb532a0670c4ec346" kindref="member">wake_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>reset<sp/>io<sp/>num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(GPIO_IS_VALID_GPIO(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>),<sp/><sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;reset<sp/>gpio<sp/>number<sp/>is<sp/>invalid,<sp/>ccs811<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>gpio<sp/>pin<sp/>bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_pin_sel<sp/>=<sp/>(1ULL&lt;&lt;handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interrupt<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.intr_type<sp/>=<sp/>GPIO_INTR_DISABLE;<sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>mask<sp/>of<sp/>the<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>gpio_pin_sel;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>as<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>pull-down<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>pull-up<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>gpio<sp/>with<sp/>the<sp/>given<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_config(&amp;io_conf),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gpio<sp/>configuration<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1acff0aeed76f5cb293de63fcc923ed1e7" kindref="member">reset_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afaafb2c6920016adb532a0670c4ec346" kindref="member">wake_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>wake<sp/>io<sp/>num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(GPIO_IS_VALID_GPIO(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;wake<sp/>gpio<sp/>number<sp/>is<sp/>invalid,<sp/>ccs811<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>gpio<sp/>pin<sp/>bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_pin_sel<sp/>=<sp/>(1ULL&lt;&lt;handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interrupt<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.intr_type<sp/>=<sp/>GPIO_INTR_DISABLE;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>mask<sp/>of<sp/>the<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>gpio_pin_sel;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>as<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>pull-down<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>pull-up<sp/>mode<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>gpio<sp/>with<sp/>the<sp/>given<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_config(&amp;io_conf),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>gpio<sp/>configuration<sp/>for<sp/>wake<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>reset<sp/>gpio<sp/>to<sp/>set<sp/>io<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1acff0aeed76f5cb293de63fcc923ed1e7" kindref="member">reset_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>low<sp/>for<sp/>reset<sp/>gpio<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_set_level(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>,<sp/>1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>reset<sp/>gpio<sp/>level<sp/>high<sp/>failed<sp/>(gpio:<sp/>%i)&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref><sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>wake<sp/>gpio<sp/>to<sp/>wake<sp/>the<sp/>device<sp/>for<sp/>i2c<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afaafb2c6920016adb532a0670c4ec346" kindref="member">wake_io_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>low<sp/>for<sp/>wake<sp/>gpio<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_set_level(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>,<sp/>0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>wake<sp/>gpio<sp/>level<sp/>low<sp/>failed<sp/>(gpio:<sp/>%i)&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref><sp/>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ccs811_setup(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_status_register_t<sp/>status_reg;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kindref="member">ccs811_get_status_register</ref>(handle,<sp/>&amp;status_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>application<sp/>firmware<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status_reg.bits.firmware_mode<sp/>!=<sp/><ref refid="group__drivers_1ggaedfefa4560269ccc8dd9556b61d9c577a71982c6b85c48afd8df2bd862c55a85e" kindref="member">CCS811_FW_MODE_APP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>bootloader<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(status_reg.bits.app_valid,<sp/>ESP_ERR_INVALID_STATE,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>valid<sp/>application<sp/>for<sp/>i2c<sp/>ccs811<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>tp<sp/>switch<sp/>to<sp/>application<sp/>mode<sp/>-<sp/>start<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaacddf12a1b0fa04e95f4f425fce71483" kindref="member">ccs811_start_application</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;application<sp/>start<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ccs811_8c_1aee16d79acb336163405e51bf8b74a76d" kindref="member">CCS811_RESET_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kindref="member">ccs811_get_status_register</ref>(handle,<sp/>&amp;status_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>application<sp/>firmware<sp/>mode<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(status_reg.bits.firmware_mode<sp/>==<sp/><ref refid="group__drivers_1ggaedfefa4560269ccc8dd9556b61d9c577a71982c6b85c48afd8df2bd862c55a85e" kindref="member">CCS811_FW_MODE_APP</ref>,<sp/>ESP_ERR_INVALID_STATE,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>start<sp/>application<sp/>for<sp/>i2c<sp/>ccs811<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>hardware<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaeeedd12bb1ac608249d2ced247383657" kindref="member">ccs811_get_hardware_identifier_register</ref>(handle,<sp/>&amp;handle-&gt;<ref refid="structccs811__context__t_1a0a7a727f2fa2e4038e2ed79fd4ff4db5" kindref="member">hardware_id</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>hardware<sp/>identifier<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>hardware<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga5a5c0f26a73196ef7f8b3a86a7151133" kindref="member">ccs811_get_hardware_version_register</ref>(handle,<sp/>&amp;handle-&gt;<ref refid="structccs811__context__t_1a4b07fdad3a66e807aaaa14dacefc64f5" kindref="member">hardware_version</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>hardware<sp/>version<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_measure_mode_register_t<sp/>measure_mode_reg;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>measure<sp/>mode<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gad2a11eca0777e7719a0a1e9e566576de" kindref="member">ccs811_get_measure_mode_register</ref>(handle,<sp/>&amp;measure_mode_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>measure_mode_reg.bits.drive_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a44b3e976883bbf406c2f7cdae10a27f6" kindref="member">drive_mode</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>measure_mode_reg.bits.irq_data_ready_enabled<sp/>=<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a126d25280e38f53d8c6f12f20f51cf3e" kindref="member">irq_data_ready_enabled</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>measure_mode_reg.bits.irq_threshold_enabled<sp/><sp/>=<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a6fa4ac8d3eadbed86ef8bf39e17cf07f" kindref="member">irq_threshold_enabled</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>measure<sp/>mode<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gad3b44884f844b3777372970af4145217" kindref="member">ccs811_set_measure_mode_register</ref>(handle,<sp/>measure_mode_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafb2476c99e169fab5776d8795fb2bfe7" kindref="member">ccs811_init</ref>(i2c_master_bus_handle_t<sp/>master_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structccs811__config__t" kindref="compound">ccs811_config_t</ref><sp/>*ccs811_config,<sp/><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>*ccs811_handle)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>master_handle<sp/>&amp;&amp;<sp/>ccs811_config<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ccs811_8c_1a8c56e538f483de634a6852a1fd9b8dd3" kindref="member">CCS811_POWERUP_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>exists<sp/>on<sp/>the<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>i2c_master_probe(master_handle,<sp/>ccs811_config-&gt;<ref refid="structccs811__config__t_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ret,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>does<sp/>not<sp/>exist<sp/>at<sp/>address<sp/>0x%02x,<sp/>ccs811<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>ccs811_config-&gt;<ref refid="structccs811__config__t_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c<sp/>ccs811<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref><sp/>=<sp/>*ccs811_config;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>i2c<sp/>device<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i2c_device_config_t<sp/>i2c_dev_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dev_addr_length<sp/><sp/><sp/><sp/>=<sp/>I2C_ADDR_BIT_LEN_7,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device_address<sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scl_speed_hz<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a770b3ab4bba557baec88287d86832a34" kindref="member">i2c_clock_speed</ref>,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(i2c_master_bus_add_device(master_handle,<sp/>&amp;i2c_dev_conf,<sp/>&amp;out_handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>new<sp/>bus<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>init<sp/>gpio<sp/>wake<sp/>and<sp/>reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ccs811_init_io(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;init<sp/>wake<sp/>and<sp/>reset<sp/>GPIO<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(100));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>soft-reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1gaa5141a128d613111e1a3f5b5b189f49b" kindref="member">ccs811_reset</ref>(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;soft-reset<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>*ccs811_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(CCS811_APPSTART_DELAY_MS));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>err_handle:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2c_master_bus_rm_device(out_handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaa02485dd45552bcdab58c102c0df56e7" kindref="member">ccs811_get_measurement</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*eco2,<sp/>uint16_t<sp/>*etvoc)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_error<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>bit64_uint8_buffer_t<sp/><sp/><sp/>rx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();<sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>wait<sp/>until<sp/>data<sp/>is<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>check<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gaea36b6c9e450ae85fcf0e89c51f2a4ad" kindref="member">ccs811_get_data_status</ref>(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>ready<sp/>read<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(CCS811_DATA_READY_DELAY_MS));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>ccs811_get_duration_us(handle)))</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>error<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gaf0b5cc8ab33a370424bbe905ed7a1c76" kindref="member">ccs811_get_error_status</ref>(handle,<sp/>&amp;has_error),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>read<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>error<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(has_error<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccs811_error_code_register_t<sp/>err_reg;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>error<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga61b35f4a71f4b97d0012f77d411375c6" kindref="member">ccs811_get_error_register</ref>(handle,<sp/>&amp;err_reg),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>error<sp/>register<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>error<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(!has_error,<sp/>ESP_ERR_INVALID_STATE,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>for<sp/>i2c<sp/>ccs811<sp/>device<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__drivers_1gad3c6b76aefc8ee97bf3d646d57e99a75" kindref="member">ccs811_err_to_code</ref>(err_reg));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>and<sp/>then<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_from(handle,<sp/><ref refid="ccs811_8c_1a0aecf6d661d26c2031972a95781ff4e7" kindref="member">CCS811_REG_ALG_RESULT_DATA_R</ref>,<sp/>rx,<sp/>BIT64_UINT8_BUFFER_SIZE),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>alg<sp/>result<sp/>data<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>eco2<sp/>and<sp/>etvoc<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>*eco2<sp/><sp/>=<sp/>rx[1]<sp/>|<sp/>(rx[0]<sp/>&lt;&lt;<sp/>8);<sp/><sp/></highlight><highlight class="comment">//<sp/>big<sp/>endian<sp/>order<sp/>(msb<sp/>|<sp/>lsb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>*etvoc<sp/>=<sp/>rx[3]<sp/>|<sp/>(rx[2]<sp/>&lt;&lt;<sp/>8);<sp/><sp/></highlight><highlight class="comment">//<sp/>big<sp/>endian<sp/>order<sp/>(msb<sp/>|<sp/>lsb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eco2_data<sp/>=<sp/>((uint16_t)i2c_buf[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((uint32_t)i2c_buf[1]<sp/>&lt;&lt;<sp/>0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_LOGW(TAG,<sp/>&quot;eco2<sp/><sp/>hi-byte<sp/>0x%02x<sp/>|<sp/>lo-byte<sp/>0x%02x<sp/>(value:<sp/>%d)&quot;,<sp/>alg_result_data[0],<sp/>alg_result_data[1],<sp/>eco2_val);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_LOGW(TAG,<sp/>&quot;etvoc<sp/>hi-byte<sp/>0x%02x<sp/>|<sp/>lo-byte<sp/>0x%02x<sp/>(value:<sp/>%d)&quot;,<sp/>alg_result_data[2],<sp/>alg_result_data[3],<sp/>etvoc_val);<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga72d5edd9419a160994e6efd2fb4c5dd8" kindref="member">ccs811_set_environmental_data</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga3376d27746958386be2ab4a5bbfc398d" kindref="member">ccs811_set_environmental_data_register</ref>(handle,<sp/>temperature,<sp/>humidity),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>environmental<sp/>data<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae958fb94ab668f974903ba290fbdace4" kindref="member">ccs811_set_thresholds</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>low_to_med,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>med_to_high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>hysteresis)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga25478eadc453cd81afe79e8be0bc0389" kindref="member">ccs811_set_thresholds_register</ref>(handle,<sp/>low_to_med,<sp/>med_to_high,<sp/>hysteresis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>environmental<sp/>data<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae4a67a7a46ce69f0b857b79f9b8c2376" kindref="member">ccs811_get_drive_mode</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1gad91c6a3379cef0d15d8465d67c1479fa" kindref="member">ccs811_drive_modes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_measure_mode_register_t<sp/>mmode;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>measure<sp/>mode<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad2a11eca0777e7719a0a1e9e566576de" kindref="member">ccs811_get_measure_mode_register</ref>(handle,<sp/>&amp;mmode),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>drive<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref><sp/>=<sp/>mmode.bits.drive_mode;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gacdddac5cd9dae68712edb710148f1b11" kindref="member">ccs811_set_drive_mode</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gad91c6a3379cef0d15d8465d67c1479fa" kindref="member">ccs811_drive_modes_t</ref><sp/><ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_measure_mode_register_t<sp/>mmode;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>measure<sp/>mode<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad2a11eca0777e7719a0a1e9e566576de" kindref="member">ccs811_get_measure_mode_register</ref>(handle,<sp/>&amp;mmode),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>drive<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>mmode.bits.drive_mode<sp/>=<sp/><ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad3b44884f844b3777372970af4145217" kindref="member">ccs811_set_measure_mode_register</ref>(handle,<sp/>mmode),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>measure<sp/>mode<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga024130f529315f52acbe65121df34581" kindref="member">ccs811_get_firmware_mode</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1gadcc6aa53d50a1deb71f652886244b5b0" kindref="member">ccs811_firmware_modes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kindref="member">ccs811_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>(firmware<sp/>mode<sp/>state)<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>mode<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref><sp/>=<sp/>status.bits.firmware_mode;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga320ffdba546b10f2327379aa76a0deed" kindref="member">ccs811_get_ntc_resistance</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>r_ref,<sp/>uint32_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>resistance)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>bit32_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_read_from(handle,<sp/><ref refid="ccs811_8c_1a478af02d0d3e25adedae5f6764997750" kindref="member">CCS811_REG_NTC_R</ref>,<sp/>rx,<sp/>BIT32_UINT8_BUFFER_SIZE),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>ntc<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>v_ref<sp/>=<sp/>(uint16_t)(rx[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>rx[1];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>v_ntc<sp/>=<sp/>(uint16_t)(rx[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>rx[3];</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>*resistance<sp/>=<sp/>v_ntc<sp/>*<sp/>r_ref<sp/>/<sp/>v_ref;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaea36b6c9e450ae85fcf0e89c51f2a4ad" kindref="member">ccs811_get_data_status</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kindref="member">ccs811_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>(data<sp/>ready<sp/>state)<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status.bits.data_ready;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaf0b5cc8ab33a370424bbe905ed7a1c76" kindref="member">ccs811_get_error_status</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>ccs811_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0bff976989ba5bf0eaa1ca9e38e9d3af" kindref="member">ccs811_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>(error<sp/>state)<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>error<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>*error<sp/>=<sp/>status.bits.error;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaa5141a128d613111e1a3f5b5b189f49b" kindref="member">ccs811_reset</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>bit40_uint8_buffer_t<sp/>tx<sp/><sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>sw_reset[4]<sp/>=<sp/>CCS811_SW_RESET_DATA;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>frame<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[0]<sp/>=<sp/><ref refid="ccs811_8c_1aa8717db2ab11a5400dbfbfb97d297391" kindref="member">CCS811_REG_SW_RESET_W</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[1]<sp/>=<sp/>sw_reset[0];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[2]<sp/>=<sp/>sw_reset[1];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[3]<sp/>=<sp/>sw_reset[2];</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>tx[4]<sp/>=<sp/>sw_reset[3];</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ccs811_i2c_write(handle,<sp/>tx,<sp/>BIT40_UINT8_BUFFER_SIZE),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>soft-reset,<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ccs811_8c_1aee16d79acb336163405e51bf8b74a76d" kindref="member">CCS811_RESET_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>setup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(ccs811_setup(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>setup<sp/>device,<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga53ca5f2dc25d5785c6d05ddb711a2f26" kindref="member">ccs811_io_wake</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>wake<sp/>io<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afaafb2c6920016adb532a0670c4ec346" kindref="member">wake_io_enabled</ref>,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;wake<sp/>gpio<sp/>must<sp/>be<sp/>enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>low<sp/>for<sp/>wake<sp/>-<sp/>set<sp/>wake<sp/>gpio<sp/>low<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_set_level(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>,<sp/>0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>wake<sp/>gpio<sp/>level<sp/>low<sp/>failed<sp/>(gpio:<sp/>%i)&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref><sp/>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ccs811_8c_1a1e1996b2576e80d86962aefb4b22877b" kindref="member">CCS811_WAKE_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga585652bc7c427d8c3f1745aa1d6fdf06" kindref="member">ccs811_io_sleep</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>wake<sp/>io<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1afaafb2c6920016adb532a0670c4ec346" kindref="member">wake_io_enabled</ref>,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;wake<sp/>gpio<sp/>must<sp/>be<sp/>enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>high<sp/>for<sp/>sleep<sp/>-<sp/>set<sp/>wake<sp/>gpio<sp/>high<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_set_level(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref>,<sp/>1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>wake<sp/>gpio<sp/>level<sp/>high<sp/>failed<sp/>(gpio:<sp/>%i)&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1a240196dba9b17629756769b1120e3ff5" kindref="member">wake_io_num</ref><sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga8f5338c785855e5a7fff79194aa4cb9f" kindref="member">ccs811_io_reset</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>reset<sp/>io<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1acff0aeed76f5cb293de63fcc923ed1e7" kindref="member">reset_io_enabled</ref>,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;reset<sp/>gpio<sp/>must<sp/>be<sp/>enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>low<sp/>for<sp/>reset<sp/>-<sp/>set<sp/>reset<sp/>gpio<sp/>low<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_set_level(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>,<sp/>0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>reset<sp/>gpio<sp/>level<sp/>low<sp/>failed<sp/>(gpio:<sp/>%i)&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref><sp/>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>reset<sp/>gpio<sp/>in<sp/>low<sp/>state<sp/>-<sp/>for<sp/>reset<sp/>to<sp/>take<sp/>effect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ccs811_8c_1aee16d79acb336163405e51bf8b74a76d" kindref="member">CCS811_RESET_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reset<sp/>gpio<sp/>high<sp/>-<sp/>normal<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>gpio_set_level(handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref>,<sp/>1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>reset<sp/>gpio<sp/>level<sp/>high<sp/>failed<sp/>(gpio:<sp/>%i)&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;<ref refid="structccs811__context__t_1a509aba09e8653883a4756e2ef35e28b7" kindref="member">dev_config</ref>.<ref refid="structccs811__config__t_1ae9f6e6c1e76476a547ddd7d15d18a5a6" kindref="member">reset_io_num</ref><sp/>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga94d2bde4433eccabe0971f3646a8c581" kindref="member">ccs811_remove</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2c_master_bus_rm_device(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga411b556cedc994f96c23259453c55d27" kindref="member">ccs811_delete</ref>(<ref refid="group__drivers_1ga93f5ff3bbfd6b970a656de57f9ab5621" kindref="member">ccs811_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga94d2bde4433eccabe0971f3646a8c581" kindref="member">ccs811_remove</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus,<sp/>delete<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>handle<sp/>instance<sp/>and<sp/>free<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle-&gt;<ref refid="structccs811__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__drivers_1gae1a3cb157ee35d3a706afea61c4c85e0" kindref="member">ccs811_err_to_message</ref>(ccs811_error_code_register_t<sp/>error_reg)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>error<sp/>message<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.write_register_invalid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[0].msg;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.read_register_invalid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[1].msg;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.drive_mode_invalid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[2].msg;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.max_resistance_exceeded<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[3].msg;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.heater_current_fault<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[4].msg;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.heater_voltage_fault<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[5].msg;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_unknown_msg;</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__drivers_1gad3c6b76aefc8ee97bf3d646d57e99a75" kindref="member">ccs811_err_to_code</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ccs811_error_code_register_t<sp/>error_reg)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>error<sp/>code<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.write_register_invalid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[0].code;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.read_register_invalid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[1].code;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.drive_mode_invalid<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[2].code;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.max_resistance_exceeded<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[3].code;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.heater_current_fault<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[4].code;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error_reg.bits.heater_voltage_fault<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_error_definition_table[5].code;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_unknown_code;</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__drivers_1ga6549ec2730d45f8316474755e09f6a04" kindref="member">ccs811_measure_mode_description</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gad91c6a3379cef0d15d8465d67c1479fa" kindref="member">ccs811_drive_modes_t</ref><sp/><ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>measure<sp/>mode<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/><ref refid="group__drivers_1ga29a57c6f12a44f68158f0f9576726a59" kindref="member">CCS811_MEASURE_MODE_TABLE_SIZE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ccs811_measure_mode_definition_table[i].<ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref><sp/>==<sp/><ref refid="structccs811__measure__mode__row__s_1a655f7421109da72152c5ddbbef30791d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_measure_mode_definition_table[i].desc;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccs811_unknown_measure_mode;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__drivers_1gae2118089810b70ab33694f634ec10262" kindref="member">ccs811_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CCS811_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal">int32_t<sp/><ref refid="group__drivers_1ga241483f7879eb78e0c440d0a95def97d" kindref="member">ccs811_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CCS811_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_ccs811/ccs811.c"/>
  </compounddef>
</doxygen>
