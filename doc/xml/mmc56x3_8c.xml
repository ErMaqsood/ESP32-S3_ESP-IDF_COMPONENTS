<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="mmc56x3_8c" kind="file" language="C++">
    <compoundname>mmc56x3.c</compoundname>
    <includes refid="mmc56x3_8h" local="yes">include/mmc56x3.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="2">
        <label>include/mmc56x3.h</label>
        <link refid="mmc56x3_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>mmc56x3_version.h</label>
        <link refid="mmc56x3__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/peripherals/i2c/esp_mmc56x3/mmc56x3.c</label>
        <link refid="mmc56x3_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="15">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="14">
        <label>esp_log.h</label>
      </node>
      <node id="8">
        <label>esp_mac.h</label>
      </node>
      <node id="16">
        <label>esp_timer.h</label>
      </node>
      <node id="17">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="18">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="mmc56x3_8c_1a7ebd4c58009e6eb2f0e927722400392b" prot="public" static="no">
        <name>MMC56X3_REG_XOUT_0_R</name>
        <initializer>UINT8_C(0x00)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Xout[19:12] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="49" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a099f4c451f76173649c01f3ffae2079f" prot="public" static="no">
        <name>MMC56X3_REG_XOUT_1_R</name>
        <initializer>UINT8_C(0x01)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Xout[11:4] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="50" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a8445d4363bae951a12df6394ad23aab1" prot="public" static="no">
        <name>MMC56X3_REG_YOUT_0_R</name>
        <initializer>UINT8_C(0x02)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Yout[19:12] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="51" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a731cc1de4b7c8d3bd188ea208fe9ecbd" prot="public" static="no">
        <name>MMC56X3_REG_YOUT_1_R</name>
        <initializer>UINT8_C(0x03)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Yout[11:4] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="52" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a485cdedc38ee59beedc6d65472bd2803" prot="public" static="no">
        <name>MMC56X3_REG_ZOUT_0_R</name>
        <initializer>UINT8_C(0x04)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Zout[19:12] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="53" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1aae4b74a98a843c399e6ba47367dfda2b" prot="public" static="no">
        <name>MMC56X3_REG_ZOUT_1_R</name>
        <initializer>UINT8_C(0x05)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Zout[11:4] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="54" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1aa771e67cd138b917372b4e2a19b0fcd4" prot="public" static="no">
        <name>MMC56X3_REG_XOUT_2_R</name>
        <initializer>UINT8_C(0x06)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Xout[3:0] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a18893721fdcf59b8dcdd293d30093c4d" prot="public" static="no">
        <name>MMC56X3_REG_YOUT_2_R</name>
        <initializer>UINT8_C(0x07)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Yout[3:0] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="56" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a976f1230c58a694f9664f18976dd249d" prot="public" static="no">
        <name>MMC56X3_REG_ZOUT_2_R</name>
        <initializer>UINT8_C(0x08)</initializer>
        <briefdescription>
<para>mmc56x3 I2C Zout[3:0] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="57" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a54f0d985d024a2be172dd8a36b5a7e21" prot="public" static="no">
        <name>MMC56X3_REG_TOUT_R</name>
        <initializer>UINT8_C(0x09)</initializer>
        <briefdescription>
<para>mmc56x3 I2C temperature output </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="58" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a7eb114e8f2434ccc1ef7fd191380874b" prot="public" static="no">
        <name>MMC56X3_REG_STATUS_1_R</name>
        <initializer>UINT8_C(0x18)</initializer>
        <briefdescription>
<para>mmc56x3 I2C device status 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="59" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a13aafa96cc4be7fb501b214b65c5ba7c" prot="public" static="no">
        <name>MMC56X3_REG_ODR_W</name>
        <initializer>UINT8_C(0x1a)</initializer>
        <briefdescription>
<para>mmc56x3 I2C output data rate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="60" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a6d7966bc78433466b1089569363273c1" prot="public" static="no">
        <name>MMC56X3_REG_CONTROL_0_W</name>
        <initializer>UINT8_C(0x1b)</initializer>
        <briefdescription>
<para>mmc56x3 I2C control register 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="61" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1aecedb3e8e2c1d52955f11f3bcaf4b320" prot="public" static="no">
        <name>MMC56X3_REG_CONTROL_1_W</name>
        <initializer>UINT8_C(0x1c)</initializer>
        <briefdescription>
<para>mmc56x3 I2C control register 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="62" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a39781185781516dd7b020c02059c500a" prot="public" static="no">
        <name>MMC56X3_REG_CONTROL_2_W</name>
        <initializer>UINT8_C(0x1d)</initializer>
        <briefdescription>
<para>mmc56x3 I2C control register 2 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="63" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a6de5d32bbf3c2996456460e3114b179d" prot="public" static="no">
        <name>MMC56X3_REG_ST_X_TH_W</name>
        <initializer>UINT8_C(0x1e)</initializer>
        <briefdescription>
<para>mmc56x3 I2C x-axis selftest threshold </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="64" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a22e0e873ff046e2dbee5158d0e1babb5" prot="public" static="no">
        <name>MMC56X3_REG_ST_Y_TH_W</name>
        <initializer>UINT8_C(0x1f)</initializer>
        <briefdescription>
<para>mmc56x3 I2C y-axis selftest threshold </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="65" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1ad93286be385ec750d1213ab92b3f7b60" prot="public" static="no">
        <name>MMC56X3_REG_ST_Z_TH_W</name>
        <initializer>UINT8_C(0x20)</initializer>
        <briefdescription>
<para>mmc56x3 I2C z-axis selftest threshold </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="66" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a0a563ceb3024fda9c1811dd58efc265b" prot="public" static="no">
        <name>MMC56X3_REG_ST_X_SV_RW</name>
        <initializer>UINT8_C(0x27)</initializer>
        <briefdescription>
<para>mmc56x3 I2C x-axis selftest set-value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="67" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a8ca53390c8ba6d0215c0afa5a0272582" prot="public" static="no">
        <name>MMC56X3_REG_ST_Y_SV_RW</name>
        <initializer>UINT8_C(0x28)</initializer>
        <briefdescription>
<para>mmc56x3 I2C y-axis selftest set-value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a30fc456f4bcc81e1697e1811c59ddd65" prot="public" static="no">
        <name>MMC56X3_REG_ST_Z_SV_RW</name>
        <initializer>UINT8_C(0x29)</initializer>
        <briefdescription>
<para>mmc56x3 I2C z-axis selftest set-value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="69" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a0dc415595885eda1014338098401c3b4" prot="public" static="no">
        <name>MMC56X3_REG_PRODUCT_ID_R</name>
        <initializer>UINT8_C(0x39)</initializer>
        <briefdescription>
<para>mmc56x3 I2C product identifier </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1add5c9a5e03601e06472dfe2400080f5b" prot="public" static="no">
        <name>MMC56X3_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="73" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1ada4e372f45380b567d9b828ccd46ea54" prot="public" static="no">
        <name>MMC56X3_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
<para>mmc56x3 I2C delay in milliseconds app-start </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="74" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a80ceed3cc23761cb90a2a442c3bea6c8" prot="public" static="no">
        <name>MMC56X3_RESET_DELAY_MS</name>
        <initializer>UINT16_C(50)</initializer>
        <briefdescription>
<para>mmc56x3 I2C delay in milliseconds after reset </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a6561a123451ec95a800f18839437c1e3" prot="public" static="no">
        <name>MMC56X3_SETRESET_DELAY_MS</name>
        <initializer>UINT16_C(1)</initializer>
        <briefdescription>
<para>mmc56x3 I2C delay in milliseconds after set-reset transaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="76" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1aab548a07be98c27c084a1a97317041fe" prot="public" static="no">
        <name>MMC56X3_WRITE_DELAY_MS</name>
        <initializer>UINT16_C(1)</initializer>
        <briefdescription>
<para>mmc56x3 I2C delay in milliseconds after write transaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="77" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a0df1d81a3898d3142f946bf1ea014ab2" prot="public" static="no">
        <name>MMC56X3_DATA_READY_DELAY_MS</name>
        <initializer>UINT16_C(1)</initializer>
        <briefdescription>
<para>mmc56x3 1ms when checking data ready in a loop </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="78" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1ab3538de998c18368344c377906a6c07a" prot="public" static="no">
        <name>MMC56X3_DATA_POLL_TIMEOUT_MS</name>
        <initializer>UINT16_C(100)</initializer>
        <briefdescription>
<para>mmc56x3 100ms timeout when making a measurement </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="79" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1ab1523aab032464b6f5b003908dba3b4c" prot="public" static="no">
        <name>MMC56X3_CMD_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="80" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1a7bebe85270486441e4e9d67d79a5d45d" prot="public" static="no">
        <name>MMC56X3_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="81" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1aee7b193fcb571e0c3bc88c29f1662af4" prot="public" static="no">
        <name>ESP_TIMEOUT_CHECK</name>
        <param><defname>start</defname></param>
        <param><defname>len</defname></param>
        <initializer>((uint64_t)(esp_timer_get_time() - (start)) &gt;= (len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="86" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mmc56x3_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="87" column="9" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="mmc56x3_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;mmc56x3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="92" column="19" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="mmc56x3_8c_1a7e92cc4165eb9cf97a577a72358127b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t mmc56x3_i2c_read_from</definition>
        <argsstring>(mmc56x3_handle_t handle, const uint8_t reg_addr, uint8_t *buffer, const uint8_t size)</argsstring>
        <name>mmc56x3_i2c_read_from</name>
        <param>
          <type><ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>MMC56X3 I2C read from register address transaction. This is a write and then read process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="109" column="25" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="109" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="mmc56x3_8c_1aec79ed5e735e76394f397092f8fe74c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t mmc56x3_i2c_read_byte_from</definition>
        <argsstring>(mmc56x3_handle_t handle, const uint8_t reg_addr, uint8_t *const byte)</argsstring>
        <name>mmc56x3_i2c_read_byte_from</name>
        <param>
          <type><ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>MMC56X3 I2C read byte from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 read transaction return byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="128" column="25" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="128" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="mmc56x3_8c_1a03163efb970b08afcca25585f6d8647d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t mmc56x3_i2c_write_byte_to</definition>
        <argsstring>(mmc56x3_handle_t handle, const uint8_t reg_addr, const uint8_t byte)</argsstring>
        <name>mmc56x3_i2c_write_byte_to</name>
        <param>
          <type><ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>MMC56X3 I2C write byte to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC56X3 write transaction input byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" line="151" column="25" bodyfile="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c" bodystart="151" bodyend="161"/>
      </memberdef>
      <member refid="group__drivers_1ga95b426b6a4a1eee47247f74923ba0d31" kind="function"><name>mmc56x3_get_status_register</name></member>
      <member refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kind="function"><name>mmc56x3_set_control0_register</name></member>
      <member refid="group__drivers_1ga31aaa5bbe130a6163869667a60fb5301" kind="function"><name>mmc56x3_set_control1_register</name></member>
      <member refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kind="function"><name>mmc56x3_set_control2_register</name></member>
      <member refid="group__drivers_1gabdaf66829842997beb2ab5f424bc812f" kind="function"><name>mmc56x3_get_product_id_register</name></member>
      <member refid="group__drivers_1ga5a09995eaf74096e065a6c6a39dc80dc" kind="function"><name>mmc56x3_init</name></member>
      <member refid="group__drivers_1ga7b84f50c19f98870bb3882bd985897c9" kind="function"><name>mmc56x3_get_temperature</name></member>
      <member refid="group__drivers_1gab38f0a15f1b7b3fb06d56ea38848faf1" kind="function"><name>mmc56x3_get_magnetic_axes</name></member>
      <member refid="group__drivers_1ga01592af2fb75a9bc6e8b7c1950614d7e" kind="function"><name>mmc56x3_get_magnetic_data_status</name></member>
      <member refid="group__drivers_1gae8cb97b4b73bdffb4039f0c8e5696336" kind="function"><name>mmc56x3_get_temperature_data_status</name></member>
      <member refid="group__drivers_1ga8dbb902d661c9a70ecf82d879ed4a347" kind="function"><name>mmc56x3_get_data_status</name></member>
      <member refid="group__drivers_1ga5bc08a2ff58554dbd8c3a2d4be7c4425" kind="function"><name>mmc56x3_set_measure_mode</name></member>
      <member refid="group__drivers_1gafbdbe7f46092beec4d619ed26b39e977" kind="function"><name>mmc56x3_set_data_rate</name></member>
      <member refid="group__drivers_1ga2fd05ad31f960373b8c910767f6a2509" kind="function"><name>mmc56x3_set_measure_bandwidth</name></member>
      <member refid="group__drivers_1gae937947ec4d01f005121f209fd4be69b" kind="function"><name>mmc56x3_enable_periodical_set</name></member>
      <member refid="group__drivers_1gac62ab6cc87a701845290de9c018624d8" kind="function"><name>mmc56x3_disable_periodical_set</name></member>
      <member refid="group__drivers_1ga185f6a5fad7af2805cc348c9080a1d1e" kind="function"><name>mmc56x3_magnetic_set_reset</name></member>
      <member refid="group__drivers_1ga25ffeac2e62c1c699b18cb23f26f5738" kind="function"><name>mmc56x3_set_selftest_thresholds</name></member>
      <member refid="group__drivers_1ga29e31e967c1c0c97a030c37a99f9d5a7" kind="function"><name>mmc56x3_get_selftest_set_values</name></member>
      <member refid="group__drivers_1gaad5b583f33c13a5758f47d7af49f140a" kind="function"><name>mmc56x3_set_selftest_set_values</name></member>
      <member refid="group__drivers_1gaabd21a2191ea0580ebab958771176f0c" kind="function"><name>mmc56x3_reset</name></member>
      <member refid="group__drivers_1ga0ffa7e19030a3f3dbda3976917e8bb9c" kind="function"><name>mmc56x3_remove</name></member>
      <member refid="group__drivers_1gaefb47ac2a1fc3f36261564629968afe8" kind="function"><name>mmc56x3_delete</name></member>
      <member refid="group__drivers_1ga9d3fb9eeea0d3e1d7adc40d5b6869012" kind="function"><name>mmc56x3_convert_to_heading</name></member>
      <member refid="group__drivers_1ga739d5135d3a55245ee3913ef5f50786b" kind="function"><name>mmc56x3_convert_to_true_heading</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for MMC56X3 Magnetic sensor</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mmc56x3_8h" kindref="compound">include/mmc56x3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>MMC56X3<sp/>definitions</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_XOUT_0_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x00)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_XOUT_1_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x01)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_YOUT_0_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x02)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_YOUT_1_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x03)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ZOUT_0_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x04)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ZOUT_1_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x05)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_XOUT_2_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x06)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_YOUT_2_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x07)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ZOUT_2_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x08)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_TOUT_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x09)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_STATUS_1_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x18)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ODR_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1a)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_CONTROL_0_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1b)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_CONTROL_1_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1c)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_CONTROL_2_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1d)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ST_X_TH_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1e)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ST_Y_TH_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x1f)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ST_Z_TH_W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x20)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ST_X_SV_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x27)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ST_Y_SV_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x28)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_ST_Z_SV_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x29)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_REG_PRODUCT_ID_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x39)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(50)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(50)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_SETRESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_WRITE_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_DATA_READY_DELAY_MS<sp/><sp/><sp/><sp/><sp/>UINT16_C(1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_DATA_POLL_TIMEOUT_MS<sp/><sp/><sp/><sp/>UINT16_C(100)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_CMD_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MMC56X3_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="85"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_TIMEOUT_CHECK(start,<sp/>len)<sp/>((uint64_t)(esp_timer_get_time()<sp/>-<sp/>(start))<sp/>&gt;=<sp/>(len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="91"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mmc56x3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*<sp/>functions<sp/>and<sp/>subroutines</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>mmc56x3_i2c_read_from(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;mmc56x3_i2c_read_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>mmc56x3_i2c_read_byte_from(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>bit8_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;mmc56x3_i2c_read_byte_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>rx[0];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>mmc56x3_i2c_write_byte_to(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit16_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga95b426b6a4a1eee47247f74923ba0d31" kindref="member">mmc56x3_get_status_register</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/>mmc56x3_status_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_read_byte_from(handle,<sp/><ref refid="mmc56x3_8c_1a7eb114e8f2434ccc1ef7fd191380874b" kindref="member">MMC56X3_REG_STATUS_1_R</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;mmc56x3<sp/>read<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mmc56x3_control0_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/>control0<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>control0.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a6d7966bc78433466b1089569363273c1" kindref="member">MMC56X3_REG_CONTROL_0_W</ref>,<sp/>control0.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga31aaa5bbe130a6163869667a60fb5301" kindref="member">mmc56x3_set_control1_register</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mmc56x3_control1_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control1_register_t<sp/>control1<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1aecedb3e8e2c1d52955f11f3bcaf4b320" kindref="member">MMC56X3_REG_CONTROL_1_W</ref>,<sp/>control1.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kindref="member">mmc56x3_set_control2_register</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mmc56x3_control2_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>reserved<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control2_register_t<sp/>control2<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>control2.bits.reserved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a39781185781516dd7b020c02059c500a" kindref="member">MMC56X3_REG_CONTROL_2_W</ref>,<sp/>control2.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gabdaf66829842997beb2ab5f424bc812f" kindref="member">mmc56x3_get_product_id_register</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_read_byte_from(handle,<sp/><ref refid="mmc56x3_8c_1a0dc415595885eda1014338098401c3b4" kindref="member">MMC56X3_REG_PRODUCT_ID_R</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;mmc56x3<sp/>read<sp/>product<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5a09995eaf74096e065a6c6a39dc80dc" kindref="member">mmc56x3_init</ref>(i2c_master_bus_handle_t<sp/>master_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gace8f7bf433f0bfc89754ddbfb7a7d2d3" kindref="member">mmc56x3_config_t</ref><sp/>*mmc56x3_config,<sp/><ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>*mmc56x3_handle)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>master_handle<sp/>&amp;&amp;<sp/>mmc56x3_config<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_POWERUP_DELAY_MS));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>exists<sp/>on<sp/>the<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>i2c_master_probe(master_handle,<sp/>mmc56x3_config-&gt;<ref refid="structmmc56x3__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ret,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>does<sp/>not<sp/>exist<sp/>at<sp/>address<sp/>0x%02x,<sp/>mmc56x3<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>mmc56x3_config-&gt;<ref refid="structmmc56x3__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>data<sp/>rate<sp/>if<sp/>continuous<sp/>mode<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mmc56x3_config-&gt;<ref refid="structmmc56x3__config__s_1a891db58d07ac3e9fbc9996a6abe8f8b0" kindref="member">continuous_mode_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(mmc56x3_config-&gt;<ref refid="structmmc56x3__config__s_1af7750329f3654d2f6fe5a20adeae49dd" kindref="member">data_rate</ref><sp/>&gt;<sp/>0,<sp/>ESP_ERR_INVALID_ARG,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>rate<sp/>(odr)<sp/>must<sp/>be<sp/>non-zero<sp/>in<sp/>continuous<sp/>measurement<sp/>mode,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c<sp/>mmc56x3<sp/>device,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;dev_config<sp/>=<sp/>*mmc56x3_config;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i2c_device_config_t<sp/>i2c_dev_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dev_addr_length<sp/><sp/><sp/><sp/>=<sp/>I2C_ADDR_BIT_LEN_7,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device_address<sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scl_speed_hz<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1a770b3ab4bba557baec88287d86832a34" kindref="member">i2c_clock_speed</ref>,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(i2c_master_bus_add_device(master_handle,<sp/>&amp;i2c_dev_conf,<sp/>&amp;out_handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>new<sp/>bus<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>reset<sp/>the<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gaabd21a2191ea0580ebab958771176f0c" kindref="member">mmc56x3_reset</ref>(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>issue<sp/>soft-reset,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>*mmc56x3_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="mmc56x3_8c_1ada4e372f45380b567d9b828ccd46ea54" kindref="member">MMC56X3_APPSTART_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>err_handle:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2c_master_bus_rm_device(out_handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga7b84f50c19f98870bb3882bd985897c9" kindref="member">mmc56x3_get_temperature</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>temperature)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/>start_time<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/>temp_reg;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1a891db58d07ac3e9fbc9996a6abe8f8b0" kindref="member">continuous_mode_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/>ctrl0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trigger<sp/>temperature<sp/>measurement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl0.bits.sample_t<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>0<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(handle,<sp/>ctrl0),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>magnetic<sp/>sample<sp/>trigger<sp/>for<sp/>get<sp/>magnetic<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>(us)<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gae8cb97b4b73bdffb4039f0c8e5696336" kindref="member">mmc56x3_get_temperature_data_status</ref>(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;temperature<sp/>data<sp/>ready<sp/>read<sp/>for<sp/>get<sp/>temperature<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="mmc56x3_8c_1a0df1d81a3898d3142f946bf1ea014ab2" kindref="member">MMC56X3_DATA_READY_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(<ref refid="mmc56x3_8c_1ab3538de998c18368344c377906a6c07a" kindref="member">MMC56X3_DATA_POLL_TIMEOUT_MS</ref><sp/>*<sp/>1000)))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>data<sp/>read<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>mmc56x3_i2c_read_byte_from(handle,<sp/><ref refid="mmc56x3_8c_1a54f0d985d024a2be172dd8a36b5a7e21" kindref="member">MMC56X3_REG_TOUT_R</ref>,<sp/>&amp;temp_reg),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>temperature<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>*temperature<sp/>=<sp/>temp_reg;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>*temperature<sp/>*=<sp/>0.8;<sp/></highlight><highlight class="comment">//<sp/>0.8C<sp/>/<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>*temperature<sp/>-=<sp/>75;<sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>value<sp/>is<sp/>-75</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gab38f0a15f1b7b3fb06d56ea38848faf1" kindref="member">mmc56x3_get_magnetic_axes</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga4f12cc6fde28c182e28c53d82ebbddbb" kindref="member">mmc56x3_magnetic_axes_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>axes_data)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/><sp/><sp/><sp/><sp/>ctrl0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>bit72_uint8_buffer_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1a891db58d07ac3e9fbc9996a6abe8f8b0" kindref="member">continuous_mode_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trigger<sp/>magnetic<sp/>measurement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl0.bits.sample_m<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>control<sp/>0<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(handle,<sp/>ctrl0),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>magnetic<sp/>sample<sp/>trigger<sp/>for<sp/>get<sp/>magnetic<sp/>axes<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>(us)<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga01592af2fb75a9bc6e8b7c1950614d7e" kindref="member">mmc56x3_get_magnetic_data_status</ref>(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;magnetic<sp/>data<sp/>ready<sp/>read<sp/>for<sp/>get<sp/>magnetic<sp/>axes<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="mmc56x3_8c_1a0df1d81a3898d3142f946bf1ea014ab2" kindref="member">MMC56X3_DATA_READY_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(<ref refid="mmc56x3_8c_1ab3538de998c18368344c377906a6c07a" kindref="member">MMC56X3_DATA_POLL_TIMEOUT_MS</ref><sp/>*<sp/>1000)))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>data<sp/>write-read<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>mmc56x3_i2c_read_from(handle,<sp/><ref refid="mmc56x3_8c_1a7ebd4c58009e6eb2f0e927722400392b" kindref="member">MMC56X3_REG_XOUT_0_R</ref>,<sp/>rx,<sp/>BIT72_UINT8_BUFFER_SIZE),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>magnetic<sp/>axes<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>bytes<sp/>(20-bit)<sp/>to<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>x_axis<sp/>=<sp/>(uint32_t)rx[0]<sp/>&lt;&lt;<sp/>12<sp/>|<sp/>(uint32_t)rx[1]<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>(uint32_t)rx[6]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>y_axis<sp/>=<sp/>(uint32_t)rx[2]<sp/>&lt;&lt;<sp/>12<sp/>|<sp/>(uint32_t)rx[3]<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>(uint32_t)rx[7]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>z_axis<sp/>=<sp/>(uint32_t)rx[4]<sp/>&lt;&lt;<sp/>12<sp/>|<sp/>(uint32_t)rx[5]<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>(uint32_t)rx[8]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>to<sp/>mG<sp/>by<sp/>LSB<sp/>(0.0625mG<sp/>per<sp/>LSB<sp/>resolution)<sp/>in<sp/>datasheet<sp/>(20-bit<sp/>524288<sp/>counts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>axes_data-&gt;x_axis<sp/>=<sp/>(float)(x_axis<sp/>-<sp/>524288)<sp/>*<sp/>0.0625;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>axes_data-&gt;y_axis<sp/>=<sp/>(float)(y_axis<sp/>-<sp/>524288)<sp/>*<sp/>0.0625;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>axes_data-&gt;z_axis<sp/>=<sp/>(float)(z_axis<sp/>-<sp/>524288)<sp/>*<sp/>0.0625;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga01592af2fb75a9bc6e8b7c1950614d7e" kindref="member">mmc56x3_get_magnetic_data_status</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga95b426b6a4a1eee47247f74923ba0d31" kindref="member">mmc56x3_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>magnetic<sp/>data<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status.bits.data_ready_m;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae8cb97b4b73bdffb4039f0c8e5696336" kindref="member">mmc56x3_get_temperature_data_status</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga95b426b6a4a1eee47247f74923ba0d31" kindref="member">mmc56x3_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>temperature<sp/>data<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status.bits.data_ready_t;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga8dbb902d661c9a70ecf82d879ed4a347" kindref="member">mmc56x3_get_data_status</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>magnetic_ready,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>temperature_ready)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga95b426b6a4a1eee47247f74923ba0d31" kindref="member">mmc56x3_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>temperature<sp/>data<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>*magnetic_ready<sp/><sp/><sp/><sp/><sp/>=<sp/>status.bits.data_ready_m;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>*temperature_ready<sp/><sp/>=<sp/>status.bits.data_ready_t;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5bc08a2ff58554dbd8c3a2d4be7c4425" kindref="member">mmc56x3_set_measure_mode</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>continuous)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>data<sp/>rate<sp/>if<sp/>continuous<sp/>mode<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(continuous<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1af7750329f3654d2f6fe5a20adeae49dd" kindref="member">data_rate</ref><sp/>&gt;<sp/>0,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>rate<sp/>(odr)<sp/>must<sp/>be<sp/>non-zero<sp/>in<sp/>continuous<sp/>measurement<sp/>mode,<sp/>set<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/>ctrl0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control2_register_t<sp/>ctrl2;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl0.bits.auto_sr_enabled<sp/>=<sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1af326e55edbb36a439897f07a49070610" kindref="member">auto_sr_enabled</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(continuous<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl0.bits.continuous_freq_enabled<sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>on<sp/>cmm_freq_en<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl2.bits.continuous_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>on<sp/>cmm_en<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl0.bits.continuous_freq_enabled<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>off<sp/>cmm_freq_en<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl2.bits.continuous_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>off<sp/>cmm_en<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>0<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(handle,<sp/>ctrl0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>0<sp/>register,<sp/>set<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>2<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kindref="member">mmc56x3_set_control2_register</ref>(handle,<sp/>ctrl2),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>2<sp/>register,<sp/>set<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1a891db58d07ac3e9fbc9996a6abe8f8b0" kindref="member">continuous_mode_enabled</ref><sp/>=<sp/>continuous;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafbdbe7f46092beec4d619ed26b39e977" kindref="member">mmc56x3_set_data_rate</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>rate)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control2_register_t<sp/>ctrl2;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>0~255<sp/>and<sp/>1000<sp/>are<sp/>valid,<sp/>so<sp/>just<sp/>move<sp/>any<sp/>high<sp/>rates<sp/>to<sp/>1000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rate<sp/>&gt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>odr<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>odr<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a13aafa96cc4be7fb501b214b65c5ba7c" kindref="member">MMC56X3_REG_ODR_W</ref>,<sp/>odr),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>odr<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>hpower<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl2.bits.h_power_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>2<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kindref="member">mmc56x3_set_control2_register</ref>(handle,<sp/>ctrl2),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>odr<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>odr<sp/>=<sp/>(uint8_t)rate;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a13aafa96cc4be7fb501b214b65c5ba7c" kindref="member">MMC56X3_REG_ODR_W</ref>,<sp/>odr),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>odr<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>hpower<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl2.bits.h_power_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>2<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kindref="member">mmc56x3_set_control2_register</ref>(handle,<sp/>ctrl2),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>2<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1af7750329f3654d2f6fe5a20adeae49dd" kindref="member">data_rate</ref><sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga2fd05ad31f960373b8c910767f6a2509" kindref="member">mmc56x3_set_measure_bandwidth</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga04eb0a8975116163a7527e4a3710d90d" kindref="member">mmc56x3_measurement_times_t</ref><sp/>bandwidth)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control1_register_t<sp/>ctrl1;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl1.bits.bandwidth<sp/>=<sp/>bandwidth;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>1<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga31aaa5bbe130a6163869667a60fb5301" kindref="member">mmc56x3_set_control1_register</ref>(handle,<sp/>ctrl1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>control<sp/>1<sp/>register,<sp/>set<sp/>measure<sp/>bandwidth<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1aafaf2abf1915682509e867179857da42" kindref="member">measurement_bandwidth</ref><sp/>=<sp/>bandwidth;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae937947ec4d01f005121f209fd4be69b" kindref="member">mmc56x3_enable_periodical_set</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga6a8e469cb5a690f8bcb7a6163f01b490" kindref="member">mmc56x3_measurement_samples_t</ref><sp/>samples)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/>ctrl0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control2_register_t<sp/>ctrl2;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl0.bits.auto_sr_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl2.bits.periodical_set_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl2.bits.periodical_set_samples<sp/>=<sp/>samples;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>0<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(handle,<sp/>ctrl0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>0<sp/>register,<sp/>enable<sp/>periodical<sp/>set<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>2<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kindref="member">mmc56x3_set_control2_register</ref>(handle,<sp/>ctrl2),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>2<sp/>register,<sp/>enable<sp/>periodical<sp/>set<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gac62ab6cc87a701845290de9c018624d8" kindref="member">mmc56x3_disable_periodical_set</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/>ctrl0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control2_register_t<sp/>ctrl2;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1af326e55edbb36a439897f07a49070610" kindref="member">auto_sr_enabled</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl0.bits.auto_sr_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl0.bits.auto_sr_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl2.bits.periodical_set_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl2.bits.periodical_set_samples<sp/>=<sp/>MMC56X3_MEAS_SAMPLE_1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>0<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(handle,<sp/>ctrl0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>0<sp/>register,<sp/>enable<sp/>periodical<sp/>set<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>2<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga3a0d8f3ad1db51aa0da6ff9223204a85" kindref="member">mmc56x3_set_control2_register</ref>(handle,<sp/>ctrl2),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>2<sp/>register,<sp/>enable<sp/>periodical<sp/>set<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga185f6a5fad7af2805cc348c9080a1d1e" kindref="member">mmc56x3_magnetic_set_reset</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control0_register_t<sp/>ctrl0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl0.bits.do_set<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>on<sp/>set<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl0.bits.do_reset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>on<sp/>reset<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>0<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga08666e92f36f0f6e78be2862a918fe4a" kindref="member">mmc56x3_set_control0_register</ref>(handle,<sp/>ctrl0),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>0<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="mmc56x3_8c_1a6561a123451ec95a800f18839437c1e3" kindref="member">MMC56X3_SETRESET_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga25ffeac2e62c1c699b18cb23f26f5738" kindref="member">mmc56x3_set_selftest_thresholds</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga6d0ea50e620e218d585d9a966d012eb2" kindref="member">mmc56x3_selftest_axes_data_t</ref><sp/>axes_data)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transactions<sp/>for<sp/>each<sp/>axis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a6de5d32bbf3c2996456460e3114b179d" kindref="member">MMC56X3_REG_ST_X_TH_W</ref>,<sp/>axes_data.x_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>self-test<sp/>x-axis<sp/>threshold<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a22e0e873ff046e2dbee5158d0e1babb5" kindref="member">MMC56X3_REG_ST_Y_TH_W</ref>,<sp/>axes_data.y_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>self-test<sp/>y-axis<sp/>threshold<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1ad93286be385ec750d1213ab92b3f7b60" kindref="member">MMC56X3_REG_ST_Z_TH_W</ref>,<sp/>axes_data.z_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>self-test<sp/>z-axis<sp/>threshold<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga29e31e967c1c0c97a030c37a99f9d5a7" kindref="member">mmc56x3_get_selftest_set_values</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga6d0ea50e620e218d585d9a966d012eb2" kindref="member">mmc56x3_selftest_axes_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>axes_data)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transactions<sp/>for<sp/>each<sp/>axis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_read_byte_from(handle,<sp/><ref refid="mmc56x3_8c_1a0a563ceb3024fda9c1811dd58efc265b" kindref="member">MMC56X3_REG_ST_X_SV_RW</ref>,<sp/>&amp;axes_data-&gt;x_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>self-test<sp/>x-axis<sp/>set<sp/>value<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_read_byte_from(handle,<sp/><ref refid="mmc56x3_8c_1a8ca53390c8ba6d0215c0afa5a0272582" kindref="member">MMC56X3_REG_ST_Y_SV_RW</ref>,<sp/>&amp;axes_data-&gt;y_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>self-test<sp/>y-axis<sp/>set<sp/>value<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_read_byte_from(handle,<sp/><ref refid="mmc56x3_8c_1a30fc456f4bcc81e1697e1811c59ddd65" kindref="member">MMC56X3_REG_ST_Z_SV_RW</ref>,<sp/>&amp;axes_data-&gt;z_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>self-test<sp/>z-axis<sp/>set<sp/>value<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaad5b583f33c13a5758f47d7af49f140a" kindref="member">mmc56x3_set_selftest_set_values</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga6d0ea50e620e218d585d9a966d012eb2" kindref="member">mmc56x3_selftest_axes_data_t</ref><sp/>axes_data)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transactions<sp/>for<sp/>each<sp/>axis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a0a563ceb3024fda9c1811dd58efc265b" kindref="member">MMC56X3_REG_ST_X_SV_RW</ref>,<sp/>axes_data.x_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>self-test<sp/>x-axis<sp/>set<sp/>value<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a8ca53390c8ba6d0215c0afa5a0272582" kindref="member">MMC56X3_REG_ST_Y_SV_RW</ref>,<sp/>axes_data.y_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>self-test<sp/>y-axis<sp/>set<sp/>value<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>mmc56x3_i2c_write_byte_to(handle,<sp/><ref refid="mmc56x3_8c_1a30fc456f4bcc81e1697e1811c59ddd65" kindref="member">MMC56X3_REG_ST_Z_SV_RW</ref>,<sp/>axes_data.z_axis),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>self-test<sp/>z-axis<sp/>set<sp/>value<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(MMC56X3_CMD_DELAY_MS));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaabd21a2191ea0580ebab958771176f0c" kindref="member">mmc56x3_reset</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>register<sp/>soft-reset<sp/>to<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>mmc56x3_control1_register_t<sp/>ctrl1<sp/>=<sp/>{<sp/>.bits.sw_reset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>control<sp/>1<sp/>register<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga31aaa5bbe130a6163869667a60fb5301" kindref="member">mmc56x3_set_control1_register</ref>(handle,<sp/>ctrl1),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>control<sp/>1<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="mmc56x3_8c_1a80ceed3cc23761cb90a2a442c3bea6c8" kindref="member">MMC56X3_RESET_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>magnet<sp/>set<sp/>reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga185f6a5fad7af2805cc348c9080a1d1e" kindref="member">mmc56x3_magnetic_set_reset</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;magnetic<sp/>set-reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5bc08a2ff58554dbd8c3a2d4be7c4425" kindref="member">mmc56x3_set_measure_mode</ref>(handle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>continuous<sp/>mode<sp/>set<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>configure<sp/>the<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga2fd05ad31f960373b8c910767f6a2509" kindref="member">mmc56x3_set_measure_bandwidth</ref>(handle,<sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1aafaf2abf1915682509e867179857da42" kindref="member">measurement_bandwidth</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>set<sp/>measure<sp/>bandwidth,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafbdbe7f46092beec4d619ed26b39e977" kindref="member">mmc56x3_set_data_rate</ref>(handle,<sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1af7750329f3654d2f6fe5a20adeae49dd" kindref="member">data_rate</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>issue<sp/>soft-reset,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5bc08a2ff58554dbd8c3a2d4be7c4425" kindref="member">mmc56x3_set_measure_mode</ref>(handle,<sp/>handle-&gt;dev_config.<ref refid="structmmc56x3__config__s_1a891db58d07ac3e9fbc9996a6abe8f8b0" kindref="member">continuous_mode_enabled</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>set<sp/>measure<sp/>mode,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga0ffa7e19030a3f3dbda3976917e8bb9c" kindref="member">mmc56x3_remove</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2c_master_bus_rm_device(handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaefb47ac2a1fc3f36261564629968afe8" kindref="member">mmc56x3_delete</ref>(<ref refid="group__drivers_1gad7010c389e7821d1ed37ec2be5341039" kindref="member">mmc56x3_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga0ffa7e19030a3f3dbda3976917e8bb9c" kindref="member">mmc56x3_remove</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus,<sp/>delete<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>handle<sp/>instance<sp/>and<sp/>free<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle-&gt;<ref refid="structmmc56x3__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga9d3fb9eeea0d3e1d7adc40d5b6869012" kindref="member">mmc56x3_convert_to_heading</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga4f12cc6fde28c182e28c53d82ebbddbb" kindref="member">mmc56x3_magnetic_axes_data_t</ref><sp/>axes_data)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>honeywell<sp/>application<sp/>note<sp/>AN-203<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>&gt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>90.0f<sp/>-<sp/>atanf(axes_data.x_axis/axes_data.y_axis<sp/>*<sp/>180.0f<sp/>/<sp/>M_PI);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>&lt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>270.0f<sp/>-<sp/>atanf(axes_data.x_axis/axes_data.y_axis<sp/>*<sp/>180.0f<sp/>/<sp/>M_PI);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>axes_data.x_axis<sp/>&lt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>axes_data.x_axis<sp/>&gt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heading;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga739d5135d3a55245ee3913ef5f50786b" kindref="member">mmc56x3_convert_to_true_heading</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>declination,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga4f12cc6fde28c182e28c53d82ebbddbb" kindref="member">mmc56x3_magnetic_axes_data_t</ref><sp/>axes_data)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>honeywell<sp/>application<sp/>note<sp/>AN-203<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>&gt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>90.0f<sp/>-<sp/>atanf(axes_data.x_axis/axes_data.y_axis<sp/>*<sp/>180.0f<sp/>/<sp/>M_PI);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>&lt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>270.0f<sp/>-<sp/>atanf(axes_data.x_axis/axes_data.y_axis<sp/>*<sp/>180.0f<sp/>/<sp/>M_PI);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>axes_data.x_axis<sp/>&lt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(axes_data.y_axis<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>axes_data.x_axis<sp/>&gt;<sp/>0.0f)<sp/>heading<sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heading<sp/>+<sp/>declination;</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_mmc56x3/mmc56x3.c"/>
  </compounddef>
</doxygen>
