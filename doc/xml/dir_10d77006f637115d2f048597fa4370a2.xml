<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dir_10d77006f637115d2f048597fa4370a2" kind="dir">
    <compoundname>components/peripherals/i2c/esp_sgp4x</compoundname>
    <innerdir refid="dir_a5c3bb1620af497364c23e70aecad81e">components/peripherals/i2c/esp_sgp4x/include</innerdir>
    <innerfile refid="sgp4x_8c">sgp4x.c</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ulink url="/LICENSE"><image type="html" name="https://cdn.prod.website-files.com/5e0f1144930a8bc8aace526c/65dd9eb5aaca434fac4f1c34_License-MIT-blue.svg" alt="License: MIT" inline="yes"></image>
</ulink> <ulink url="https://visualstudio.microsoft.com"><image type="html" name="https://badgen.net/badge/icon/VS%20Code?icon=visualstudio&amp;label=edited%20with" alt="Edited with VS Code" inline="yes"></image>
</ulink> <ulink url="https://platformio.org/"><image type="html" name="https://img.shields.io/badge/build%20with-PlatformIO-orange?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMjUwMCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PHBhdGggZD0iTTEyOCAwQzkzLjgxIDAgNjEuNjY2IDEzLjMxNCAzNy40OSAzNy40OSAxMy4zMTQgNjEuNjY2IDAgOTMuODEgMCAxMjhjMCAzNC4xOSAxMy4zMTQgNjYuMzM0IDM3LjQ5IDkwLjUxQzYxLjY2NiAyNDIuNjg2IDkzLjgxIDI1NiAxMjggMjU2YzM0LjE5IDAgNjYuMzM0LTEzLjMxNCA5MC41MS0zNy40OUMyNDIuNjg2IDE5NC4zMzQgMjU2IDE2Mi4xOSAyNTYgMTI4YzAtMzQuMTktMTMuMzE0LTY2LjMzNC0zNy40OS05MC41MUMxOTQuMzM0IDEzLjMxNCAxNjIuMTkgMCAxMjggMCIgZmlsbD0iI0ZGN0YwMCIvPjxwYXRoIGQ9Ik0yNDkuMzg2IDEyOGMwIDY3LjA0LTU0LjM0NyAxMjEuMzg2LTEyMS4zODYgMTIxLjM4NkM2MC45NiAyNDkuMzg2IDYuNjEzIDE5NS4wNCA2LjYxMyAxMjggNi42MTMgNjAuOTYgNjAuOTYgNi42MTQgMTI4IDYuNjE0YzY3LjA0IDAgMTIxLjM4NiA1NC4zNDYgMTIxLjM4NiAxMjEuMzg2IiBmaWxsPSIjRkZGIi8+PHBhdGggZD0iTTE2MC44NjkgNzQuMDYybDUuMTQ1LTE4LjUzN2M1LjI2NC0uNDcgOS4zOTItNC44ODYgOS4zOTItMTAuMjczIDAtNS43LTQuNjItMTAuMzItMTAuMzItMTAuMzJzLTEwLjMyIDQuNjItMTAuMzIgMTAuMzJjMCAzLjc1NSAyLjAxMyA3LjAzIDUuMDEgOC44MzdsLTUuMDUgMTguMTk1Yy0xNC40MzctMy42Ny0yNi42MjUtMy4zOS0yNi42MjUtMy4zOWwtMi4yNTggMS4wMXYxNDAuODcybDIuMjU4Ljc1M2MxMy42MTQgMCA3My4xNzctNDEuMTMzIDczLjMyMy04NS4yNyAwLTMxLjYyNC0yMS4wMjMtNDUuODI1LTQwLjU1NS01Mi4xOTd6TTE0Ni41MyAxNjQuOGMtMTEuNjE3LTE4LjU1Ny02LjcwNi02MS43NTEgMjMuNjQzLTY3LjkyNSA4LjMyLTEuMzMzIDE4LjUwOSA0LjEzNCAyMS41MSAxNi4yNzkgNy41ODIgMjUuNzY2LTM3LjAxNSA2MS44NDUtNDUuMTUzIDUxLjY0NnptMTguMjE2LTM5Ljc1MmE5LjM5OSA5LjM5OSAwIDAgMC05LjM5OSA5LjM5OSA5LjM5OSA5LjM5OSAwIDAgMCA5LjQgOS4zOTkgOS4zOTkgOS4zOTkgMCAwIDAgOS4zOTgtOS40IDkuMzk5IDkuMzk5IDAgMCAwLTkuMzk5LTkuMzk4em0yLjgxIDguNjcyYTIuMzc0IDIuMzc0IDAgMSAxIDAtNC43NDkgMi4zNzQgMi4zNzQgMCAwIDEgMCA0Ljc0OXoiIGZpbGw9IiNFNTcyMDAiLz48cGF0aCBkPSJNMTAxLjM3MSA3Mi43MDlsLTUuMDIzLTE4LjkwMWMyLjg3NC0xLjgzMiA0Ljc4Ni01LjA0IDQuNzg2LTguNzAxIDAtNS43LTQuNjItMTAuMzItMTAuMzItMTAuMzItNS42OTkgMC0xMC4zMTkgNC42Mi0xMC4zMTkgMTAuMzIgMCA1LjY4MiA0LjU5MiAxMC4yODkgMTAuMjY3IDEwLjMxN0w5NS44IDc0LjM3OGMtMTkuNjA5IDYuNTEtNDAuODg1IDIwLjc0Mi00MC44ODUgNTEuODguNDM2IDQ1LjAxIDU5LjU3MiA4NS4yNjcgNzMuMTg2IDg1LjI2N1Y2OC44OTJzLTEyLjI1Mi0uMDYyLTI2LjcyOSAzLjgxN3ptMTAuMzk1IDkyLjA5Yy04LjEzOCAxMC4yLTUyLjczNS0yNS44OC00NS4xNTQtNTEuNjQ1IDMuMDAyLTEyLjE0NSAxMy4xOS0xNy42MTIgMjEuNTExLTE2LjI4IDMwLjM1IDYuMTc1IDM1LjI2IDQ5LjM2OSAyMy42NDMgNjcuOTI2em0tMTguODItMzkuNDZhOS4zOTkgOS4zOTkgMCAwIDAtOS4zOTkgOS4zOTggOS4zOTkgOS4zOTkgMCAwIDAgOS40IDkuNCA5LjM5OSA5LjM5OSAwIDAgMCA5LjM5OC05LjQgOS4zOTkgOS4zOTkgMCAwIDAtOS4zOTktOS4zOTl6bS0yLjgxIDguNjcxYTIuMzc0IDIuMzc0IDAgMSAxIDAtNC43NDggMi4zNzQgMi4zNzQgMCAwIDEgMCA0Ljc0OHoiIGZpbGw9IiNGRjdGMDAiLz48L3N2Zz4=" alt="Build with PlatformIO" inline="yes"></image>
</ulink> <ulink url="https://shields.io/"><image type="html" name="https://img.shields.io/badge/Framework-ESP_IDF-red.svg" alt="Framework" inline="yes"></image>
</ulink> <ulink url="https://shields.io/"><image type="html" name="https://img.shields.io/badge/Language-C-navy.svg" alt="Language" inline="yes"></image>
</ulink> <ulink url="https://registry.platformio.org/libraries/k0i05/esp_sgp4x"><image type="html" name="https://badges.registry.platformio.org/packages/k0i05/library/esp_sgp4x.svg" alt="PlatformIO Registry" inline="yes"></image>
</ulink> <ulink url="https://components.espressif.com/components/k0i05/esp_sgp4x"><image type="html" name="https://components.espressif.com/components/k0i05/esp_sgp4x/badge.svg" alt="ESP Component Registry" inline="yes"></image>
</ulink></para>
<para>This ESP32 espressif IoT development framework (esp-idf) i2c peripheral driver was developed for the Sensirion SGP4X series of sensors (SGP40 and SGP41). Information on features and functionality are documented and can be found in the <computeroutput><ref refid="sgp4x_8h" kindref="compound">sgp4x.h</ref></computeroutput> header file and in the <computeroutput>documentation</computeroutput> folder.</para>
<sect1 id="C:/Users/lavco/OneDrive/Documents/PlatformIO/Projects/ESP32-S3_ESP-IDF_COMPONENTS/components/peripherals/i2c/esp_sgp4x/README.md_1autotoc_md74">
<title>Repository</title><para>The component is hosted on github and is located here: <ulink url="https://github.com/K0I05/ESP32-S3_ESP-IDF_COMPONENTS/tree/main/components/peripherals/i2c/esp_sgp4x">https://github.com/K0I05/ESP32-S3_ESP-IDF_COMPONENTS/tree/main/components/peripherals/i2c/esp_sgp4x</ulink></para>
</sect1>
<sect1 id="C:/Users/lavco/OneDrive/Documents/PlatformIO/Projects/ESP32-S3_ESP-IDF_COMPONENTS/components/peripherals/i2c/esp_sgp4x/README.md_1autotoc_md75">
<title>General Usage</title><para>To get started, simply copy the component to your project&apos;s <computeroutput>components</computeroutput> folder and reference the <computeroutput><ref refid="sgp4x_8h" kindref="compound">sgp4x.h</ref></computeroutput> header file as an include. The component includes documentation for the peripheral such as the datasheet, application notes, and/or user manual where applicable.</para>
<para>The SGP40 is not fully implemented, support for the SGP40 will be revisited once a sensor is available to test with.</para>
<para><programlisting filename=".text"><codeline><highlight class="normal">components</highlight></codeline>
<codeline><highlight class="normal">└──<sp/>esp_sgp4x</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>CMakeLists.txt</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>README.md</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>LICENSE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>idf_component.yml</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>library.json</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>documentation</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>│<sp/><sp/><sp/>└──<sp/>datasheets,<sp/>etc.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>├──<sp/>include</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>│<sp/><sp/><sp/>└──<sp/>sgp4x_version.h</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>│<sp/><sp/><sp/>└──<sp/>sgp4x.h</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>└──<sp/>sgp4x.c</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="C:/Users/lavco/OneDrive/Documents/PlatformIO/Projects/ESP32-S3_ESP-IDF_COMPONENTS/components/peripherals/i2c/esp_sgp4x/README.md_1autotoc_md76">
<title>Basic Example</title><para>Once a driver instance is instantiated the sensor is ready for usage as shown in the below example. This basic implementation of the driver utilizes default configuration settings and makes a measurement request from the sensor at user defined interval and prints the results.</para>
<para><programlisting filename=".c"><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sgp4x_8h" kindref="compound">sgp4x.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensirion_gas_index_algorithm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>i2c0_sgp4x_task(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>xLastWakeTime<sp/>variable<sp/>with<sp/>the<sp/>current<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_wake_time<sp/><sp/><sp/>=<sp/>xTaskGetTickCount<sp/>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>i2c<sp/>device<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsgp4x__config__t" kindref="compound">sgp4x_config_t</ref><sp/>dev_cfg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>I2C_SGP41_CONFIG_DEFAULT;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1gac40d2deb3fe0027ff3588c50d583b0cd" kindref="member">sgp4x_handle_t</ref><sp/>dev_hdl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_self_tested<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_conditioned<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>gas<sp/>index<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_gas_index_algorithm_params" kindref="compound">GasIndexAlgorithmParams</ref><sp/>voc_params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>GasIndexAlgorithm_init(&amp;voc_params,<sp/>GasIndexAlgorithm_ALGORITHM_TYPE_VOC);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_gas_index_algorithm_params" kindref="compound">GasIndexAlgorithmParams</ref><sp/>nox_params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>GasIndexAlgorithm_init(&amp;nox_params,<sp/>GasIndexAlgorithm_ALGORITHM_TYPE_NOX);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga0bec60b8c1ab24e8061a1d6dadeed8fc" kindref="member">sgp4x_init</ref>(i2c0_bus_hdl,<sp/>&amp;dev_cfg,<sp/>&amp;dev_hdl);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev_hdl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;sgp4x<sp/>handle<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(dev_hdl);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>task<sp/>loop<sp/>entry<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;;<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;########################<sp/>SGP4X<sp/>-<sp/>START<sp/>#########################&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dev_self_tested<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sgp4x_self_test_result_t<sp/>self_test_result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_t<sp/>result<sp/>=<sp/><ref refid="group__drivers_1ga74a5a683b3490a8aaf03b03539929fae" kindref="member">sgp4x_execute_self_test</ref>(dev_hdl,<sp/>&amp;self_test_result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;sgp4x<sp/>device<sp/>self-test<sp/>failed<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(result));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;VOC<sp/>Pixel:<sp/><sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/>self_test_result.pixels.voc_pixel_failed);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;NOX<sp/>Pixel:<sp/><sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/>self_test_result.pixels.nox_pixel_failed);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_self_tested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dev_conditioned<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>sraw_voc;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_t<sp/>result<sp/>=<sp/><ref refid="group__drivers_1ga12f002286cb3e1a07ee467160febf165" kindref="member">sgp4x_execute_conditioning</ref>(dev_hdl,<sp/>&amp;sraw_voc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;sgp4x<sp/>device<sp/>conditioning<sp/>failed<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(result));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;SRAW<sp/>VOC:<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>sraw_voc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));<sp/></highlight><highlight class="comment">//<sp/>1-second<sp/>*<sp/>10<sp/>iterations<sp/>=<sp/>10-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_conditioned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>sraw_voc;<sp/>uint16_t<sp/>sraw_nox;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>voc_index;<sp/>int32_t<sp/>nox_index;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_t<sp/>result<sp/>=<sp/><ref refid="group__drivers_1ga4efe02574e8280c6d1f75e5d67c1c282" kindref="member">sgp4x_measure_signals</ref>(dev_hdl,<sp/>&amp;sraw_voc,<sp/>&amp;sraw_nox);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;sgp4x<sp/>device<sp/>conditioning<sp/>failed<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(result));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GasIndexAlgorithm_process(&amp;voc_params,<sp/>sraw_voc,<sp/>&amp;voc_index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GasIndexAlgorithm_process(&amp;nox_params,<sp/>sraw_nox,<sp/>&amp;nox_index);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;SRAW<sp/>VOC:<sp/>%u<sp/>|<sp/>VOC<sp/>Index:<sp/>%li&quot;</highlight><highlight class="normal">,<sp/>sraw_voc,<sp/>voc_index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;SRAW<sp/>NOX:<sp/>%u<sp/>|<sp/>NOX<sp/>Index:<sp/>%li&quot;</highlight><highlight class="normal">,<sp/>sraw_nox,<sp/>nox_index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(APP_TAG,<sp/></highlight><highlight class="stringliteral">&quot;########################<sp/>SGP4X<sp/>-<sp/>END<sp/>###########################&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pause<sp/>the<sp/>task<sp/>per<sp/>defined<sp/>wait<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelaySecUntil(<sp/>&amp;last_wake_time,<sp/>I2C0_TASK_SAMPLING_RATE<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1gad0cd93f1a86d46ac471b1266854ad781" kindref="member">sgp4x_delete</ref>(<sp/>dev_hdl<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelete(<sp/>NULL<sp/>);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>) </para>
</sect1>
    </detaileddescription>
    <location file="components/peripherals/i2c/esp_sgp4x/"/>
  </compounddef>
</doxygen>
