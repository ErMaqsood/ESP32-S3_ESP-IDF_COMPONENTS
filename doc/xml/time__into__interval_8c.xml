<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="time__into__interval_8c" kind="file" language="C++">
    <compoundname>time_into_interval.c</compoundname>
    <includes refid="time__into__interval_8h" local="yes">include/time_into_interval.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">sdkconfig.h</includes>
    <includes local="no">esp_types.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <includes local="no">freertos/semphr.h</includes>
    <incdepgraph>
      <node id="2">
        <label>include/time_into_interval.h</label>
        <link refid="time__into__interval_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>time_into_interval_version.h</label>
        <link refid="time__into__interval__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/schedule/esp_time_into_interval/time_into_interval.c</label>
        <link refid="time__into__interval_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>esp_check.h</label>
      </node>
      <node id="7">
        <label>esp_err.h</label>
      </node>
      <node id="16">
        <label>esp_log.h</label>
      </node>
      <node id="18">
        <label>esp_timer.h</label>
      </node>
      <node id="15">
        <label>esp_types.h</label>
      </node>
      <node id="8">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="10">
        <label>freertos/semphr.h</label>
      </node>
      <node id="9">
        <label>freertos/task.h</label>
      </node>
      <node id="14">
        <label>sdkconfig.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>sys/time.h</label>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="time__into__interval_8c_1a1f1a143a1b2946d03351d8a5b42270d3" prot="public" static="no">
        <name>TIME_INTO_INTERVAL_NAME_MAX_LEN</name>
        <initializer>(25)</initializer>
        <briefdescription>
<para>25-characters for user-defined time-into-interval name </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/schedule/esp_time_into_interval/time_into_interval.c" line="49" column="9" bodyfile="components/schedule/esp_time_into_interval/time_into_interval.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="time__into__interval_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/schedule/esp_time_into_interval/time_into_interval.c" line="54" column="9" bodyfile="components/schedule/esp_time_into_interval/time_into_interval.c" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="time__into__interval_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;time_into_interval&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/schedule/esp_time_into_interval/time_into_interval.c" line="59" column="19" bodyfile="components/schedule/esp_time_into_interval/time_into_interval.c" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="time__into__interval_8c_1a36d2f3800d34ce317f6aed8e40eb991f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t time_into_interval_get_hash_code</definition>
        <argsstring>(void)</argsstring>
        <name>time_into_interval_get_hash_code</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets a 16-bit hash-code utilizing epoch timestamp as the seed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint16_t 16-bit hash-code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/schedule/esp_time_into_interval/time_into_interval.c" line="67" column="24" bodyfile="components/schedule/esp_time_into_interval/time_into_interval.c" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="time__into__interval_8c_1a8c98808eaba5f00f6f0393f41a1e02ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void time_into_interval_init_next_tm</definition>
        <argsstring>(const time_into_interval_types_t interval_type, const uint64_t interval_period_msec, const struct tm now_tm, struct tm *next_tm)</argsstring>
        <name>time_into_interval_init_next_tm</name>
        <param>
          <type>const <ref refid="group___free_r_t_o_s_1gad0a6a2a318069e1eb5bb480541532a4d" kindref="member">time_into_interval_types_t</ref></type>
          <declname>interval_type</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>interval_period_msec</declname>
        </param>
        <param>
          <type>const struct tm</type>
          <declname>now_tm</declname>
        </param>
        <param>
          <type>struct tm *</type>
          <declname>next_tm</declname>
        </param>
        <briefdescription>
<para>Initializes the next tm structure time-parts based on interval-type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">interval_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Time into interval type (seconds, minutes, hours, etc.). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interval_period_msec</parametername>
</parameternamelist>
<parameterdescription>
<para>Time into interval period in milliseconds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">now_tm</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time tm structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">next_tm</parametername>
</parameternamelist>
<parameterdescription>
<para>Next time tm structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/schedule/esp_time_into_interval/time_into_interval.c" line="80" column="20" bodyfile="components/schedule/esp_time_into_interval/time_into_interval.c" bodystart="80" bodyend="131"/>
      </memberdef>
      <member refid="group___free_r_t_o_s_1ga8839638585a6027c6b6004269ce33332" kind="function"><name>time_into_interval_normalize_interval_to_sec</name></member>
      <member refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kind="function"><name>time_into_interval_normalize_interval_to_msec</name></member>
      <member refid="group___free_r_t_o_s_1ga982c2457f6151d440ce678d7cfcbc6e9" kind="function"><name>time_into_interval_get_epoch_timestamp</name></member>
      <member refid="group___free_r_t_o_s_1ga19bb96065ad640e8015b423a6ddb5203" kind="function"><name>time_into_interval_get_epoch_timestamp_msec</name></member>
      <member refid="group___free_r_t_o_s_1ga6522ff46a3f8f569a093fbe0c843e733" kind="function"><name>time_into_interval_get_epoch_timestamp_usec</name></member>
      <member refid="group___free_r_t_o_s_1ga5a8f66c96d678209be13d05551e03b41" kind="function"><name>time_into_interval_set_epoch_timestamp_event</name></member>
      <member refid="group___free_r_t_o_s_1gaea97dc6faeb6a62d513f1770a047e84f" kind="function"><name>time_into_interval_init</name></member>
      <member refid="group___free_r_t_o_s_1gad8797044bf62fb81d63b0641eb69d0d0" kind="function"><name>time_into_interval</name></member>
      <member refid="group___free_r_t_o_s_1gaff5bdae2635f1eef5f2a5b2b4f15ed70" kind="function"><name>time_into_interval_delay</name></member>
      <member refid="group___free_r_t_o_s_1ga67a2453e7554521bf2433e6c7dc97d89" kind="function"><name>time_into_interval_get_last_event</name></member>
      <member refid="group___free_r_t_o_s_1gaf78af531a43da234d76d18bd625e2f61" kind="function"><name>time_into_interval_delete</name></member>
      <member refid="group___free_r_t_o_s_1ga2c01efdfcdc21973ae44337092dd43d9" kind="function"><name>time_into_interval_get_fw_version</name></member>
      <member refid="group___free_r_t_o_s_1ga6e7164d22748e5d4e5a486a2679ba124" kind="function"><name>time_into_interval_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF FreeRTOS task extension</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="time__into__interval_8h" kindref="compound">include/time_into_interval.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdkconfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/semphr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIME_INTO_INTERVAL_NAME_MAX_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(25)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;time_into_interval&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>time_into_interval_get_hash_code(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>seed_hash<sp/>=<sp/>(uint16_t)<ref refid="group___free_r_t_o_s_1ga982c2457f6151d440ce678d7cfcbc6e9" kindref="member">time_into_interval_get_epoch_timestamp</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((seed_hash&gt;&gt;16)<sp/>^<sp/>seed_hash)<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_into_interval_init_next_tm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1gad0a6a2a318069e1eb5bb480541532a4d" kindref="member">time_into_interval_types_t</ref><sp/>interval_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>interval_period_msec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>now_tm,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>*next_tm)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>out_tm;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>next<sp/>tm<sp/>structure<sp/>time-parts<sp/>localtime<sp/>based<sp/>on<sp/>interval-type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(interval_type)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03eaebd695763de7ab8ba195c5714c94248b" kindref="member">TIME_INTO_INTERVAL_SEC</ref>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_year<sp/>=<sp/>now_tm.tm_year;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mon<sp/><sp/>=<sp/>now_tm.tm_mon;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mday<sp/>=<sp/>now_tm.tm_mday;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_hour<sp/>=<sp/>now_tm.tm_hour;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_min<sp/><sp/>=<sp/>now_tm.tm_min;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_sec<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03ea2c749b9f8d47709452ae742faac5b425" kindref="member">TIME_INTO_INTERVAL_MIN</ref>:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_year<sp/>=<sp/>now_tm.tm_year;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mon<sp/><sp/>=<sp/>now_tm.tm_mon;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mday<sp/>=<sp/>now_tm.tm_mday;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_hour<sp/>=<sp/>now_tm.tm_hour;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_min<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_sec<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03ea9d879915b4d045c4ada8b90c4001eb04" kindref="member">TIME_INTO_INTERVAL_HR</ref>:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_year<sp/>=<sp/>now_tm.tm_year;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mon<sp/><sp/>=<sp/>now_tm.tm_mon;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mday<sp/>=<sp/>now_tm.tm_mday;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_hour<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_min<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_sec<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>interval<sp/>period<sp/>by<sp/>tm<sp/>structure<sp/>time-part<sp/>timespan<sp/>exceedance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interval_period_msec<sp/>&gt;<sp/>(60U<sp/>*<sp/>1000U))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>over<sp/>60-seconds,<sp/>set<sp/>minute<sp/>time-part<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_min<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_sec<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interval_period_msec<sp/>&gt;<sp/>(60U<sp/>*<sp/>60U<sp/>*<sp/>1000U))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>over<sp/>60-minutes,<sp/>set<sp/>hour<sp/>time-part<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_hour<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_min<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_sec<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interval_period_msec<sp/>&gt;<sp/>(24U<sp/>*<sp/>60U<sp/>*<sp/>60U<sp/>*<sp/>1000U))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>over<sp/>24-hours,<sp/>set<sp/>day<sp/>time-part<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_mday<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_hour<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_min<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_tm.tm_sec<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>*next_tm<sp/>=<sp/>out_tm;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">uint64_t<sp/><ref refid="group___free_r_t_o_s_1ga8839638585a6027c6b6004269ce33332" kindref="member">time_into_interval_normalize_interval_to_sec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1gad0a6a2a318069e1eb5bb480541532a4d" kindref="member">time_into_interval_types_t</ref><sp/>interval_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>interval)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>interval_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>interval<sp/>to<sp/>sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(interval_type)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03eaebd695763de7ab8ba195c5714c94248b" kindref="member">TIME_INTO_INTERVAL_SEC</ref>:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval_sec<sp/>=<sp/>interval;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03ea2c749b9f8d47709452ae742faac5b425" kindref="member">TIME_INTO_INTERVAL_MIN</ref>:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval_sec<sp/>=<sp/>(interval<sp/>*<sp/>60U);<sp/><sp/></highlight><highlight class="comment">//<sp/>1-minute<sp/>has<sp/>60-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03ea9d879915b4d045c4ada8b90c4001eb04" kindref="member">TIME_INTO_INTERVAL_HR</ref>:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval_sec<sp/>=<sp/>(interval<sp/>*<sp/>(60U<sp/>*<sp/>60U));<sp/></highlight><highlight class="comment">//<sp/>1-hour<sp/>has<sp/>60-minutes,<sp/>1-minute<sp/>has<sp/>60-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interval_sec;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">uint64_t<sp/><ref refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kindref="member">time_into_interval_normalize_interval_to_msec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1gad0a6a2a318069e1eb5bb480541532a4d" kindref="member">time_into_interval_types_t</ref><sp/>interval_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>interval)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>interval_msec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>interval<sp/>to<sp/>sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(interval_type)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03eaebd695763de7ab8ba195c5714c94248b" kindref="member">TIME_INTO_INTERVAL_SEC</ref>:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval_msec<sp/>=<sp/>interval<sp/>*<sp/>1000U;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03ea2c749b9f8d47709452ae742faac5b425" kindref="member">TIME_INTO_INTERVAL_MIN</ref>:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval_msec<sp/>=<sp/>(interval<sp/>*<sp/>60U)<sp/>*<sp/>1000U;<sp/></highlight><highlight class="comment">//<sp/>1-minute<sp/>has<sp/>60-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ggada504a9c0f0f4dfe0f199664315cf03ea9d879915b4d045c4ada8b90c4001eb04" kindref="member">TIME_INTO_INTERVAL_HR</ref>:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval_msec<sp/>=<sp/>((interval<sp/>*<sp/>60U)<sp/>*<sp/>60U)<sp/>*<sp/>1000U;<sp/></highlight><highlight class="comment">//<sp/>1-hour<sp/>has<sp/>60-minutes,<sp/>1-minute<sp/>has<sp/>60-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interval_msec;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">uint64_t<sp/><ref refid="group___free_r_t_o_s_1ga982c2457f6151d440ce678d7cfcbc6e9" kindref="member">time_into_interval_get_epoch_timestamp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>current<sp/>time<sp/>as<sp/>&apos;struct<sp/>timeval&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>https://linux.die.net/man/2/gettimeofday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv_utc_timestamp;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>unix<sp/>utc<sp/>timestamp<sp/>and<sp/>validate<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gettimeofday(&amp;tv_utc_timestamp,<sp/>NULL)<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>unix<sp/>epoch<sp/>utc<sp/>timestamp<sp/>and<sp/>convert<sp/>to<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint64_t)tv_utc_timestamp.tv_sec;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">uint64_t<sp/><ref refid="group___free_r_t_o_s_1ga19bb96065ad640e8015b423a6ddb5203" kindref="member">time_into_interval_get_epoch_timestamp_msec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>current<sp/>time<sp/>as<sp/>&apos;struct<sp/>timeval&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>https://linux.die.net/man/2/gettimeofday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv_utc_timestamp;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>unix<sp/>utc<sp/>timestamp<sp/>and<sp/>validate<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gettimeofday(&amp;tv_utc_timestamp,<sp/>NULL)<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>unix<sp/>epoch<sp/>utc<sp/>timestamp<sp/>and<sp/>convert<sp/>to<sp/>milli-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint64_t)tv_utc_timestamp.tv_sec<sp/>*<sp/>1000U<sp/>+<sp/>(uint64_t)tv_utc_timestamp.tv_usec<sp/>/<sp/>1000U;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">uint64_t<sp/><ref refid="group___free_r_t_o_s_1ga6522ff46a3f8f569a093fbe0c843e733" kindref="member">time_into_interval_get_epoch_timestamp_usec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>current<sp/>time<sp/>as<sp/>&apos;struct<sp/>timeval&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>https://linux.die.net/man/2/gettimeofday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv_utc_timestamp;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>unix<sp/>utc<sp/>timestamp<sp/>and<sp/>validate<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gettimeofday(&amp;tv_utc_timestamp,<sp/>NULL)<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>unix<sp/>epoch<sp/>utc<sp/>timestamp<sp/>and<sp/>convert<sp/>to<sp/>micro-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint64_t)tv_utc_timestamp.tv_sec<sp/>*<sp/>1000000U<sp/>+<sp/>(uint64_t)tv_utc_timestamp.tv_usec;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">esp_err_t<sp/><ref refid="group___free_r_t_o_s_1ga5a8f66c96d678209be13d05551e03b41" kindref="member">time_into_interval_set_epoch_timestamp_event</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1gad0a6a2a318069e1eb5bb480541532a4d" kindref="member">time_into_interval_types_t</ref><sp/>interval_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>interval_period,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>interval_offset,<sp/>uint64_t<sp/>*epoch_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/><sp/>now_tv;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>now_tm;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_tm;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>interval<sp/>period<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/>(interval_period<sp/>&gt;<sp/>0),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;interval<sp/>period<sp/>cannot<sp/>be<sp/>0,<sp/>time-into-interval<sp/>set<sp/>epoch<sp/>time<sp/>event<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normalize<sp/>interval<sp/>period<sp/>and<sp/>offset<sp/>to<sp/>milli-seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>interval_period_msec<sp/>=<sp/><ref refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kindref="member">time_into_interval_normalize_interval_to_msec</ref>(interval_type,<sp/>interval_period);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>interval_offset_msec<sp/>=<sp/><ref refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kindref="member">time_into_interval_normalize_interval_to_msec</ref>(interval_type,<sp/>interval_offset);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>interval<sp/>period<sp/>argument<sp/>on<sp/>total<sp/>days<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/>(interval_period_msec<sp/>&lt;=<sp/>(28U<sp/>*<sp/>24U<sp/>*<sp/>60U<sp/>*<sp/>60U<sp/>*<sp/>1000U)),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;interval<sp/>period<sp/>cannot<sp/>be<sp/>greater<sp/>than<sp/>28-days,<sp/>time-into-interval<sp/>set<sp/>epoch<sp/>time<sp/>event<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>period<sp/>and<sp/>offset<sp/>intervals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/>((interval_period_msec<sp/>-<sp/>interval_offset_msec)<sp/>&gt;<sp/>0),<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;interval<sp/>period<sp/>must<sp/>be<sp/>larger<sp/>than<sp/>the<sp/>interval<sp/>offset,<sp/>time-into-interval<sp/>set<sp/>epoch<sp/>time<sp/>event<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>system<sp/>unix<sp/>epoch<sp/>time<sp/>(gmt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;now_tv,<sp/>NULL);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>system<sp/>unix<sp/>time<sp/>(seconds<sp/>and<sp/>milli-seconds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>now_unix_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>now_tv.tv_sec;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>now_unix_time_msec<sp/>=<sp/>(uint64_t)now_tv.tv_sec<sp/>*<sp/>1000U<sp/>+<sp/>(uint64_t)now_tv.tv_usec<sp/>/<sp/>1000U;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>now<sp/>tm<sp/>to<sp/>time-parts<sp/>localtime<sp/>from<sp/>unix<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>localtime_r(&amp;now_unix_time,<sp/>&amp;now_tm);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>next<sp/>tm<sp/>structure<sp/>time-parts<sp/>localtime<sp/>based<sp/>on<sp/>interval-type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>time_into_interval_init_next_tm(interval_type,<sp/>interval_period_msec,<sp/>now_tm,<sp/>&amp;next_tm);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>next<sp/>epoch<sp/>time<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>next_unix_time_msec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>last<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*epoch_timestamp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>task<sp/>interval<sp/>to<sp/>next<sp/>task<sp/>event<sp/>epoch<sp/>to<sp/>compute<sp/>next<sp/>task<sp/>event<sp/>epoch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_unix_time_msec<sp/>=<sp/>*epoch_timestamp<sp/>+<sp/>interval_period_msec;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>delta<sp/>between<sp/>now<sp/>and<sp/>next<sp/>unix<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>delta_time_msec<sp/>=<sp/>next_unix_time_msec<sp/>-<sp/>now_unix_time_msec;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>next<sp/>task<sp/>event<sp/>is<sp/>ahead<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta_time_msec<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_unix_time_msec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>next<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(next_unix_time_msec<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>unix<sp/>time<sp/>to<sp/>milli-seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_unix_time_msec<sp/>=<sp/>mktime(&amp;next_tm)<sp/>*<sp/>1000U;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>next<sp/>unix<sp/>time<sp/>by<sp/>adding<sp/>the<sp/>task<sp/>event<sp/>interval<sp/>period<sp/>and<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_unix_time_msec<sp/>=<sp/>next_unix_time_msec<sp/>+<sp/>interval_period_msec<sp/>+<sp/>interval_offset_msec;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>delta<sp/>between<sp/>now<sp/>and<sp/>next<sp/>unix<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>delta_time_msec<sp/>=<sp/>next_unix_time_msec<sp/>-<sp/>now_unix_time_msec;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>next<sp/>task<sp/>event<sp/>is<sp/>ahead<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta_time_msec<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>task<sp/>event<sp/>is<sp/>not<sp/>ahead<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>adding<sp/>task<sp/>event<sp/>intervals<sp/>until<sp/>next<sp/>task<sp/>event<sp/>is<sp/>ahead<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_unix_time_msec<sp/>=<sp/>next_unix_time_msec<sp/>+<sp/>interval_period_msec;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>delta<sp/>between<sp/>now<sp/>and<sp/>next<sp/>unix<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_time_msec<sp/>=<sp/>next_unix_time_msec<sp/>-<sp/>now_unix_time_msec;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(delta_time_msec<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>next<sp/>task<sp/>event<sp/>epoch<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>*epoch_timestamp<sp/>=<sp/>next_unix_time_msec;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">esp_err_t<sp/><ref refid="group___free_r_t_o_s_1gaea97dc6faeb6a62d513f1770a047e84f" kindref="member">time_into_interval_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1ga6e978e77c6c540b23118c566330e5c98" kindref="member">time_into_interval_config_t</ref><sp/>*time_into_interval_config,<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref><sp/>*time_into_interval_handle)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>task-schedule<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>(strnlen(time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/><ref refid="time__into__interval_8c_1a1f1a143a1b2946d03351d8a5b42270d3" kindref="member">TIME_INTO_INTERVAL_NAME_MAX_LEN</ref><sp/>+<sp/>1)<sp/>&lt;<sp/><ref refid="time__into__interval_8c_1a1f1a143a1b2946d03351d8a5b42270d3" kindref="member">TIME_INTO_INTERVAL_NAME_MAX_LEN</ref>),<sp/>ESP_ERR_INVALID_ARG,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;time-into-interval<sp/>name<sp/>cannot<sp/>exceed<sp/>20-characters,<sp/>time-into-interval<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>(time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref><sp/>&gt;<sp/>0),<sp/>ESP_ERR_INVALID_ARG,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;time-into-interval<sp/>interval<sp/>period<sp/>cannot<sp/>be<sp/>0,<sp/>time-into-interval<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>period<sp/>and<sp/>offset<sp/>intervals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>interval_delta<sp/>=<sp/><ref refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kindref="member">time_into_interval_normalize_interval_to_msec</ref>(time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/>time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>)<sp/>-<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kindref="member">time_into_interval_normalize_interval_to_msec</ref>(time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/>time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref>);<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>(interval_delta<sp/>&gt;<sp/>0),<sp/>ESP_ERR_INVALID_ARG,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;time-into-interval<sp/>interval<sp/>period<sp/>must<sp/>be<sp/>larger<sp/>than<sp/>the<sp/>interval<sp/>offset,<sp/>time-into-interval<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>time<sp/>into<sp/>interval<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtime__into__interval__t" kindref="compound">time_into_interval_t</ref>));<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(<sp/>out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>time-into-interval<sp/>handle,<sp/>time-into-interval<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>task<sp/>schedule<sp/>state<sp/>object<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref><sp/><sp/><sp/>=<sp/>time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref><sp/>=<sp/>time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref><sp/>=<sp/>time_into_interval_config-&gt;<ref refid="structtime__into__interval__config__tag_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a0a1d9d7263f576adb1f197ef6b817614" kindref="member">hash_code</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>time_into_interval_get_hash_code();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref><sp/><sp/><sp/><sp/>=<sp/>xSemaphoreCreateMutex();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>epoch<sp/>timestamp<sp/>of<sp/>the<sp/>next<sp/>scheduled<sp/>time-into-interval<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group___free_r_t_o_s_1ga5a8f66c96d678209be13d05551e03b41" kindref="member">time_into_interval_set_epoch_timestamp_event</ref>(out_handle-&gt;<ref refid="structtime__into__interval__t_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structtime__into__interval__t_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref>,<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;out_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref>),<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_out_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>set<sp/>epoch<sp/>timestamp,<sp/>time-into-interval<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>*time_into_interval_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>err_out_handle:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___free_r_t_o_s_1gad8797044bf62fb81d63b0641eb69d0d0" kindref="member">time_into_interval</ref>(<ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref><sp/>time_into_interval_handle)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(time_into_interval_handle))<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreTake(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>,<sp/>portMAX_DELAY);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>system<sp/>unix<sp/>epoch<sp/>timestamp<sp/>(UTC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>now_unix_msec<sp/>=<sp/><ref refid="group___free_r_t_o_s_1ga19bb96065ad640e8015b423a6ddb5203" kindref="member">time_into_interval_get_epoch_timestamp_msec</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>time<sp/>delta<sp/>until<sp/>next<sp/>time<sp/>into<sp/>interval<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>delta_msec<sp/>=<sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref><sp/>-<sp/>now_unix_msec;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>time<sp/>delta,<sp/>when<sp/>delta<sp/>is<sp/>&lt;=<sp/>0,<sp/>time<sp/>has<sp/>elapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta_msec<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>time-into-interval<sp/>state<sp/>to<sp/>true<sp/>-<sp/>intervale<sp/>has<sp/>lapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>next<sp/>event<sp/>timestamp<sp/>(UTC)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___free_r_t_o_s_1ga5a8f66c96d678209be13d05551e03b41" kindref="member">time_into_interval_set_epoch_timestamp_event</ref>(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>,<sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref>,<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">esp_err_t<sp/><ref refid="group___free_r_t_o_s_1gaff5bdae2635f1eef5f2a5b2b4f15ed70" kindref="member">time_into_interval_delay</ref>(<ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref><sp/>time_into_interval_handle)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>time_into_interval_handle<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreTake(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>,<sp/>portMAX_DELAY);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>system<sp/>unix<sp/>epoch<sp/>timestamp<sp/>(UTC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>now_unix_msec<sp/>=<sp/><ref refid="group___free_r_t_o_s_1ga19bb96065ad640e8015b423a6ddb5203" kindref="member">time_into_interval_get_epoch_timestamp_msec</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>time<sp/>delta<sp/>until<sp/>next<sp/>scan<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>delta_msec<sp/>=<sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref><sp/>-<sp/>now_unix_msec;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>time<sp/>is<sp/>into<sp/>the<sp/>future,<sp/>otherwise,<sp/>reset<sp/>next<sp/>epoch<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta_msec<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>epoch<sp/>time<sp/>of<sp/>the<sp/>next<sp/>schedule<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>epoch<sp/>timestamp<sp/>of<sp/>the<sp/>next<sp/>scheduled<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___free_r_t_o_s_1ga5a8f66c96d678209be13d05551e03b41" kindref="member">time_into_interval_set_epoch_timestamp_event</ref>(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>,<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref>,<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>time<sp/>delta<sp/>for<sp/>next<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_msec<sp/>=<sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref><sp/>-<sp/>now_unix_msec;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delay<sp/>the<sp/>task<sp/>per<sp/>ticks<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>delta_msec<sp/>/<sp/>portTICK_PERIOD_MS<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreTake(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>,<sp/>portMAX_DELAY);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>epoch<sp/>timestamp<sp/>of<sp/>the<sp/>next<sp/>scheduled<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___free_r_t_o_s_1ga5a8f66c96d678209be13d05551e03b41" kindref="member">time_into_interval_set_epoch_timestamp_event</ref>(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>,<sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5934c7b21109948494861935ee2fda9a" kindref="member">interval_offset</ref>,<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">esp_err_t<sp/><ref refid="group___free_r_t_o_s_1ga67a2453e7554521bf2433e6c7dc97d89" kindref="member">time_into_interval_get_last_event</ref>(<ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref><sp/>time_into_interval_handle,<sp/>uint64_t<sp/>*epoch_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>time_into_interval_handle<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreTake(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>,<sp/>portMAX_DELAY);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>interval<sp/>into<sp/>msec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>interval_msec<sp/>=<sp/><ref refid="group___free_r_t_o_s_1ga4ea58aff92e03e0999e13b9059db560c" kindref="member">time_into_interval_normalize_interval_to_msec</ref>(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1afc1e4351f1556110d518be945051f2ef" kindref="member">interval_type</ref>,<sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a5ad8525a82f3f239e2996a31cf1da9bb" kindref="member">interval_period</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>last<sp/>event<sp/>epoch<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>*epoch_timestamp<sp/>=<sp/>time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a647b79dbf0451b370e22b0165db894e7" kindref="member">epoch_timestamp</ref><sp/>-<sp/>interval_msec;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(time_into_interval_handle-&gt;<ref refid="structtime__into__interval__t_1a6b9fc4bb50387bce7985d23208bd52fe" kindref="member">mutex_handle</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">esp_err_t<sp/><ref refid="group___free_r_t_o_s_1gaf78af531a43da234d76d18bd625e2f61" kindref="member">time_into_interval_delete</ref>(<ref refid="group___free_r_t_o_s_1gaa862ccd8f6519ec10b85b169d3018023" kindref="member">time_into_interval_handle_t</ref><sp/>time_into_interval_handle)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>resource<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time_into_interval_handle)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(time_into_interval_handle);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group___free_r_t_o_s_1ga2c01efdfcdc21973ae44337092dd43d9" kindref="member">time_into_interval_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TIME_INTO_INTERVAL_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">int32_t<sp/><ref refid="group___free_r_t_o_s_1ga6e7164d22748e5d4e5a486a2679ba124" kindref="member">time_into_interval_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TIME_INTO_INTERVAL_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/schedule/esp_time_into_interval/time_into_interval.c"/>
  </compounddef>
</doxygen>
