<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ens160_8c" kind="file" language="C++">
    <compoundname>ens160.c</compoundname>
    <includes refid="ens160_8h" local="yes">include/ens160.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">esp_timer.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <includes local="no">freertos/queue.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/peripherals/i2c/esp_ens160/ens160.c</label>
        <link refid="ens160_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/ens160.h</label>
        <link refid="ens160_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ens160_version.h</label>
        <link refid="ens160__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="15">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="14">
        <label>esp_log.h</label>
      </node>
      <node id="8">
        <label>esp_mac.h</label>
      </node>
      <node id="16">
        <label>esp_timer.h</label>
      </node>
      <node id="17">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="19">
        <label>freertos/queue.h</label>
      </node>
      <node id="18">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="ens160_8c_1a6f205f5d6a2293f43c02ae0eece3abb4" prot="public" static="no">
        <name>ENS160_REG_PART_ID_R</name>
        <initializer>UINT8_C(0x00)</initializer>
        <briefdescription>
<para>ens160 I2C part identifier (default id: 0x01, 0x60) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="47" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1afa8a99be1bec446533b17fd645a695bd" prot="public" static="no">
        <name>ENS160_REG_OPMODE_RW</name>
        <initializer>UINT8_C(0x10)</initializer>
        <briefdescription>
<para>ens160 I2C operating mode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="48" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a42650f883b287bacc642ef83e6911971" prot="public" static="no">
        <name>ENS160_REG_INT_CONFIG_RW</name>
        <initializer>UINT8_C(0x11)</initializer>
        <briefdescription>
<para>ens160 I2C interrupt pin configuration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="49" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ae825fb079b83fc51ee595fb03b365981" prot="public" static="no">
        <name>ENS160_REG_COMMAND_RW</name>
        <initializer>UINT8_C(0x12)</initializer>
        <briefdescription>
<para>ens160 I2C additional system commands </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="50" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ae9bc5d591c9ead6046a6020560f30b79" prot="public" static="no">
        <name>ENS160_REG_TEMP_IN_RW</name>
        <initializer>UINT8_C(0x13)</initializer>
        <briefdescription>
<para>ens160 I2C host ambient temperature information </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="51" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a4e0f1c0de824cb62e2f4a7cb53829164" prot="public" static="no">
        <name>ENS160_REG_RH_IN_RW</name>
        <initializer>UINT8_C(0x15)</initializer>
        <briefdescription>
<para>ens160 I2C host relative humidity information </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="52" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aef982e342c5fbaa31f4ccda47711c1a1" prot="public" static="no">
        <name>ENS160_REG_DEVICE_STATUS_R</name>
        <initializer>UINT8_C(0x20)</initializer>
        <briefdescription>
<para>ens160 I2C operating status </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="53" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a25342e2cb65b1ab3d5e500d3b01c759b" prot="public" static="no">
        <name>ENS160_REG_DATA_AQI_R</name>
        <initializer>UINT8_C(0x21)</initializer>
        <briefdescription>
<para>ens160 I2C air quality index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="54" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1afa58c03250b00d6e1273bd7a4f9540cd" prot="public" static="no">
        <name>ENS160_REG_DATA_TVOC_R</name>
        <initializer>UINT8_C(0x22)</initializer>
        <briefdescription>
<para>ens160 I2C TVOC concentration (ppb) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a3d13c165214a606f8257551f0349072c" prot="public" static="no">
        <name>ENS160_REG_DATA_ETOH_R</name>
        <initializer>UINT8_C(0x22)</initializer>
        <briefdescription>
<para>ens160 I2C ETOH concentration (ppb) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="56" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a39b63db46ff7b36051248d14a7ace09f" prot="public" static="no">
        <name>ENS160_REG_DATA_ECO2_R</name>
        <initializer>UINT8_C(0x24)</initializer>
        <briefdescription>
<para>ens160 I2C equivalent CO2 concentration (ppm) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="57" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ad7e0d9f2c8154e59e42d1b052ca03df0" prot="public" static="no">
        <name>ENS160_REG_DATA_BL_R</name>
        <initializer>UINT8_C(0x28)</initializer>
        <briefdescription>
<para>ens160 I2C baseline information </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="58" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1adb2abf7d5f062e3d23f355823fd0dc88" prot="public" static="no">
        <name>ENS160_REG_DATA_TEMP_R</name>
        <initializer>UINT8_C(0x30)</initializer>
        <briefdescription>
<para>ens160 I2C temperature used in calculations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="59" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a94758999c17d7f2350ca60b80f624f2a" prot="public" static="no">
        <name>ENS160_REG_DATA_RH_R</name>
        <initializer>UINT8_C(0x32)</initializer>
        <briefdescription>
<para>ens160 I2C relative humidity used in calculations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="60" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a4bccc0e8c1b05233fddab7e15ff7767b" prot="public" static="no">
        <name>ENS160_REG_DATA_MISR_R</name>
        <initializer>UINT8_C(0x38)</initializer>
        <briefdescription>
<para>ens160 I2C data integrity field </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="61" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1abf6ca2107e17fc0dc09b5f1e2b61dbf7" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE0_RW</name>
        <initializer>UINT8_C(0x40)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write0 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="62" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aa58caef691026a7b0f5d5863d34b98ef" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE1_RW</name>
        <initializer>UINT8_C(0x41)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write1 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="63" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a7dad400d167861ab2c5550e69d4cac17" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE2_RW</name>
        <initializer>UINT8_C(0x42)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write2 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="64" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ab61a343ac39cd4f463c1050df93fb35a" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE3_RW</name>
        <initializer>UINT8_C(0x43)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write3 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="65" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aa4ce180da4e902de94e62fd5e2dfa798" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE4_RW</name>
        <initializer>UINT8_C(0x44)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write4 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="66" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a80603ce8f23a596a652f9d2b3d17efa1" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE5_RW</name>
        <initializer>UINT8_C(0x45)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write5 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="67" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ad68fd7da4c6e367bc16fe70d9492b92a" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE6_RW</name>
        <initializer>UINT8_C(0x46)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write6 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a44c2736edf6f848f06cc983b029e1d12" prot="public" static="no">
        <name>ENS160_REG_GPR_WRITE7_RW</name>
        <initializer>UINT8_C(0x47)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose write7 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="69" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ae97a3b0849db21242e371b73c01df986" prot="public" static="no">
        <name>ENS160_REG_GPR_READ0_R</name>
        <initializer>UINT8_C(0x48)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read0 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a392840463f61fd96f39ba3e065c23b86" prot="public" static="no">
        <name>ENS160_REG_GPR_READ1_R</name>
        <initializer>UINT8_C(0x49)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read1 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="71" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1acdfe757d55c924fa83cf5ed0e4fdb4a4" prot="public" static="no">
        <name>ENS160_REG_GPR_READ2_R</name>
        <initializer>UINT8_C(0x4a)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read2 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="72" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aba9d22d8b11d33fa7a5e27c90de43c28" prot="public" static="no">
        <name>ENS160_REG_GPR_READ3_R</name>
        <initializer>UINT8_C(0x4b)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read3 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="73" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aa4f2239c39014094a89059f662b44a02" prot="public" static="no">
        <name>ENS160_REG_GPR_READ4_R</name>
        <initializer>UINT8_C(0x4c)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read4 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="74" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ab0d20e2a8931b3460389b418477a53ce" prot="public" static="no">
        <name>ENS160_REG_GPR_READ5_R</name>
        <initializer>UINT8_C(0x4d)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read5 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aa42bec99edc8c957e0a2370c3a7aabb2" prot="public" static="no">
        <name>ENS160_REG_GPR_READ6_R</name>
        <initializer>UINT8_C(0x4e)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read6 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="76" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a1ffb881f1c6940d1870b7a03fa1bd1a4" prot="public" static="no">
        <name>ENS160_REG_GPR_READ7_R</name>
        <initializer>UINT8_C(0x4f)</initializer>
        <briefdescription>
<para>ens160 I2C general purpose read7 register </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="77" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a062268a034662854d6136cc24bd757a5" prot="public" static="no">
        <name>ENS160_TEMPERATURE_MAX</name>
        <initializer>(float)(125.0)</initializer>
        <briefdescription>
<para>ens160 maximum temperature range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="79" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a62c5b739049e938769f7edcf34e7940d" prot="public" static="no">
        <name>ENS160_TEMPERATURE_MIN</name>
        <initializer>(float)(-40.0)</initializer>
        <briefdescription>
<para>ens160 minimum temperature range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="80" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a5d19f149dbfcba7a16e6701b9e1566c2" prot="public" static="no">
        <name>ENS160_HUMIDITY_MAX</name>
        <initializer>(float)(100.0)</initializer>
        <briefdescription>
<para>ens160 maximum humidity range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="81" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a8c71c78497a66d1c55136d904b71d5cd" prot="public" static="no">
        <name>ENS160_HUMIDITY_MIN</name>
        <initializer>(float)(0.0)</initializer>
        <briefdescription>
<para>ens160 minimum humidity range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="82" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a07c3f3784bf29d6d0f60b2fdc1c73b41" prot="public" static="no">
        <name>ENS160_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(15)</initializer>
        <briefdescription>
<para>ens160 50ms delay before making i2c transactions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="84" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a74816e78a7852fe153e60c9280533c26" prot="public" static="no">
        <name>ENS160_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(25)</initializer>
        <briefdescription>
<para>ens160 25ms delay before making a measurement </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="85" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" prot="public" static="no">
        <name>ENS160_CMD_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
<para>ens160 5ms delay before making the next i2c transaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="86" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ac2d1bd2e7e8374fe5b61a01d7ebb1cbe" prot="public" static="no">
        <name>ENS160_MODE_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
<para>ens160 10ms delay when updating the operating mode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="87" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1a31dca31d2ba79375b40c8ce153a69270" prot="public" static="no">
        <name>ENS160_RESET_DELAY_MS</name>
        <initializer>UINT16_C(50)</initializer>
        <briefdescription>
<para>ens160 50ms delay when resetting the device </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="88" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ada5b0cc3d91e567c8143d1076a95d6ee" prot="public" static="no">
        <name>ENS160_CLEAR_GPR_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
<para>ens160 10ms delay when clearing general purpose registers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="89" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1af5ede772cb9081e63a80cf66e35ca80f" prot="public" static="no">
        <name>ENS160_DATA_READY_DELAY_MS</name>
        <initializer>UINT16_C(1)</initializer>
        <briefdescription>
<para>ens160 1ms delay when checking data ready in a loop </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="90" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aaf95a8fdd44419a1333e1f009cff2aff" prot="public" static="no">
        <name>ENS160_DATA_POLL_TIMEOUT_MS</name>
        <initializer>UINT16_C(1500)</initializer>
        <briefdescription>
<para>ens160 1.5s timeout when making a measurement </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="91" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ad1e258e63a1cdc2942e688b13761ceec" prot="public" static="no">
        <name>ENS160_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="92" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aa56c8c1d26a4ad59c3f2dc105d62dd08" prot="public" static="no">
        <name>ENS160_CONVERT_RS_RAW2OHMS_F</name>
        <param><defname>x</defname></param>
        <initializer>(pow (2, (float)(x) / 2048))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="97" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1aee7b193fcb571e0c3bc88c29f1662af4" prot="public" static="no">
        <name>ESP_TIMEOUT_CHECK</name>
        <param><defname>start</defname></param>
        <param><defname>len</defname></param>
        <initializer>((uint64_t)(esp_timer_get_time() - (start)) &gt;= (len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="98" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ens160_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="99" column="9" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="ens160_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;ens160&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="104" column="19" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ens160_8c_1a7e79015a4b1cc68a447a8a07ac0b1241" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structens160__aqi__uba__row__s" kindref="compound">ens160_aqi_uba_row_s</ref></type>
        <definition>const struct ens160_aqi_uba_row_s ens160_aqi_uba_definition_table[ENS160_ERROR_MSG_TABLE_SIZE]</definition>
        <argsstring>[ENS160_ERROR_MSG_TABLE_SIZE]</argsstring>
        <name>ens160_aqi_uba_definition_table</name>
        <initializer>= {
  {<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a810b422dd7f1e8eb4a9d6d3c2956503c" kindref="member">ENS160_AQI_UBA_INDEX_UNKNOWN</ref>,    &quot;-&quot;, &quot;-&quot;, &quot;-&quot;, &quot;-&quot;},
  {<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a9d8fb3a52c953b8011b4d461042f9d80" kindref="member">ENS160_AQI_UBA_INDEX_1</ref>,          &quot;Excellent&quot;,    &quot;No objections&quot;,            &quot;Target&quot;, &quot;no limit&quot;},
  {<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a49d52089490f4e2a9386936251aab04c" kindref="member">ENS160_AQI_UBA_INDEX_2</ref>,          &quot;Good&quot;,         &quot;No relevant objections&quot;,   &quot;Sufficient ventilation recommended&quot;, &quot;no limit&quot;},
  {<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a732ff3e985bc45ba109fe52f4c5ef6a6" kindref="member">ENS160_AQI_UBA_INDEX_3</ref>,          &quot;Moderate&quot;,     &quot;Some objections&quot;,          &quot;Increased ventilation recommended, search for sources&quot;, &quot;&lt;12 months&quot;},
  {<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a2afaa2fa6e4eb4b2ee1a57019ad5e762" kindref="member">ENS160_AQI_UBA_INDEX_4</ref>,          &quot;Poor&quot;,         &quot;Major objections&quot;,         &quot;Intensified ventilation recommended, search for sources&quot;, &quot;&lt;1 month&quot;},
  {<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a2bef77054e8955a0d03316217c3787f9" kindref="member">ENS160_AQI_UBA_INDEX_5</ref>,          &quot;Unhealthy&quot;,    &quot;Situation not acceptable&quot;, &quot;Use only if unavoidable, intensified ventilation recommended&quot;, &quot;hours&quot;}
}</initializer>
        <briefdescription>
<para>ENS160 air quality index of the UBA definition table structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="110" column="40" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="110" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ens160_8c_1a456fbefb623d11d15f6c04d8839647d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__drivers_1ga60912896ba51c5b7836e2e6705362d87" kindref="member">ens160_aqi_uba_indexes_t</ref></type>
        <definition>static ens160_aqi_uba_indexes_t ens160_get_aqi_uba_index</definition>
        <argsstring>(const ens160_caqi_data_register_t reg)</argsstring>
        <name>ens160_get_aqi_uba_index</name>
        <param>
          <type>const ens160_caqi_data_register_t</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
<para>Get air quality (uba) index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="126" column="40" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="126" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1aacfa534aee0545e58159c9b82c472aee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_i2c_write_byte_to</definition>
        <argsstring>(ens160_handle_t handle, const uint8_t reg_addr, const uint8_t byte)</argsstring>
        <name>ens160_i2c_write_byte_to</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>ENS160 I2C write byte to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 write transaction input byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="146" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="146" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1aae67108f9c93ff74a83db444a50a3f72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_i2c_write_word_to</definition>
        <argsstring>(ens160_handle_t handle, const uint8_t reg_addr, const uint16_t word)</argsstring>
        <name>ens160_i2c_write_word_to</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>ENS160 I2C write halfword to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 write transaction input halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="166" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="166" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1ac1719693a685725cfdb627cf5644e5e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_i2c_read_from</definition>
        <argsstring>(ens160_handle_t handle, const uint8_t reg_addr, uint8_t *buffer, const uint8_t size)</argsstring>
        <name>ens160_i2c_read_from</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>ENS160 I2C read from register address transaction. This is a write and then read process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 read transaction return buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="187" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a7af4bf37d8999beadd9e213a889e9005" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_i2c_read_word_from</definition>
        <argsstring>(ens160_handle_t handle, const uint8_t reg_addr, uint16_t *const word)</argsstring>
        <name>ens160_i2c_read_word_from</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *const</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>ENS160 I2C read halfword from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 read transaction return halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="206" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="206" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a078dedb35f770ede6a75372cfbf8479c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_i2c_read_byte_from</definition>
        <argsstring>(ens160_handle_t handle, const uint8_t reg_addr, uint8_t *const byte)</argsstring>
        <name>ens160_i2c_read_byte_from</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>ENS160 I2C read byte from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 read transaction return byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="229" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="229" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a0a09cedb7977486d972486fb0859321f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ens160_decode_temperature</definition>
        <argsstring>(const uint16_t encoded_temperature)</argsstring>
        <name>ens160_decode_temperature</name>
        <param>
          <type>const uint16_t</type>
          <declname>encoded_temperature</declname>
        </param>
        <briefdescription>
<para>Decodes <computeroutput>uint16_t</computeroutput> temperature format to degrees Celsius. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">encoded_temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>compensation temperature from register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float temperature compensation in degrees Celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="250" column="21" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a06dde314dc189be64d8e7f5ac6ca872a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t ens160_encode_temperature</definition>
        <argsstring>(const float decoded_temperature)</argsstring>
        <name>ens160_encode_temperature</name>
        <param>
          <type>const float</type>
          <declname>decoded_temperature</declname>
        </param>
        <briefdescription>
<para>Encodes temperature in degrees Celsius to <computeroutput>uint16_t</computeroutput> format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">decoded_temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>compensation temperature in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t temperature compensation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="260" column="24" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a2cee4af4f0b3f4bd966c9489e0f57470" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ens160_decode_humidity</definition>
        <argsstring>(const uint16_t encoded_humidity)</argsstring>
        <name>ens160_decode_humidity</name>
        <param>
          <type>const uint16_t</type>
          <declname>encoded_humidity</declname>
        </param>
        <briefdescription>
<para>Decodes <computeroutput>uint16_t</computeroutput> humidity format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">encoded_humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>compensation humidity from register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float humidity compensation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="270" column="21" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a8165fe47b658cfca6e550d998df54a88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t ens160_encode_humidity</definition>
        <argsstring>(const float decoded_humidity)</argsstring>
        <name>ens160_encode_humidity</name>
        <param>
          <type>const float</type>
          <declname>decoded_humidity</declname>
        </param>
        <briefdescription>
<para>Encodes humidity to <computeroutput>uint16_t</computeroutput> format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">decoded_humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>compensation humidity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t humidity compensation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="280" column="24" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a6b3ab1c94d1b723ab5c660348e594514" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_get_command</definition>
        <argsstring>(ens160_handle_t handle, ens160_commands_t *const command)</argsstring>
        <name>ens160_get_command</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="group__drivers_1gaa5184b5f2bb84de6f76b86821d1dada9" kindref="member">ens160_commands_t</ref> *const</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Reads command from ENS160 command register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command returned from ENS160 command register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="291" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="291" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a263b4540ecc63c497fa60a4e6a9501aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_set_command</definition>
        <argsstring>(ens160_handle_t handle, const ens160_commands_t command)</argsstring>
        <name>ens160_set_command</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="group__drivers_1gaa5184b5f2bb84de6f76b86821d1dada9" kindref="member">ens160_commands_t</ref></type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Writes command to ENS160 command register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 command for command register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="311" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="311" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a48001cbf12b52c9a70f418a2bd517196" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_get_mode_register</definition>
        <argsstring>(ens160_handle_t handle, ens160_operating_modes_t *const mode)</argsstring>
        <name>ens160_get_mode_register</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="group__drivers_1ga6d531eebb2d3fc8bc6de830bfb2aaaf4" kindref="member">ens160_operating_modes_t</ref> *const</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Reads operating mode register from ENS160. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="330" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="ens160_8c_1a58e6876ece9a9c15efe68d0b58b410fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t ens160_set_mode_register</definition>
        <argsstring>(ens160_handle_t handle, const ens160_operating_modes_t mode)</argsstring>
        <name>ens160_set_mode_register</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="group__drivers_1ga6d531eebb2d3fc8bc6de830bfb2aaaf4" kindref="member">ens160_operating_modes_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Writes operating mode register to ENS160. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>ENS160 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operating mode register setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="350" column="25" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="350" bodyend="361"/>
      </memberdef>
      <member refid="group__drivers_1ga8a0c563398abbbd945a5811cf9f71d7f" kind="function"><name>ens160_get_interrupt_config_register</name></member>
      <member refid="group__drivers_1gad526a912dd144b02c82afc98f1dcb718" kind="function"><name>ens160_set_interrupt_config_register</name></member>
      <member refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kind="function"><name>ens160_get_status_register</name></member>
      <memberdef kind="function" id="ens160_8c_1a17e65eb9d7f63590b36b468c960a6e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t ens160_clear_general_purpose_registers</definition>
        <argsstring>(ens160_handle_t handle)</argsstring>
        <name>ens160_clear_general_purpose_registers</name>
        <param>
          <type><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_ens160/ens160.c" line="408" column="11" bodyfile="components/peripherals/i2c/esp_ens160/ens160.c" bodystart="408" bodyend="425"/>
      </memberdef>
      <member refid="group__drivers_1ga15e778babf2f9768c9ce64cae25d66a7" kind="function"><name>ens160_get_compensation_registers</name></member>
      <member refid="group__drivers_1gafbc9dd389a2bea26048557c654df8834" kind="function"><name>ens160_set_compensation_registers</name></member>
      <member refid="group__drivers_1gafb9e5b096480b989c878d9063e4734ed" kind="function"><name>ens160_get_part_id_register</name></member>
      <member refid="group__drivers_1gac139f3a1dd540b59f58adcf7ef5770ad" kind="function"><name>ens160_init</name></member>
      <member refid="group__drivers_1ga6b3e7bd873aa221d7fa868356da85bc4" kind="function"><name>ens160_get_measurement</name></member>
      <member refid="group__drivers_1ga1dd2b9036a23da1e0ca670bb48c70760" kind="function"><name>ens160_get_raw_measurement</name></member>
      <member refid="group__drivers_1gaf391757408cbb0d1a6405665c8946480" kind="function"><name>ens160_get_data_status</name></member>
      <member refid="group__drivers_1ga52ea3a75e26bf293045237fd418e7ebb" kind="function"><name>ens160_get_gpr_data_status</name></member>
      <member refid="group__drivers_1ga159fd485dba74a5fc090875de79ad53f" kind="function"><name>ens160_get_validity_status</name></member>
      <member refid="group__drivers_1gab84c4ef88ae9937d2efc4f7469b39b87" kind="function"><name>ens160_get_error_status</name></member>
      <member refid="group__drivers_1ga7a8c95d5dd4643a64269fc03f9462651" kind="function"><name>ens160_get_mode_status</name></member>
      <member refid="group__drivers_1ga540f3af9bfb6c3742f775de124efee09" kind="function"><name>ens160_get_status</name></member>
      <member refid="group__drivers_1gaf21d5703c00867c1eb297503d0518735" kind="function"><name>ens160_get_compensation_factors</name></member>
      <member refid="group__drivers_1ga252a99917dc015a7644c71fd217c4517" kind="function"><name>ens160_set_compensation_factors</name></member>
      <member refid="group__drivers_1gab98f3065fa594a8fb14b0cd348b9b604" kind="function"><name>ens160_enable_standard_mode</name></member>
      <member refid="group__drivers_1gad641eb06f6dd6361c18371143ae2048d" kind="function"><name>ens160_enable_idle_mode</name></member>
      <member refid="group__drivers_1ga99ce58785ce63a71409c90def02c46be" kind="function"><name>ens160_enable_deep_sleep_mode</name></member>
      <member refid="group__drivers_1ga5442321bbbbc8b7288f72a07c01ba8b9" kind="function"><name>ens160_reset</name></member>
      <member refid="group__drivers_1ga37a6760bf7c1f54d04ab1adfbcc1146c" kind="function"><name>ens160_remove</name></member>
      <member refid="group__drivers_1ga40c349fa1fce998b90de2a9e14ed701d" kind="function"><name>ens160_delete</name></member>
      <member refid="group__drivers_1ga4d2de4eb0b2febd66f4abd03c3d853ea" kind="function"><name>ens160_aqi_index_to_definition</name></member>
      <member refid="group__drivers_1ga0b117eabf6020f6022f158f40a986828" kind="function"><name>ens160_get_fw_version</name></member>
      <member refid="group__drivers_1gabdc061a1dd5fc67a400eee28aa92991c" kind="function"><name>ens160_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for ENS160 Air Quality sensor</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ens160_8h" kindref="compound">include/ens160.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/queue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_PART_ID_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x00)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_OPMODE_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x10)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_INT_CONFIG_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x11)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_COMMAND_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x12)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_TEMP_IN_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x13)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_RH_IN_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x15)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DEVICE_STATUS_R<sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x20)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_AQI_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x21)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_TVOC_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x22)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_ETOH_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x22)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_ECO2_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x24)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_BL_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x28)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_TEMP_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x30)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_RH_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x32)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_DATA_MISR_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x38)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE0_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x40)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE1_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x41)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE2_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x42)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE3_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x43)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE4_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x44)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE5_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x45)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE6_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x46)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_WRITE7_RW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x47)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ0_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x48)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ1_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x49)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ2_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x4a)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ3_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x4b)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ4_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x4c)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ5_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x4d)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ6_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x4e)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_REG_GPR_READ7_R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x4f)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_TEMPERATURE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(125.0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_TEMPERATURE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(-40.0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_HUMIDITY_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(100.0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_HUMIDITY_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(0.0)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(15)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(25)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_CMD_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_MODE_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(50)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_CLEAR_GPR_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_DATA_READY_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_DATA_POLL_TIMEOUT_MS<sp/><sp/><sp/><sp/><sp/>UINT16_C(1500)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENS160_CONVERT_RS_RAW2OHMS_F(x)<sp/><sp/><sp/><sp/><sp/>(pow<sp/>(2,<sp/>(float)(x)<sp/>/<sp/>2048))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_TIMEOUT_CHECK(start,<sp/>len)<sp/>((uint64_t)(esp_timer_get_time()<sp/>-<sp/>(start))<sp/>&gt;=<sp/>(len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ens160&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structens160__aqi__uba__row__s" kindref="compound">ens160_aqi_uba_row_s</ref><sp/>ens160_aqi_uba_definition_table[<ref refid="group__drivers_1ga69f13b56e5c70913ed6896e0a1143c73" kindref="member">ENS160_ERROR_MSG_TABLE_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a810b422dd7f1e8eb4a9d6d3c2956503c" kindref="member">ENS160_AQI_UBA_INDEX_UNKNOWN</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a9d8fb3a52c953b8011b4d461042f9d80" kindref="member">ENS160_AQI_UBA_INDEX_1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Excellent&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>objections&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>limit&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a49d52089490f4e2a9386936251aab04c" kindref="member">ENS160_AQI_UBA_INDEX_2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Good&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>relevant<sp/>objections&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Sufficient<sp/>ventilation<sp/>recommended&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>limit&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a732ff3e985bc45ba109fe52f4c5ef6a6" kindref="member">ENS160_AQI_UBA_INDEX_3</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Moderate&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>objections&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Increased<sp/>ventilation<sp/>recommended,<sp/>search<sp/>for<sp/>sources&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;12<sp/>months&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a2afaa2fa6e4eb4b2ee1a57019ad5e762" kindref="member">ENS160_AQI_UBA_INDEX_4</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Poor&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Major<sp/>objections&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Intensified<sp/>ventilation<sp/>recommended,<sp/>search<sp/>for<sp/>sources&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;1<sp/>month&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{<ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a2bef77054e8955a0d03316217c3787f9" kindref="member">ENS160_AQI_UBA_INDEX_5</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unhealthy&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Situation<sp/>not<sp/>acceptable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>only<sp/>if<sp/>unavoidable,<sp/>intensified<sp/>ventilation<sp/>recommended&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hours&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*<sp/>functions<sp/>and<sp/>subroutines</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga60912896ba51c5b7836e2e6705362d87" kindref="member">ens160_aqi_uba_indexes_t</ref><sp/>ens160_get_aqi_uba_index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ens160_caqi_data_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(reg.bits.aqi_uba)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a9d8fb3a52c953b8011b4d461042f9d80" kindref="member">ENS160_AQI_UBA_INDEX_1</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a49d52089490f4e2a9386936251aab04c" kindref="member">ENS160_AQI_UBA_INDEX_2</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a732ff3e985bc45ba109fe52f4c5ef6a6" kindref="member">ENS160_AQI_UBA_INDEX_3</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a2afaa2fa6e4eb4b2ee1a57019ad5e762" kindref="member">ENS160_AQI_UBA_INDEX_4</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a2bef77054e8955a0d03316217c3787f9" kindref="member">ENS160_AQI_UBA_INDEX_5</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggade3afdceb8405d3b657d92d4abd60217a810b422dd7f1e8eb4a9d6d3c2956503c" kindref="member">ENS160_AQI_UBA_INDEX_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_i2c_write_byte_to(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit16_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_i2c_write_word_to(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit24_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/>(uint8_t)(word<sp/>&amp;<sp/>0xff),<sp/>(uint8_t)((word<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)<sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT24_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_i2c_read_from(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ens160_i2c_read_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_i2c_read_word_from(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ens160_i2c_read_word_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>*word<sp/>=<sp/>(uint16_t)rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_i2c_read_byte_from(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>bit8_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;ens160_i2c_read_byte_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>rx[0];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ens160_decode_temperature(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>encoded_temperature)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((encoded_temperature<sp/>/<sp/>64)<sp/>-<sp/>273.15);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>ens160_encode_temperature(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>decoded_temperature)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)((decoded_temperature<sp/>+<sp/>273.15)<sp/>*<sp/>64);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ens160_decode_humidity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>encoded_humidity)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(encoded_humidity<sp/>/<sp/>512);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>ens160_encode_humidity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>decoded_humidity)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)(decoded_humidity<sp/>*<sp/>512);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_get_command(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1gaa5184b5f2bb84de6f76b86821d1dada9" kindref="member">ens160_commands_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>command)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_byte_from(handle,<sp/><ref refid="ens160_8c_1ae825fb079b83fc51ee595fb03b365981" kindref="member">ENS160_REG_COMMAND_RW</ref>,<sp/>(uint8_t*)command),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>command<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_set_command(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gaa5184b5f2bb84de6f76b86821d1dada9" kindref="member">ens160_commands_t</ref><sp/>command)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_write_byte_to(handle,<sp/><ref refid="ens160_8c_1ae825fb079b83fc51ee595fb03b365981" kindref="member">ENS160_REG_COMMAND_RW</ref>,<sp/>command),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>command<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_get_mode_register(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga6d531eebb2d3fc8bc6de830bfb2aaaf4" kindref="member">ens160_operating_modes_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_byte_from(handle,<sp/><ref refid="ens160_8c_1afa8a99be1bec446533b17fd645a695bd" kindref="member">ENS160_REG_OPMODE_RW</ref>,<sp/>(uint8_t*)mode),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>operating<sp/>mode<sp/>register<sp/>for<sp/>get<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1ac2d1bd2e7e8374fe5b61a01d7ebb1cbe" kindref="member">ENS160_MODE_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>ens160_set_mode_register(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga6d531eebb2d3fc8bc6de830bfb2aaaf4" kindref="member">ens160_operating_modes_t</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_write_byte_to(handle,<sp/><ref refid="ens160_8c_1afa8a99be1bec446533b17fd645a695bd" kindref="member">ENS160_REG_OPMODE_RW</ref>,<sp/>mode),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>operating<sp/>mode<sp/>register<sp/>for<sp/>set<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1ac2d1bd2e7e8374fe5b61a01d7ebb1cbe" kindref="member">ENS160_MODE_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga8a0c563398abbbd945a5811cf9f71d7f" kindref="member">ens160_get_interrupt_config_register</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/>ens160_interrupt_config_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_byte_from(handle,<sp/><ref refid="ens160_8c_1a42650f883b287bacc642ef83e6911971" kindref="member">ENS160_REG_INT_CONFIG_RW</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>interrupt<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad526a912dd144b02c82afc98f1dcb718" kindref="member">ens160_set_interrupt_config_register</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ens160_interrupt_config_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>interrupt<sp/>configuration<sp/>register<sp/>reserved<sp/>fields<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_interrupt_config_register_t<sp/>irq_config<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.reserved3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_write_byte_to(handle,<sp/><ref refid="ens160_8c_1a42650f883b287bacc642ef83e6911971" kindref="member">ENS160_REG_INT_CONFIG_RW</ref>,<sp/>irq_config.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>interrupt<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;<sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/>ens160_status_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_byte_from(handle,<sp/><ref refid="ens160_8c_1aef982e342c5fbaa31f4ccda47711c1a1" kindref="member">ENS160_REG_DEVICE_STATUS_R</ref>,<sp/>&amp;reg-&gt;reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>device<sp/>status<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">esp_err_t<sp/>ens160_clear_general_purpose_registers(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>normal<sp/>operation<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_command(handle,<sp/><ref refid="group__drivers_1ggaf2a9ed5d8ac048fb5697822bb1694523a7057edf1edff9b6c33d6706a8d8e9305" kindref="member">ENS160_CMD_NORMAL</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>normal<sp/>operation<sp/>command<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>clear<sp/>general<sp/>purpose<sp/>registers<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_command(handle,<sp/><ref refid="group__drivers_1ggaf2a9ed5d8ac048fb5697822bb1694523a774e685b4aedaaabbc52542f66089e93" kindref="member">ENS160_CMD_CLEAR_GPR</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>clear<sp/>general<sp/>purpose<sp/>registers<sp/>command<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1ada5b0cc3d91e567c8143d1076a95d6ee" kindref="member">ENS160_CLEAR_GPR_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>normal<sp/>operation<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_command(handle,<sp/><ref refid="group__drivers_1ggaf2a9ed5d8ac048fb5697822bb1694523a7057edf1edff9b6c33d6706a8d8e9305" kindref="member">ENS160_CMD_NORMAL</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>normal<sp/>operation<sp/>command<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga15e778babf2f9768c9ce64cae25d66a7" kindref="member">ens160_get_compensation_registers</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>t;<sp/>uint16_t<sp/>h;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>temperature<sp/>&amp;<sp/>humidity<sp/>compensation<sp/>read<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_word_from(handle,<sp/><ref refid="ens160_8c_1ae9bc5d591c9ead6046a6020560f30b79" kindref="member">ENS160_REG_TEMP_IN_RW</ref>,<sp/>&amp;t),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>temperature<sp/>compensation<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_word_from(handle,<sp/><ref refid="ens160_8c_1a4e0f1c0de824cb62e2f4a7cb53829164" kindref="member">ENS160_REG_RH_IN_RW</ref>,<sp/>&amp;h),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>humidity<sp/>compensation<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>decode<sp/>temperature<sp/>&amp;<sp/>humidity<sp/>compensation<sp/>and<sp/>set<sp/>handle<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>*temperature<sp/>=<sp/>ens160_decode_temperature(t);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>*humidity<sp/><sp/><sp/><sp/>=<sp/>ens160_decode_humidity(h);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafbc9dd389a2bea26048557c654df8834" kindref="member">ens160_set_compensation_registers</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>temperature<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temperature<sp/>&gt;<sp/><ref refid="ens160_8c_1a062268a034662854d6136cc24bd757a5" kindref="member">ENS160_TEMPERATURE_MAX</ref><sp/>||<sp/>temperature<sp/>&lt;<sp/><ref refid="ens160_8c_1a62c5b739049e938769f7edcf34e7940d" kindref="member">ENS160_TEMPERATURE_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;temperature<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>write<sp/>compensation<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>humidity<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(humidity<sp/>&gt;<sp/><ref refid="ens160_8c_1a5d19f149dbfcba7a16e6701b9e1566c2" kindref="member">ENS160_HUMIDITY_MAX</ref><sp/>||<sp/>humidity<sp/>&lt;<sp/><ref refid="ens160_8c_1a8c71c78497a66d1c55136d904b71d5cd" kindref="member">ENS160_HUMIDITY_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;humidity<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>write<sp/>compensation<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>encode<sp/>temperature<sp/>&amp;<sp/>humidity<sp/>compensation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>t<sp/>=<sp/>ens160_encode_temperature(temperature);<sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>h<sp/>=<sp/>ens160_encode_humidity(humidity);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>temperature<sp/>&amp;<sp/>humidity<sp/>compensation<sp/>write<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_write_word_to(handle,<sp/><ref refid="ens160_8c_1ae9bc5d591c9ead6046a6020560f30b79" kindref="member">ENS160_REG_TEMP_IN_RW</ref>,<sp/>t),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>temperature<sp/>compensation<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_write_word_to(handle,<sp/><ref refid="ens160_8c_1a4e0f1c0de824cb62e2f4a7cb53829164" kindref="member">ENS160_REG_RH_IN_RW</ref>,<sp/>h),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>humidity<sp/>compensation<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafb9e5b096480b989c878d9063e4734ed" kindref="member">ens160_get_part_id_register</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_i2c_read_word_from(handle,<sp/><ref refid="ens160_8c_1a6f205f5d6a2293f43c02ae0eece3abb4" kindref="member">ENS160_REG_PART_ID_R</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>part<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gac139f3a1dd540b59f58adcf7ef5770ad" kindref="member">ens160_init</ref>(i2c_master_bus_handle_t<sp/>master_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gadcf19e4502c842b6dbc749ed6e19ab96" kindref="member">ens160_config_t</ref><sp/>*ens160_config,<sp/><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>*ens160_handle)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>master_handle<sp/>&amp;&amp;<sp/>ens160_config<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>power-up<sp/>task<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a07c3f3784bf29d6d0f60b2fdc1c73b41" kindref="member">ENS160_POWERUP_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>exists<sp/>on<sp/>the<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>i2c_master_probe(master_handle,<sp/>ens160_config-&gt;<ref refid="structens160__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ret,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>does<sp/>not<sp/>exist<sp/>at<sp/>address<sp/>0x%02x,<sp/>ens160<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>ens160_config-&gt;<ref refid="structens160__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c<sp/>ens160<sp/>device,<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref><sp/>=<sp/>*ens160_config;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i2c_device_config_t<sp/>i2c_dev_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dev_addr_length<sp/><sp/><sp/><sp/>=<sp/>I2C_ADDR_BIT_LEN_7,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device_address<sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scl_speed_hz<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1a770b3ab4bba557baec88287d86832a34" kindref="member">i2c_clock_speed</ref>,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(i2c_master_bus_add_device(master_handle,<sp/>&amp;i2c_dev_conf,<sp/>&amp;out_handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>new<sp/>bus<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>reset<sp/>device<sp/>and<sp/>initialize<sp/>device<sp/>configuration<sp/>and<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga5442321bbbbc8b7288f72a07c01ba8b9" kindref="member">ens160_reset</ref>(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;soft-reset<sp/>for<sp/>init<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>part<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gafb9e5b096480b989c878d9063e4734ed" kindref="member">ens160_get_part_id_register</ref>(out_handle,<sp/>&amp;out_handle-&gt;<ref refid="structens160__context__t_1a8f36447f67acb1e89e69ddd04fb0f1fb" kindref="member">part_id</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>part<sp/>identifier<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>*ens160_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>app-start<sp/>task<sp/>delay<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a74816e78a7852fe153e60c9280533c26" kindref="member">ENS160_APPSTART_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>err_handle:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2c_master_bus_rm_device(out_handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga6b3e7bd873aa221d7fa868356da85bc4" kindref="member">ens160_get_measurement</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga9bf81e9124e5c07b24ebebc2dd141904" kindref="member">ens160_air_quality_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_is_ready<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_caqi_data_register_t<sp/><sp/><sp/><sp/><sp/>caqi_reg;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tvoc_data;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etoh_data;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eco2_data;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>(us)<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();<sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>data<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>if<sp/>data<sp/>is<sp/>ready<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1gaf391757408cbb0d1a6405665c8946480" kindref="member">ens160_get_data_status</ref>(handle,<sp/>&amp;data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>ready<sp/>read<sp/>for<sp/>measurement<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1af5ede772cb9081e63a80cf66e35ca80f" kindref="member">ENS160_DATA_READY_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(<ref refid="ens160_8c_1aaf95a8fdd44419a1333e1f009cff2aff" kindref="member">ENS160_DATA_POLL_TIMEOUT_MS</ref><sp/>*<sp/>1000)))</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>data<sp/>read<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>ens160_i2c_read_byte_from(handle,<sp/><ref refid="ens160_8c_1a25342e2cb65b1ab3d5e500d3b01c759b" kindref="member">ENS160_REG_DATA_AQI_R</ref>,<sp/>&amp;caqi_reg.value),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>calculated<sp/>air<sp/>quality<sp/>index<sp/>data<sp/>register<sp/>for<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>ens160_i2c_read_word_from(handle,<sp/><ref refid="ens160_8c_1afa58c03250b00d6e1273bd7a4f9540cd" kindref="member">ENS160_REG_DATA_TVOC_R</ref>,<sp/>&amp;tvoc_data),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>tvoc<sp/>data<sp/>register<sp/>for<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>ens160_i2c_read_word_from(handle,<sp/><ref refid="ens160_8c_1a3d13c165214a606f8257551f0349072c" kindref="member">ENS160_REG_DATA_ETOH_R</ref>,<sp/>&amp;etoh_data),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>etoh<sp/>data<sp/>register<sp/>for<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>ens160_i2c_read_word_from(handle,<sp/><ref refid="ens160_8c_1a39b63db46ff7b36051248d14a7ace09f" kindref="member">ENS160_REG_DATA_ECO2_R</ref>,<sp/>&amp;eco2_data),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>eco2<sp/>data<sp/>register<sp/>for<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>air<sp/>quality<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structens160__air__quality__data__s_1aa5d3fed2da33a5ecbbfb2204ab5012a7" kindref="member">uba_aqi</ref><sp/>=<sp/>ens160_get_aqi_uba_index(caqi_reg);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structens160__air__quality__data__s_1a26fd892e05117ff980a779acfac83982" kindref="member">tvoc</ref><sp/><sp/><sp/><sp/>=<sp/>tvoc_data;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structens160__air__quality__data__s_1a7dd62fb3d78b66bd1e649ba2f702811b" kindref="member">etoh</ref><sp/><sp/><sp/><sp/>=<sp/>etoh_data;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structens160__air__quality__data__s_1a6ae8195dcd841d5d5a27361dbe594a5d" kindref="member">eco2</ref><sp/><sp/><sp/><sp/>=<sp/>eco2_data;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga1dd2b9036a23da1e0ca670bb48c70760" kindref="member">ens160_get_raw_measurement</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1gaff8f3f610bc3439129f39f314c4e4616" kindref="member">ens160_air_quality_raw_data_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpr_data_is_ready<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>bit64_uint8_buffer_t<sp/>rx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>(us)<sp/>for<sp/>timeout<sp/>monitoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();<sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>poll<sp/>until<sp/>gpr<sp/>data<sp/>is<sp/>available<sp/>or<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>check<sp/>if<sp/>gpr<sp/>data<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/><ref refid="group__drivers_1ga52ea3a75e26bf293045237fd418e7ebb" kindref="member">ens160_get_gpr_data_status</ref>(handle,<sp/>&amp;gpr_data_is_ready),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;gpr<sp/>data<sp/>ready<sp/>read<sp/>for<sp/>raw<sp/>measurement<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1af5ede772cb9081e63a80cf66e35ca80f" kindref="member">ENS160_DATA_READY_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>timeout<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ahtxx_8c_1aee7b193fcb571e0c3bc88c29f1662af4" kindref="member">ESP_TIMEOUT_CHECK</ref>(start_time,<sp/>(<ref refid="ens160_8c_1aaf95a8fdd44419a1333e1f009cff2aff" kindref="member">ENS160_DATA_POLL_TIMEOUT_MS</ref><sp/>*<sp/>1000)))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(gpr_data_is_ready<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>gpr<sp/>data<sp/>read<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>ens160_i2c_read_from(handle,<sp/><ref refid="ens160_8c_1ae97a3b0849db21242e371b73c01df986" kindref="member">ENS160_REG_GPR_READ0_R</ref>,<sp/>rx,<sp/>BIT64_UINT8_BUFFER_SIZE),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>resistance<sp/>signal<sp/>gpr<sp/>data<sp/>registers<sp/>for<sp/>raw<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>gpr<sp/>raw<sp/>resistance<sp/>and<sp/>set<sp/>resistance<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp0_ri<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp1_ri<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[2]<sp/>|<sp/>((uint16_t)rx[3]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp2_ri<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[4]<sp/>|<sp/>((uint16_t)rx[5]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp3_ri<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[6]<sp/>|<sp/>((uint16_t)rx[7]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>baseline<sp/>data<sp/>read<sp/>transactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<sp/>ens160_i2c_read_from(handle,<sp/><ref refid="ens160_8c_1ad7e0d9f2c8154e59e42d1b052ca03df0" kindref="member">ENS160_REG_DATA_BL_R</ref>,<sp/>rx,<sp/>BIT64_UINT8_BUFFER_SIZE),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>baseline<sp/>resistance<sp/>data<sp/>registers<sp/>for<sp/>raw<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>baseline<sp/>raw<sp/>resistance<sp/>and<sp/>set<sp/>resistance<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp0_bl<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp1_bl<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[2]<sp/>|<sp/>((uint16_t)rx[3]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp2_bl<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[4]<sp/>|<sp/>((uint16_t)rx[5]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;hp3_bl<sp/>=<sp/>ENS160_CONVERT_RS_RAW2OHMS_F((uint32_t)(rx[6]<sp/>|<sp/>((uint16_t)rx[7]<sp/>&lt;&lt;<sp/>8)));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>clear<sp/>general<sp/>purpose<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_GOTO_ON_ERROR(<sp/>ens160_clear_general_purpose_registers(ens160_handle),<sp/>err,<sp/>TAG,<sp/>&quot;clear<sp/>general<sp/>purpose<sp/>registers<sp/>failed&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a94805e687650359592a1d1b4e10a5b82" kindref="member">ENS160_CMD_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaf391757408cbb0d1a6405665c8946480" kindref="member">ens160_get_data_status</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>data<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status.bits.new_data;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga52ea3a75e26bf293045237fd418e7ebb" kindref="member">ens160_get_gpr_data_status</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ready)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>general<sp/>purpose<sp/>registers<sp/>data<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>ready<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>*ready<sp/>=<sp/>status.bits.new_gpr_data;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga159fd485dba74a5fc090875de79ad53f" kindref="member">ens160_get_validity_status</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1gac81c26d5b704c609e33b6f4ba7057201" kindref="member">ens160_validity_flags_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>validity<sp/>flag<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>validity<sp/>flag<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>status.bits.state;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gab84c4ef88ae9937d2efc4f7469b39b87" kindref="member">ens160_get_error_status</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>error<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>error<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>*error<sp/>=<sp/>status.bits.error;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga7a8c95d5dd4643a64269fc03f9462651" kindref="member">ens160_get_mode_status</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>operating<sp/>mode<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>error<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>status.bits.mode;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga540f3af9bfb6c3742f775de124efee09" kindref="member">ens160_get_status</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_ready,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpr_data_ready,<sp/><ref refid="group__drivers_1gac81c26d5b704c609e33b6f4ba7057201" kindref="member">ens160_validity_flags_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_status_register_t<sp/>status;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>status<sp/>register<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad75c8c18e1e7e453d24a55a648636bd6" kindref="member">ens160_get_status_register</ref>(handle,<sp/>&amp;status),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>status<sp/>register<sp/>for<sp/>get<sp/>status<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>states<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>*data_ready<sp/><sp/><sp/><sp/><sp/>=<sp/>status.bits.new_data;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>*gpr_data_ready<sp/>=<sp/>status.bits.new_gpr_data;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>*state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>status.bits.state;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>*error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>status.bits.error;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>status.bits.mode;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaf21d5703c00867c1eb297503d0518735" kindref="member">ens160_get_compensation_factors</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>compensation<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga15e778babf2f9768c9ce64cae25d66a7" kindref="member">ens160_get_compensation_registers</ref>(handle,<sp/>temperature,<sp/>humidity),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>compensation<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga252a99917dc015a7644c71fd217c4517" kindref="member">ens160_set_compensation_factors</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>compensation<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gafbc9dd389a2bea26048557c654df8834" kindref="member">ens160_set_compensation_registers</ref>(handle,<sp/>temperature,<sp/>humidity),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>compensation<sp/>registers<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gab98f3065fa594a8fb14b0cd348b9b604" kindref="member">ens160_enable_standard_mode</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>operating<sp/>mode<sp/>to<sp/>standard<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_mode_register(handle,<sp/><ref refid="group__drivers_1ggae268b5469d64277325caa3f5fc989850a126972f1631eade3a26360e45d1c94e1" kindref="member">ENS160_OPMODE_STANDARD</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>mode<sp/>for<sp/>standard<sp/>operating<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gad641eb06f6dd6361c18371143ae2048d" kindref="member">ens160_enable_idle_mode</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>operating<sp/>mode<sp/>to<sp/>idle<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_mode_register(handle,<sp/><ref refid="group__drivers_1ggae268b5469d64277325caa3f5fc989850a99235d15a08bdeff5ff011c5bb9ebd81" kindref="member">ENS160_OPMODE_IDLE</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>mode<sp/>for<sp/>idle<sp/>operating<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga99ce58785ce63a71409c90def02c46be" kindref="member">ens160_enable_deep_sleep_mode</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>set<sp/>operating<sp/>mode<sp/>to<sp/>deep<sp/>sleep<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_mode_register(handle,<sp/><ref refid="group__drivers_1ggae268b5469d64277325caa3f5fc989850a6aa8e1b080be1957ba87d3c10f424951" kindref="member">ENS160_OPMODE_DEEP_SLEEP</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>mode<sp/>for<sp/>deep<sp/>sleep<sp/>operating<sp/>mode<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5442321bbbbc8b7288f72a07c01ba8b9" kindref="member">ens160_reset</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>ens160_interrupt_config_register_t<sp/>irq_config;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>operating<sp/>mode<sp/>to<sp/>reset<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_set_mode_register(handle,<sp/><ref refid="group__drivers_1ggae268b5469d64277325caa3f5fc989850aaf93f073c29ed1b0772e2563c567e383" kindref="member">ENS160_OPMODE_RESET</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>mode<sp/>for<sp/>soft-reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="ens160_8c_1a31dca31d2ba79375b40c8ce153a69270" kindref="member">ENS160_RESET_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>interrupt<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga8a0c563398abbbd945a5811cf9f71d7f" kindref="member">ens160_get_interrupt_config_register</ref>(handle,<sp/>&amp;irq_config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>interrupt<sp/>configuration<sp/>register<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>idle<sp/>operating<sp/>mode<sp/>before<sp/>writing<sp/>to<sp/>configuration<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad641eb06f6dd6361c18371143ae2048d" kindref="member">ens160_enable_idle_mode</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>idle<sp/>operating<sp/>mode<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>clear<sp/>general<sp/>purpose<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ens160_clear_general_purpose_registers(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;clear<sp/>general<sp/>purpose<sp/>registers<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>irq<sp/>configuration<sp/>from<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.irq_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1af76a23d5ea575f0b95d86d14d246c9a7" kindref="member">irq_enabled</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.irq_data_enabled<sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1a786f332c027d34d43a33ac5735a03d71" kindref="member">irq_data_enabled</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.irq_gpr_enabled<sp/><sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1a5385141f066d58d688327c44a8b24ab2" kindref="member">irq_gpr_enabled</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.irq_pin_driver<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1a5350a306b418447ca3e8741da9554fef" kindref="member">irq_pin_driver</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>irq_config.bits.irq_pin_polarity<sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structens160__context__t_1a45942407f35a17914c2a5f1d1fb4591e" kindref="member">dev_config</ref>.<ref refid="structens160__config__s_1afabc6379a8b4233103c83aa95a983dbe" kindref="member">irq_pin_polarity</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>interrupt<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gad526a912dd144b02c82afc98f1dcb718" kindref="member">ens160_set_interrupt_config_register</ref>(handle,<sp/>irq_config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>interrupt<sp/>configuration<sp/>register<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>enable<sp/>standard<sp/>operating<sp/>mode<sp/>to<sp/>start<sp/>making<sp/>measurements<sp/>(idle<sp/>by<sp/>default)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gab98f3065fa594a8fb14b0cd348b9b604" kindref="member">ens160_enable_standard_mode</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>standard<sp/>operating<sp/>mode<sp/>for<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga37a6760bf7c1f54d04ab1adfbcc1146c" kindref="member">ens160_remove</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2c_master_bus_rm_device(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga40c349fa1fce998b90de2a9e14ed701d" kindref="member">ens160_delete</ref>(<ref refid="group__drivers_1gafdcb747a70da714654218fbcd1d1e2c9" kindref="member">ens160_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga37a6760bf7c1f54d04ab1adfbcc1146c" kindref="member">ens160_remove</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus,<sp/>delete<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>handle<sp/>instance<sp/>and<sp/>free<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle-&gt;<ref refid="structens160__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><ref refid="group__drivers_1ga160c5dbdb5e259518d2e997c49566e2b" kindref="member">ens160_aqi_uba_row_t</ref><sp/><ref refid="group__drivers_1ga4d2de4eb0b2febd66f4abd03c3d853ea" kindref="member">ens160_aqi_index_to_definition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga60912896ba51c5b7836e2e6705362d87" kindref="member">ens160_aqi_uba_indexes_t</ref><sp/><ref refid="structens160__aqi__uba__row__s_1ac888512e835d9c26524c55a22de09e53" kindref="member">index</ref>)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>aqi-uba<sp/>index<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ens160_aqi_uba_definition_table)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ens160_aqi_uba_definition_table[0]);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ens160_aqi_uba_definition_table[i].<ref refid="structens160__aqi__uba__row__s_1ac888512e835d9c26524c55a22de09e53" kindref="member">index</ref><sp/>==<sp/><ref refid="structens160__aqi__uba__row__s_1ac888512e835d9c26524c55a22de09e53" kindref="member">index</ref>)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ens160_aqi_uba_definition_table[i];</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ens160_aqi_uba_definition_table[0];</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__drivers_1ga0b117eabf6020f6022f158f40a986828" kindref="member">ens160_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ENS160_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal">int32_t<sp/><ref refid="group__drivers_1gabdc061a1dd5fc67a400eee28aa92991c" kindref="member">ens160_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ENS160_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_ens160/ens160.c"/>
  </compounddef>
</doxygen>
