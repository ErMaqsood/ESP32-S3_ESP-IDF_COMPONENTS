<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hdc1080_8c" kind="file" language="C++">
    <compoundname>hdc1080.c</compoundname>
    <includes refid="hdc1080_8h" local="yes">include/hdc1080.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="no">esp_check.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/peripherals/i2c/esp_hdc1080/hdc1080.c</label>
        <link refid="hdc1080_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/hdc1080.h</label>
        <link refid="hdc1080_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hdc1080_version.h</label>
        <link refid="hdc1080__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_utils.h</label>
        <link refid="type__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_utils_version.h</label>
        <link refid="type__utils__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/i2c_master.h</label>
      </node>
      <node id="15">
        <label>esp_check.h</label>
      </node>
      <node id="5">
        <label>esp_err.h</label>
      </node>
      <node id="14">
        <label>esp_log.h</label>
      </node>
      <node id="8">
        <label>esp_mac.h</label>
      </node>
      <node id="16">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="17">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="hdc1080_8c_1a5e79595180d660df3122d295adaf372b" prot="public" static="no">
        <name>HDC1080_REG_TEMPERATURE</name>
        <initializer>UINT8_C(0x00)</initializer>
        <briefdescription>
<para>hdc1080 I2C temperature measurement output </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="48" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a31be7943ee55720987f9208d935ff40e" prot="public" static="no">
        <name>HDC1080_REG_HUMIDITY</name>
        <initializer>UINT8_C(0x01)</initializer>
        <briefdescription>
<para>hdc1080 I2C relative humidity measurement ouput </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="49" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1ab2bfb41386eef6e49403800923288ecc" prot="public" static="no">
        <name>HDC1080_REG_CONFIGURATION</name>
        <initializer>UINT8_C(0x02)</initializer>
        <briefdescription>
<para>hdc1080 I2C configuration and status </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="50" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a5fe3833dc68d8f4885b8c82ec525ad51" prot="public" static="no">
        <name>HDC1080_REG_SERIAL_ID_FBP</name>
        <initializer>UINT8_C(0xFB)</initializer>
        <briefdescription>
<para>hdc1080 I2C first 2 bytes of the serial ID of the part </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="51" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1af876d8d9e2cff28f3e86099a4a74d774" prot="public" static="no">
        <name>HDC1080_REG_SERIAL_ID_MBP</name>
        <initializer>UINT8_C(0xFC)</initializer>
        <briefdescription>
<para>hdc1080 I2C mid 2 bytes of the serial ID of the part </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="52" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1aabd51e93c24db4237d4b13d8f3c14276" prot="public" static="no">
        <name>HDC1080_REG_SERIAL_ID_LBP</name>
        <initializer>UINT8_C(0xFD)</initializer>
        <briefdescription>
<para>hdc1080 I2C last byte bit of the serial ID of the part </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="53" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1ae95ec6a64c6ce2ecd4ba48322f003927" prot="public" static="no">
        <name>HDC1080_REG_MANUFACTURER_ID</name>
        <initializer>UINT8_C(0xFE)</initializer>
        <briefdescription>
<para>hdc1080 I2C ID of Texas Instruments </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="54" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a8c834c7d5b8c92692c29345d5b439068" prot="public" static="no">
        <name>HDC1080_REG_DEVICE_ID</name>
        <initializer>UINT8_C(0xFF)</initializer>
        <briefdescription>
<para>hdc1080 I2C ID of the device </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="55" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a0685433d0af56443078a9faadff9e656" prot="public" static="no">
        <name>HDC1080_MANUFACTURER_ID</name>
        <initializer>UINT16_C(0x5449)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="57" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1ab025caf4a87b11d7b58286867b8ed4b6" prot="public" static="no">
        <name>HDC1080_DEVICE_ID</name>
        <initializer>UINT16_C(0x1050)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="58" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a6e3823eb6a879358d304172784515219" prot="public" static="no">
        <name>HDC1080_TEMPERATURE_MAX</name>
        <initializer>(float)(125.0)</initializer>
        <briefdescription>
<para>hdc1080 maximum temperature range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="60" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a60cc182436e66538788d50028993b84f" prot="public" static="no">
        <name>HDC1080_TEMPERATURE_MIN</name>
        <initializer>(float)(-40.0)</initializer>
        <briefdescription>
<para>hdc1080 minimum temperature range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="61" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a26a04a552e1887b0e4865295476e1fb7" prot="public" static="no">
        <name>HDC1080_HUMIDITY_MAX</name>
        <initializer>(float)(100.0)</initializer>
        <briefdescription>
<para>hdc1080 maximum humidity range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="62" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a27f64bb42c278d57d7162a677bcaac3b" prot="public" static="no">
        <name>HDC1080_HUMIDITY_MIN</name>
        <initializer>(float)(0.0)</initializer>
        <briefdescription>
<para>hdc1080 minimum humidity range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="63" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a4399b18a93b8e693685c798028b180dd" prot="public" static="no">
        <name>HDC1080_POWERUP_DELAY_MS</name>
        <initializer>UINT16_C(30)</initializer>
        <briefdescription>
<para>hdc1080 I2C power-up delay in milliseconds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="65" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a0395d0fb842cc2b3c7c2febbf2491a9a" prot="public" static="no">
        <name>HDC1080_APPSTART_DELAY_MS</name>
        <initializer>UINT16_C(15)</initializer>
        <briefdescription>
<para>hdc1080 I2C application start delay in milliseconds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="66" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a90192aa6f825860e58a9644674dda4c2" prot="public" static="no">
        <name>HDC1080_RESET_DELAY_MS</name>
        <initializer>UINT16_C(20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="67" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a4e2824daf1dcef434f80bd178744eb12" prot="public" static="no">
        <name>HDC1080_CMD_DELAY_MS</name>
        <initializer>UINT16_C(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="68" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1a10bb600616a5a61a09ac8b274f41f3d1" prot="public" static="no">
        <name>HDC1080_RETRY_DELAY_MS</name>
        <initializer>UINT16_C(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="69" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1abe1d404eac47ab473974b7e9bac98bec" prot="public" static="no">
        <name>HDC1080_TX_RX_DELAY_MS</name>
        <initializer>UINT16_C(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="70" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hdc1080_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="75" column="9" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hdc1080_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;hdc1080&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="80" column="19" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hdc1080_8c_1ae9aa7f17566c678135dc74949aaf8d04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t hdc1080_i2c_write_command</definition>
        <argsstring>(hdc1080_handle_t handle, const uint8_t reg_addr)</argsstring>
        <name>hdc1080_i2c_write_command</name>
        <param>
          <type><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <briefdescription>
<para>HDC1080 I2C write command to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 command register address to write to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="95" column="25" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1a4aca2f1d0ad44d8278a133ad8bf5fe2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t hdc1080_i2c_write_word_to</definition>
        <argsstring>(hdc1080_handle_t handle, const uint8_t reg_addr, const uint16_t word)</argsstring>
        <name>hdc1080_i2c_write_word_to</name>
        <param>
          <type><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>HDC1080 I2C write halfword to register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 register address to write to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 write transaction input halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="115" column="25" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="115" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1acf60a3795fbfe2c9adeb84b7f7b0ae49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t hdc1080_i2c_read_word_from</definition>
        <argsstring>(hdc1080_handle_t handle, const uint8_t reg_addr, uint16_t *const word)</argsstring>
        <name>hdc1080_i2c_read_word_from</name>
        <param>
          <type><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *const</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>HDC1080 I2C read halfword from register address transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 register address to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 read transaction return halfword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="135" column="25" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="135" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1a1960d1a3b49a61c3a37cee7a84dbf093" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t hdc1080_i2c_read</definition>
        <argsstring>(hdc1080_handle_t handle, uint8_t *buffer, const uint8_t size)</argsstring>
        <name>hdc1080_i2c_read</name>
        <param>
          <type><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>HDC1080 I2C read transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer to store results from read transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="168" column="25" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="168" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1ae886a2c551d68756142200df194b2416" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t hdc1080_get_humidity_duration_ms</definition>
        <argsstring>(const hdc1080_humidity_resolutions_t resolution)</argsstring>
        <name>hdc1080_get_humidity_duration_ms</name>
        <param>
          <type>const <ref refid="group__drivers_1gae67808de49aceb774fa76ef6f6277c5d" kindref="member">hdc1080_humidity_resolutions_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>Gets HDC1080 millisecond duration from humidity measurement resolution. See datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 humidity measurement resolution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Measurement duration in milliseconds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="185" column="22" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="185" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1a31a10b9418a9719d983f7ae7821ba11c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t hdc1080_get_humidity_tick_duration</definition>
        <argsstring>(const hdc1080_humidity_resolutions_t resolution)</argsstring>
        <name>hdc1080_get_humidity_tick_duration</name>
        <param>
          <type>const <ref refid="group__drivers_1gae67808de49aceb774fa76ef6f6277c5d" kindref="member">hdc1080_humidity_resolutions_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>Gets HDC1080 tick duration from humidity measurement resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 humidity measurement resolution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Measurement duration in ticks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="204" column="22" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1a5a73cb8adc145f66eb2485f4ac29d75f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t hdc1080_get_temperature_duration_ms</definition>
        <argsstring>(const hdc1080_temperature_resolutions_t resolution)</argsstring>
        <name>hdc1080_get_temperature_duration_ms</name>
        <param>
          <type>const <ref refid="group__drivers_1ga778ae16b2d80f624217c3a1a9fa94cc8" kindref="member">hdc1080_temperature_resolutions_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>Gets HDC1080 millisecond duration from temperature measurement resolution. See datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 temperature measurement resolution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Measurement duration in milliseconds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="215" column="22" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="215" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1af587405237afbdeb4ceff82ee5b8cdcc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t hdc1080_get_temperature_tick_duration</definition>
        <argsstring>(const hdc1080_temperature_resolutions_t resolution)</argsstring>
        <name>hdc1080_get_temperature_tick_duration</name>
        <param>
          <type>const <ref refid="group__drivers_1ga778ae16b2d80f624217c3a1a9fa94cc8" kindref="member">hdc1080_temperature_resolutions_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
<para>Gets HDC1080 tick duration from temperature measurement resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>HDC1080 temperature measurement resolution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Measurement duration in ticks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="232" column="22" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1af5648eb2bbb04bb65485a44fb89b9072" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float hdc1080_convert_temperature_signal</definition>
        <argsstring>(const uint16_t temperature)</argsstring>
        <name>hdc1080_convert_temperature_signal</name>
        <param>
          <type>const uint16_t</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
<para>Converts temperature signal to engineering units of measure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature signal to convert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Converted temperature in degrees Celsius. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="243" column="21" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1adf861ddc9860ccd3db2b632a9629f4dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float hdc1080_convert_humidity_signal</definition>
        <argsstring>(const uint16_t humidity)</argsstring>
        <name>hdc1080_convert_humidity_signal</name>
        <param>
          <type>const uint16_t</type>
          <declname>humidity</declname>
        </param>
        <briefdescription>
<para>Converts humidity signal to engineering units of measure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>Humidity signal to convert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Converted humidity in percent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="253" column="21" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1a110f7bac2c62665373466b1c0a0782b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t hdc1080_calculate_dewpoint</definition>
        <argsstring>(const float temperature, const float humidity, float *const dewpoint)</argsstring>
        <name>hdc1080_calculate_dewpoint</name>
        <param>
          <type>const float</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>humidity</declname>
        </param>
        <param>
          <type>float *const</type>
          <declname>dewpoint</declname>
        </param>
        <briefdescription>
<para>Calculates dewpoint temperature from air temperature and relative humidity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>Air temperature in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">humidity</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative humidity in percentage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dewpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Calculated dewpoint temperature in degrees Celsius. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="265" column="25" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="265" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="hdc1080_8c_1a522e8a7bc21ce87cb4560631bb622ac8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>static esp_err_t hdc1080_setup</definition>
        <argsstring>(hdc1080_handle_t handle)</argsstring>
        <name>hdc1080_setup</name>
        <param>
          <type><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c" line="286" column="25" bodyfile="components/peripherals/i2c/esp_hdc1080/hdc1080.c" bodystart="286" bodyend="304"/>
      </memberdef>
      <member refid="group__drivers_1ga598773982b5b95887427e6ebf25fadc1" kind="function"><name>hdc1080_get_serial_number_register</name></member>
      <member refid="group__drivers_1gae0190c50b172c2215d2b69e8c6b31f9f" kind="function"><name>hdc1080_get_manufacturer_id_register</name></member>
      <member refid="group__drivers_1ga0c580fea8f1a1557092369441b93657d" kind="function"><name>hdc1080_get_device_id_register</name></member>
      <member refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kind="function"><name>hdc1080_get_configuration_register</name></member>
      <member refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kind="function"><name>hdc1080_set_configuration_register</name></member>
      <member refid="group__drivers_1ga6a5911a91a065762df68d13b3eb9280f" kind="function"><name>hdc1080_init</name></member>
      <member refid="group__drivers_1ga166fa70a9efe0894a6b035aab66dc0b5" kind="function"><name>hdc1080_get_measurement</name></member>
      <member refid="group__drivers_1ga21935580fd6cb5932eb5e26ba3902027" kind="function"><name>hdc1080_get_measurements</name></member>
      <member refid="group__drivers_1gaefa457fda281744e300573dc2f8432fb" kind="function"><name>hdc1080_enable_heater</name></member>
      <member refid="group__drivers_1ga4e10cb9cebcf138c6fbc0a594833a314" kind="function"><name>hdc1080_disable_heater</name></member>
      <member refid="group__drivers_1ga25b2ca82a8ce6cb8a7c57110e72129a2" kind="function"><name>hdc1080_get_temperature_resolution</name></member>
      <member refid="group__drivers_1ga654f37c4e3fcfeb443c361a27f99ad19" kind="function"><name>hdc1080_set_temperature_resolution</name></member>
      <member refid="group__drivers_1gae1b15dab767c8e06b0364a1c257366c9" kind="function"><name>hdc1080_get_humidity_resolution</name></member>
      <member refid="group__drivers_1ga429a9d726fa78bbd9aa353a09dd9b0ef" kind="function"><name>hdc1080_set_humidity_resolution</name></member>
      <member refid="group__drivers_1ga92ae9bbe2ebea4f9cf9be1bb44daaf97" kind="function"><name>hdc1080_reset</name></member>
      <member refid="group__drivers_1ga5207bde071a956af28f94cec74af246e" kind="function"><name>hdc1080_remove</name></member>
      <member refid="group__drivers_1ga77348c1804725d85c11559113fe8f984" kind="function"><name>hdc1080_delete</name></member>
      <member refid="group__drivers_1ga5c7f0e308b22e2b0478e40200dd965f6" kind="function"><name>hdc1080_get_fw_version</name></member>
      <member refid="group__drivers_1gad4e28434f1ab602f3a07c5372fa07594" kind="function"><name>hdc1080_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for HDC1080 temperature and humdity sensor</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hdc1080_8h" kindref="compound">include/hdc1080.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_check.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>HDC1080<sp/>definitions</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_TEMPERATURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x00)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_HUMIDITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x01)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_CONFIGURATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0x02)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_SERIAL_ID_FBP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFB)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_SERIAL_ID_MBP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFC)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_SERIAL_ID_LBP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFD)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_MANUFACTURER_ID<sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFE)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_REG_DEVICE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8_C(0xFF)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_MANUFACTURER_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(0x5449)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_DEVICE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(0x1050)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_TEMPERATURE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(125.0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_TEMPERATURE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(-40.0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_HUMIDITY_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(100.0)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_HUMIDITY_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)(0.0)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_POWERUP_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(30)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_APPSTART_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(15)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_RESET_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_CMD_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_RETRY_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HDC1080_TX_RX_DELAY_MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hdc1080&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment">*<sp/>functions<sp/>and<sp/>subroutines</highlight></codeline>
<codeline lineno="84"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>hdc1080_i2c_write_command(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};<sp/></highlight><highlight class="comment">//<sp/>lsb,<sp/>msb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>hdc1080_i2c_write_word_to(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit24_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr,<sp/>(uint8_t)(word<sp/>&amp;<sp/>0xff),<sp/>(uint8_t)((word<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)<sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT24_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_transmit,<sp/>i2c<sp/>write<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>hdc1080_i2c_read_word_from(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bit8_uint8_buffer_t<sp/>tx<sp/>=<sp/>{<sp/>reg_addr<sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit(handle-&gt;i2c_handle,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>I2C_XFR_TIMEOUT_MS),<sp/>TAG,<sp/>&quot;i2c_master_transmit,<sp/>i2c<sp/>read<sp/>from<sp/>failed&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vTaskDelay(pdMS_TO_TICKS(HDC1080_TX_RX_DELAY_MS));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_RETURN_ON_ERROR(<sp/>i2c_master_receive(handle-&gt;i2c_handle,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/>I2C_XFR_TIMEOUT_MS),<sp/>TAG,<sp/>&quot;i2c_master_receive,<sp/>i2c<sp/>read<sp/>from<sp/>failed&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_transmit_receive(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>tx,<sp/>BIT8_UINT8_BUFFER_SIZE,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;hdc1080_i2c_read_word_from<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>*word<sp/>=<sp/>(uint16_t)rx[0]<sp/>|<sp/>((uint16_t)rx[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>hdc1080_i2c_read(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>i2c_master_receive(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>,<sp/>buffer,<sp/>size,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c_master_receive,<sp/>i2c<sp/>read<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hdc1080_get_humidity_duration_ms(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gae67808de49aceb774fa76ef6f6277c5d" kindref="member">hdc1080_humidity_resolutions_t</ref><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(resolution)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggafebf60aee364b0512cc8b5dbc2e4acabaabc33facda545a62722e9afa5fb54eb0" kindref="member">HDC1080_HUMIDITY_RESOLUTION_14BIT</ref>:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggafebf60aee364b0512cc8b5dbc2e4acaba0fbb7b270d2575e47a1f613d417b5d72" kindref="member">HDC1080_HUMIDITY_RESOLUTION_11BIT</ref>:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ggafebf60aee364b0512cc8b5dbc2e4acaba86d56e5e68f8c1a35d06f6aff2c0138c" kindref="member">HDC1080_HUMIDITY_RESOLUTION_8BIT</ref>:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hdc1080_get_humidity_tick_duration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gae67808de49aceb774fa76ef6f6277c5d" kindref="member">hdc1080_humidity_resolutions_t</ref><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>pdMS_TO_TICKS(hdc1080_get_humidity_duration_ms(resolution));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>res;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hdc1080_get_temperature_duration_ms(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga778ae16b2d80f624217c3a1a9fa94cc8" kindref="member">hdc1080_temperature_resolutions_t</ref><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(resolution)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gga67668000949d016e559d46366831972ca28ef676034a8e76374410a20228782fe" kindref="member">HDC1080_TEMPERATURE_RESOLUTION_14BIT</ref>:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gga67668000949d016e559d46366831972ca2891414464804111773c6c31d5542b79" kindref="member">HDC1080_TEMPERATURE_RESOLUTION_11BIT</ref>:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hdc1080_get_temperature_tick_duration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga778ae16b2d80f624217c3a1a9fa94cc8" kindref="member">hdc1080_temperature_resolutions_t</ref><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>pdMS_TO_TICKS(hdc1080_get_temperature_duration_ms(resolution));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>res;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hdc1080_convert_temperature_signal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>temperature)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)temperature<sp/>/<sp/>65536.0f<sp/>*<sp/>165.0f<sp/>-<sp/>40.0f;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hdc1080_convert_humidity_signal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)humidity<sp/>/<sp/>65536.0f<sp/>*<sp/>100.0f;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>hdc1080_calculate_dewpoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dewpoint)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>dewpoint<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>temperature<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temperature<sp/>&gt;<sp/><ref refid="hdc1080_8c_1a6e3823eb6a879358d304172784515219" kindref="member">HDC1080_TEMPERATURE_MAX</ref><sp/>||<sp/>temperature<sp/>&lt;<sp/><ref refid="hdc1080_8c_1a60cc182436e66538788d50028993b84f" kindref="member">HDC1080_TEMPERATURE_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;temperature<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>calculate<sp/>dewpoint<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>humidity<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(humidity<sp/>&gt;<sp/><ref refid="hdc1080_8c_1a26a04a552e1887b0e4865295476e1fb7" kindref="member">HDC1080_HUMIDITY_MAX</ref><sp/>||<sp/>humidity<sp/>&lt;<sp/><ref refid="hdc1080_8c_1a27f64bb42c278d57d7162a677bcaac3b" kindref="member">HDC1080_HUMIDITY_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_RETURN_ON_FALSE(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ESP_ERR_INVALID_ARG,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;humidity<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>calculate<sp/>dewpoint<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>dew-point<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>H<sp/>=<sp/>(log10(humidity)-2)/0.4343<sp/>+<sp/>(17.62*temperature)/(243.12+temperature);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>*dewpoint<sp/>=<sp/>243.12*H/(17.62-H);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>esp_err_t<sp/>hdc1080_setup(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>configure<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.acquisition_mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__drivers_1gga1916160d74d5ce30f5508b7bcbc8928cadbc7d48f926d1f8d8d3fa30236b79497" kindref="member">HDC1080_ACQUISITION_SEQUENCED</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.temperature_resolution<sp/>=<sp/>handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref>.<ref refid="structhdc1080__config__s_1ac80062b6a4a5ce0d409d1a3a432da327" kindref="member">temperature_resolution</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.humidity_resolution<sp/><sp/><sp/><sp/>=<sp/>handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref>.<ref refid="structhdc1080__config__s_1abdf2923f09a7260e473789aea5a696a8" kindref="member">humidity_resolution</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>configuration<sp/>register,<sp/>setup<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga598773982b5b95887427e6ebf25fadc1" kindref="member">hdc1080_get_serial_number_register</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/>uint64_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint16_t<sp/>serial_id_fbp,<sp/>serial_id_mbp,<sp/>serial_id_lbp;<sp/>//<sp/>serial<sp/>identifier<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i2c_hdc1080_serial_number_register_t<sp/>sn_reg;<sp/>//<sp/>this<sp/>structure<sp/>may<sp/>not<sp/>be<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hdc1080_handle-&gt;dev_params-&gt;serial_number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>pdMS_TO_TICKS(HDC1080_CMD_DELAY_MS)<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae0190c50b172c2215d2b69e8c6b31f9f" kindref="member">hdc1080_get_manufacturer_id_register</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>manufacturer<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_i2c_read_word_from(handle,<sp/><ref refid="hdc1080_8c_1ae95ec6a64c6ce2ecd4ba48322f003927" kindref="member">HDC1080_REG_MANUFACTURER_ID</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>manufacturer<sp/>identifier<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>pdMS_TO_TICKS(HDC1080_CMD_DELAY_MS)<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga0c580fea8f1a1557092369441b93657d" kindref="member">hdc1080_get_device_id_register</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/>uint16_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>device<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_i2c_read_word_from(handle,<sp/><ref refid="hdc1080_8c_1a8c834c7d5b8c92692c29345d5b439068" kindref="member">HDC1080_REG_DEVICE_ID</ref>,<sp/>reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>device<sp/>identifier<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>pdMS_TO_TICKS(HDC1080_CMD_DELAY_MS)<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/>hdc1080_configuration_register_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_i2c_read_word_from(handle,<sp/><ref refid="hdc1080_8c_1ab2bfb41386eef6e49403800923288ecc" kindref="member">HDC1080_REG_CONFIGURATION</ref>,<sp/>&amp;config),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>reg-&gt;reg<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>pdMS_TO_TICKS(HDC1080_CMD_DELAY_MS)<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hdc1080_configuration_register_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config<sp/>=<sp/>{<sp/>.reg<sp/>=<sp/>reg.reg<sp/>};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>configuration<sp/>reserved<sp/>fields<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.reserved1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>config.bits.reserved2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_i2c_write_word_to(handle,<sp/><ref refid="hdc1080_8c_1ab2bfb41386eef6e49403800923288ecc" kindref="member">HDC1080_REG_CONFIGURATION</ref>,<sp/>config.reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>configuration<sp/>register<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>pdMS_TO_TICKS(HDC1080_CMD_DELAY_MS)<sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga6a5911a91a065762df68d13b3eb9280f" kindref="member">hdc1080_init</ref>(i2c_master_bus_handle_t<sp/>master_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga7eaba97c9208eb971d02ddb6e51edf44" kindref="member">hdc1080_config_t</ref><sp/>*hdc1080_config,<sp/><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>*hdc1080_handle)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>master_handle<sp/>&amp;&amp;<sp/>hdc1080_config<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>power-up<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="hdc1080_8c_1a4399b18a93b8e693685c798028b180dd" kindref="member">HDC1080_POWERUP_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>exists<sp/>on<sp/>the<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>i2c_master_probe(master_handle,<sp/>hdc1080_config-&gt;<ref refid="structhdc1080__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,<sp/><ref refid="group__drivers_1ga90c8e7d8c3b6158111d7b35d1a8fec50" kindref="member">I2C_XFR_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(ret,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;device<sp/>does<sp/>not<sp/>exist<sp/>at<sp/>address<sp/>0x%02x,<sp/>hdc1080<sp/>device<sp/>handle<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>hdc1080_config-&gt;<ref refid="structhdc1080__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>memory<sp/>availability<sp/>for<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>out_handle;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>i2c<sp/>hdc1080<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref><sp/>=<sp/>*hdc1080_config;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i2c_device_config_t<sp/>i2c_dev_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dev_addr_length<sp/><sp/><sp/><sp/>=<sp/>I2C_ADDR_BIT_LEN_7,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device_address<sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref>.<ref refid="structhdc1080__config__s_1a4fc512d568c2b72f6907c218205cf6c9" kindref="member">i2c_address</ref>,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scl_speed_hz<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>out_handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref>.<ref refid="structhdc1080__config__s_1a770b3ab4bba557baec88287d86832a34" kindref="member">i2c_clock_speed</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(i2c_master_bus_add_device(master_handle,<sp/>&amp;i2c_dev_conf,<sp/>&amp;out_handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>new<sp/>bus<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>reset<sp/>the<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga92ae9bbe2ebea4f9cf9be1bb44daaf97" kindref="member">hdc1080_reset</ref>(out_handle),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>hdc1080<sp/>soft-reset<sp/>device<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>manufacturer<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1gae0190c50b172c2215d2b69e8c6b31f9f" kindref="member">hdc1080_get_manufacturer_id_register</ref>(out_handle,<sp/>&amp;out_handle-&gt;<ref refid="structhdc1080__context__t_1a4ad31fcb69f8aaca8f3c1820bb4d8594" kindref="member">manufacturer_id</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>hdc1080<sp/>read<sp/>manufacturer<sp/>identifier<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>device<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(<ref refid="group__drivers_1ga0c580fea8f1a1557092369441b93657d" kindref="member">hdc1080_get_device_id_register</ref>(out_handle,<sp/>&amp;out_handle-&gt;<ref refid="structhdc1080__context__t_1adc401e0e7465eda38f9444eeb6169a10" kindref="member">device_id</ref>),<sp/>err_handle,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;i2c<sp/>hdc1080<sp/>read<sp/>device<sp/>identifier<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>device<sp/>serial<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>*hdc1080_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>application<sp/>start<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(<ref refid="hdc1080_8c_1a0395d0fb842cc2b3c7c2febbf2491a9a" kindref="member">HDC1080_APPSTART_DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>err_handle:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2c_master_bus_rm_device(out_handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga166fa70a9efe0894a6b035aab66dc0b5" kindref="member">hdc1080_get_measurement</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>humidity)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>rx_retry_max<sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_retry_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>bit16_uint8_buffer_t<sp/>rx<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_i2c_write_command(handle,<sp/><ref refid="hdc1080_8c_1a5e79595180d660df3122d295adaf372b" kindref="member">HDC1080_REG_TEMPERATURE</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>to<sp/>i2c<sp/>device<sp/>handle,<sp/>write<sp/>to<sp/>trigger<sp/>temperature<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(hdc1080_get_temperature_tick_duration(handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref>.<ref refid="structhdc1080__config__s_1ac80062b6a4a5ce0d409d1a3a432da327" kindref="member">temperature_resolution</ref>));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>retry<sp/>needed<sp/>-<sp/>unexpected<sp/>nack<sp/>indicates<sp/>that<sp/>the<sp/>sensor<sp/>is<sp/>still<sp/>busy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>hdc1080_i2c_read(handle,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>retry<sp/>attempt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(HDC1080_RETRY_DELAY_MS));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK<sp/>&amp;&amp;<sp/>++rx_retry_count<sp/>&lt;=<sp/>rx_retry_max);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ret,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>to<sp/>i2c<sp/>device<sp/>handle,<sp/>read<sp/>temperature<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>concat<sp/>temperature<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>t_raw<sp/>=<sp/>((uint16_t)rx[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>rx[1];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>temperature<sp/>and<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>*temperature<sp/>=<sp/>hdc1080_convert_temperature_signal(t_raw);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>write<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_i2c_write_command(handle,<sp/><ref refid="hdc1080_8c_1a31be7943ee55720987f9208d935ff40e" kindref="member">HDC1080_REG_HUMIDITY</ref>),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>to<sp/>i2c<sp/>device<sp/>handle,<sp/>write<sp/>to<sp/>trigger<sp/>humidity<sp/>measurement<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(hdc1080_get_humidity_tick_duration(handle-&gt;<ref refid="structhdc1080__context__t_1aa9370130df1269fd81f8ee70318abc7c" kindref="member">dev_config</ref>.<ref refid="structhdc1080__config__s_1abdf2923f09a7260e473789aea5a696a8" kindref="member">humidity_resolution</ref>));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>retry<sp/>needed<sp/>-<sp/>unexpected<sp/>nack<sp/>indicates<sp/>that<sp/>the<sp/>sensor<sp/>is<sp/>still<sp/>busy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_retry_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>hdc1080_i2c_read(handle,<sp/>rx,<sp/>BIT16_UINT8_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>before<sp/>next<sp/>retry<sp/>attempt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(HDC1080_RETRY_DELAY_MS));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK<sp/>&amp;&amp;<sp/>++rx_retry_count<sp/>&lt;=<sp/>rx_retry_max);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>i2c<sp/>read<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>ret,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>to<sp/>i2c<sp/>device<sp/>handle,<sp/>read<sp/>humidity<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>concat<sp/>humidity<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>h_raw<sp/>=<sp/>((uint16_t)rx[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>rx[1];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>humidity<sp/>and<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>*humidity<sp/>=<sp/>hdc1080_convert_humidity_signal(h_raw);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga21935580fd6cb5932eb5e26ba3902027" kindref="member">hdc1080_get_measurements</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>temperature,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>humidity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dewpoint)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>measurements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga166fa70a9efe0894a6b035aab66dc0b5" kindref="member">hdc1080_get_measurement</ref>(handle,<sp/>temperature,<sp/>humidity),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>to<sp/>i2c<sp/>device<sp/>handle,<sp/>read<sp/>measurements<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>dewpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_calculate_dewpoint(*temperature,<sp/>*humidity,<sp/>dewpoint),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>calculate<sp/>dewpoint,<sp/>read<sp/>measurements<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gaefa457fda281744e300573dc2f8432fb" kindref="member">hdc1080_enable_heater</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>enable<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>heater<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.heater_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>configuration<sp/>register,<sp/>enable<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga4e10cb9cebcf138c6fbc0a594833a314" kindref="member">hdc1080_disable_heater</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>disable<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>heater<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.heater_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>configuration<sp/>register,<sp/>disable<sp/>heater<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga25b2ca82a8ce6cb8a7c57110e72129a2" kindref="member">hdc1080_get_temperature_resolution</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1ga778ae16b2d80f624217c3a1a9fa94cc8" kindref="member">hdc1080_temperature_resolutions_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>get<sp/>temperature<sp/>resolution<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>*resolution<sp/>=<sp/>config_reg.bits.temperature_resolution;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga654f37c4e3fcfeb443c361a27f99ad19" kindref="member">hdc1080_set_temperature_resolution</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga778ae16b2d80f624217c3a1a9fa94cc8" kindref="member">hdc1080_temperature_resolutions_t</ref><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>set<sp/>temperature<sp/>resolution<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>temperature<sp/>resolution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.temperature_resolution<sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>configuration<sp/>register,<sp/>set<sp/>temperature<sp/>resolution<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gae1b15dab767c8e06b0364a1c257366c9" kindref="member">hdc1080_get_humidity_resolution</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/><ref refid="group__drivers_1gae67808de49aceb774fa76ef6f6277c5d" kindref="member">hdc1080_humidity_resolutions_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>get<sp/>humidity<sp/>resolution<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>output<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>*resolution<sp/>=<sp/>config_reg.bits.humidity_resolution;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga429a9d726fa78bbd9aa353a09dd9b0ef" kindref="member">hdc1080_set_humidity_resolution</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1gae67808de49aceb774fa76ef6f6277c5d" kindref="member">hdc1080_humidity_resolutions_t</ref><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>set<sp/>humidity<sp/>resolution<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>humidity<sp/>resolution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.humidity_resolution<sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>configuration<sp/>register,<sp/>set<sp/>humidity<sp/>resolution<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga92ae9bbe2ebea4f9cf9be1bb44daaf97" kindref="member">hdc1080_reset</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc1080_configuration_register_t<sp/>config_reg;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>read<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<ref refid="group__drivers_1gaf2dfc58fb1171d3d61f3d40ef43b4da2" kindref="member">hdc1080_get_configuration_register</ref>(handle,<sp/>&amp;config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>configuration<sp/>register,<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>soft-reset<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>config_reg.bits.reset_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>write<sp/>configuration<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga960f5f63a539b9a280ba06f6049848cb" kindref="member">hdc1080_set_configuration_register</ref>(handle,<sp/>config_reg),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>write<sp/>configuration<sp/>register,<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>task<sp/>before<sp/>next<sp/>i2c<sp/>transaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(<sp/>pdMS_TO_TICKS(HDC1080_RESET_DELAY_MS)<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>setup<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/>hdc1080_setup(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>setup<sp/>device,<sp/>reset<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga5207bde071a956af28f94cec74af246e" kindref="member">hdc1080_remove</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i2c_master_bus_rm_device(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga77348c1804725d85c11559113fe8f984" kindref="member">hdc1080_delete</ref>(<ref refid="group__drivers_1gae7a6c4d039c3dca434589908c50186da" kindref="member">hdc1080_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>device<sp/>from<sp/>master<sp/>bus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_RETURN_ON_ERROR(<sp/><ref refid="group__drivers_1ga5207bde071a956af28f94cec74af246e" kindref="member">hdc1080_remove</ref>(handle),<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>remove<sp/>device<sp/>from<sp/>i2c<sp/>master<sp/>bus,<sp/>delete<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>handle<sp/>instance<sp/>and<sp/>free<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle-&gt;<ref refid="structhdc1080__context__t_1aebc33e9d9d97bc57c51d01fa39056a22" kindref="member">i2c_handle</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(handle);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__drivers_1ga5c7f0e308b22e2b0478e40200dd965f6" kindref="member">hdc1080_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HDC1080_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">int32_t<sp/><ref refid="group__drivers_1gad4e28434f1ab602f3a07c5372fa07594" kindref="member">hdc1080_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HDC1080_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/i2c/esp_hdc1080/hdc1080.c"/>
  </compounddef>
</doxygen>
