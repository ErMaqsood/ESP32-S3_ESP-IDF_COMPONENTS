<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="s12sd_8c" kind="file" language="C++">
    <compoundname>s12sd.c</compoundname>
    <includes refid="s12sd_8h" local="yes">include/s12sd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">sdkconfig.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <incdepgraph>
      <node id="2">
        <label>include/s12sd.h</label>
        <link refid="s12sd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>s12sd_version.h</label>
        <link refid="s12sd__version_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/peripherals/adc/esp_s12sd/s12sd.c</label>
        <link refid="s12sd_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>esp_adc/adc_cali.h</label>
      </node>
      <node id="9">
        <label>esp_adc/adc_cali_scheme.h</label>
      </node>
      <node id="7">
        <label>esp_adc/adc_oneshot.h</label>
      </node>
      <node id="5">
        <label>esp_check.h</label>
      </node>
      <node id="6">
        <label>esp_err.h</label>
      </node>
      <node id="14">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="15">
        <label>freertos/task.h</label>
      </node>
      <node id="13">
        <label>sdkconfig.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="s12sd_8c_1ac6e83534fe61a89c5212940e7083b20e" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_0_MIN</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constant definitions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="49" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ae4f38b382eb2d065b09b1fcc9fd077a3" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_0_MAX</name>
        <initializer>(49)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="50" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ad2e26f973495ff40552739bcbc781d41" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_1_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_0_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="51" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1aa655e9458ebc19e54abeeaf5908815fe" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_1_MAX</name>
        <initializer>(227)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="52" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1aeb28bfbad611fbd1edfa3dafea7b21f9" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_2_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_1_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="53" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a4d8641418a53dd2a0b0ddf6c9068b5c7" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_2_MAX</name>
        <initializer>(318)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="54" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1aa7780d4cd7b2bc65cc32e99f1bf66674" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_3_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_2_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="55" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ade400ae7111f8cddb9e5af0b2e5b141b" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_3_MAX</name>
        <initializer>(408)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="56" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a89bf59018998893a6c6f3c294209530e" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_4_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_3_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="57" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a8f8bda5b74c7eca3a1655c9d4a2c0855" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_4_MAX</name>
        <initializer>(503)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="58" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1aa523e809ecaebaf321f13dc6908ae8fb" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_5_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_4_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="59" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a739f3cdc82af607501950e14db83c3db" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_5_MAX</name>
        <initializer>(606)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="60" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a4680bce04f1266fe0e30bd2550e0dc8b" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_6_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_5_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="61" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1aa1bdf07a5c538b253dd4980ca7f17ceb" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_6_MAX</name>
        <initializer>(696)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="62" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1adf3943722679cdd5aab086d8bf1ad598" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_7_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_6_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="63" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a1be8022d1a5ac2189059c68eee7324a9" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_7_MAX</name>
        <initializer>(795)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="64" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ac63690ed69f759d4737d4524494bac59" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_8_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_7_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="65" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ab2fef68c5a4fe1cb4c81c863a4bfd809" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_8_MAX</name>
        <initializer>(881)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="66" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1abf335fa0f8990cc8b813c010b9f31d46" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_9_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="67" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ae97a87a0a472cfdb74b570b176bdfda4" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_9_MAX</name>
        <initializer>(976)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="68" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a02840e76ed2db32a397fd4cf35a23fb7" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_10_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_9_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="69" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ac984ef40efcb7cbc3b1bf352b6771005" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_10_MAX</name>
        <initializer>(1079)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="70" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1a315198102682cf18e4fe34a721bbe9e7" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_11_MIN</name>
        <initializer>ADC_UV_MV_TO_INDEX_10_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="71" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1aa993fd058edb59d1ff9afffa3cfa43dd" prot="public" static="no">
        <name>ADC_UV_MV_TO_INDEX_11_MAX</name>
        <initializer>(1500)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="72" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="s12sd_8c_1ac2bb3db0b37c9f45103fd513ca5158fe" prot="public" static="no">
        <name>ESP_ARG_CHECK</name>
        <param><defname>VAL</defname></param>
        <initializer>do { if (!(VAL)) return ESP_ERR_INVALID_ARG; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="77" column="9" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="77" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="s12sd_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;s12sd&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="82" column="19" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="82" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="s12sd_8c_1a6644ced3d1e006b769aba8c737ab69fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t s12sd_convert_uv_index</definition>
        <argsstring>(const float milli_volt)</argsstring>
        <name>s12sd_convert_uv_index</name>
        <param>
          <type>const float</type>
          <declname>milli_volt</declname>
        </param>
        <briefdescription>
<para>Converts millivolt (0 to 1500mV) to uv index. see GUVA-S12SD datasheet for details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">milli_volt</parametername>
</parameternamelist>
<parameterdescription>
<para>voltage, in millivolts, to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uv index (0 to 11), an out-of-range value returns 255 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="91" column="23" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="91" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="s12sd_8c_1aff463464e1ade1ad8a879be19e811ef3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool s12sd_calibration_init</definition>
        <argsstring>(const s12sd_config_t *s12sd_config, adc_cali_handle_t *cal_handle)</argsstring>
        <name>s12sd_calibration_init</name>
        <param>
          <type>const <ref refid="group__drivers_1ga15f16165cfb4b322efe163ac65f02cdd" kindref="member">s12sd_config_t</ref> *</type>
          <declname>s12sd_config</declname>
        </param>
        <param>
          <type>adc_cali_handle_t *</type>
          <declname>cal_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function and subroutine declarations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="125" column="20" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="125" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="s12sd_8c_1a803c4afaffc5cdf64a9ea74b27967d60" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void s12sd_calibration_delete</definition>
        <argsstring>(adc_cali_handle_t cal_handle)</argsstring>
        <name>s12sd_calibration_delete</name>
        <param>
          <type>adc_cali_handle_t</type>
          <declname>cal_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/peripherals/adc/esp_s12sd/s12sd.c" line="174" column="20" bodyfile="components/peripherals/adc/esp_s12sd/s12sd.c" bodystart="174" bodyend="183"/>
      </memberdef>
      <member refid="group__drivers_1gafe725213331255cb80b1f2eabc9fb010" kind="function"><name>s12sd_init</name></member>
      <member refid="group__drivers_1ga219c7f2cf38372bf720a29ff7eb1748f" kind="function"><name>s12sd_measure</name></member>
      <member refid="group__drivers_1ga701d5eb60680b39ba39ee56241838d89" kind="function"><name>s12sd_delete</name></member>
      <member refid="group__drivers_1ga44d0ad127b85de655a7340e091f8e3f5" kind="function"><name>s12sd_get_fw_version</name></member>
      <member refid="group__drivers_1ga9be3443ef114eb41b77a82057ae97b60" kind="function"><name>s12sd_get_fw_version_number</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ESP-IDF driver for GUVA-S12SD UV sensor</para>
<para>Ported from esp-open-rtos</para>
<para>Copyright (c) 2024 Eric Gionet (<ulink url="mailto:gionet.c.eric@gmail.com">gionet.c.eric@gmail.com</ulink>)</para>
<para>MIT Licensed as described in the file LICENSE </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>Eric<sp/>Gionet<sp/>(gionet.c.eric@gmail.com)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="s12sd_8h" kindref="compound">include/s12sd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdkconfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UV<sp/>millivolt<sp/>to<sp/>uv<sp/>index<sp/>upper<sp/>and<sp/>lower<sp/>limit<sp/>definitions</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>see<sp/>GUVA-S12SD<sp/>datasheet<sp/>for<sp/>details</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_0_MIN<sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_0_MAX<sp/><sp/><sp/><sp/>(49)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_1_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_0_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_1_MAX<sp/><sp/><sp/><sp/>(227)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_2_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_1_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_2_MAX<sp/><sp/><sp/><sp/>(318)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_3_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_2_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_3_MAX<sp/><sp/><sp/><sp/>(408)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_4_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_3_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_4_MAX<sp/><sp/><sp/><sp/>(503)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_5_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_4_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_5_MAX<sp/><sp/><sp/><sp/>(606)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_6_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_5_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_6_MAX<sp/><sp/><sp/><sp/>(696)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_7_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_6_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_7_MAX<sp/><sp/><sp/><sp/>(795)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_8_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_7_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_8_MAX<sp/><sp/><sp/><sp/>(881)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_9_MIN<sp/><sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_9_MAX<sp/><sp/><sp/><sp/>(976)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_10_MIN<sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_9_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_10_MAX<sp/><sp/><sp/>(1079)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_11_MIN<sp/><sp/><sp/>ADC_UV_MV_TO_INDEX_10_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_UV_MV_TO_INDEX_11_MAX<sp/><sp/><sp/>(1500)<sp/></highlight><highlight class="comment">//<sp/>1170+<sp/>but<sp/>set<sp/>a<sp/>max<sp/>of<sp/>1500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>macro<sp/>definitions</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_ARG_CHECK(VAL)<sp/>do<sp/>{<sp/>if<sp/>(!(VAL))<sp/>return<sp/>ESP_ERR_INVALID_ARG;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*<sp/>static<sp/>constant<sp/>declarations</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s12sd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>s12sd_convert_uv_index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>milli_volt)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/><ref refid="s12sd_8c_1ac6e83534fe61a89c5212940e7083b20e" kindref="member">ADC_UV_MV_TO_INDEX_0_MIN</ref><sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_0_MAX)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_1_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_1_MAX)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_2_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_2_MAX)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_3_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_3_MAX)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_4_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_4_MAX)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_5_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_5_MAX)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_6_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_6_MAX)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_7_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_7_MAX)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_8_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_8_MAX)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_9_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_9_MAX)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>9;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_10_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_10_MAX)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(milli_volt<sp/>&gt;<sp/>ADC_UV_MV_TO_INDEX_11_MIN<sp/>&amp;&amp;<sp/>milli_volt<sp/>&lt;=<sp/>ADC_UV_MV_TO_INDEX_11_MAX)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>11;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>255;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s12sd_calibration_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga15f16165cfb4b322efe163ac65f02cdd" kindref="member">s12sd_config_t</ref><sp/>*s12sd_config,<sp/>adc_cali_handle_t<sp/>*cal_handle)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_cali_handle_t<sp/>out_handle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calibrated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ADC_CALI_SCHEME_CURVE_FITTING_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!calibrated)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;calibration<sp/>scheme<sp/>version<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Curve<sp/>Fitting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_cali_curve_fitting_config_t<sp/>cali_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unit_id<sp/>=<sp/>s12sd_config-&gt;<ref refid="structs12sd__config__s_1a57fbbfb60781af698c4dcd7cd1381af1" kindref="member">adc_unit</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chan<sp/>=<sp/>s12sd_config-&gt;<ref refid="structs12sd__config__s_1a4fea492036f39c812cbada5718176922" kindref="member">adc_channel</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.atten<sp/>=<sp/>ADC_S12SD_ATTEN,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bitwidth<sp/>=<sp/><ref refid="group__drivers_1ga1bcf8e85722aac11e4c36c84fdcbaf3a" kindref="member">ADC_S12SD_DIGI_BIT_WIDTH</ref>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>adc_cali_create_scheme_curve_fitting(&amp;cali_config,<sp/>&amp;out_handle);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ADC_CALI_SCHEME_LINE_FITTING_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!calibrated)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;calibration<sp/>scheme<sp/>version<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Line<sp/>Fitting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_cali_line_fitting_config_t<sp/>cali_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unit_id<sp/>=<sp/>s12sd_config-&gt;<ref refid="structs12sd__config__s_1a57fbbfb60781af698c4dcd7cd1381af1" kindref="member">adc_unit</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.atten<sp/>=<sp/>ADC_S12SD_ATTEN,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bitwidth<sp/>=<sp/><ref refid="group__drivers_1ga1bcf8e85722aac11e4c36c84fdcbaf3a" kindref="member">ADC_S12SD_DIGI_BIT_WIDTH</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>adc_cali_create_scheme_line_fitting(&amp;cali_config,<sp/>&amp;out_handle);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>*cal_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;Calibration<sp/>Success&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_ERR_NOT_SUPPORTED<sp/>||<sp/>!calibrated)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(TAG,<sp/></highlight><highlight class="stringliteral">&quot;eFuse<sp/>not<sp/>burnt,<sp/>skip<sp/>software<sp/>calibration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>arg<sp/>or<sp/>no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calibrated;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>s12sd_calibration_delete(adc_cali_handle_t<sp/>cal_handle)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ADC_CALI_SCHEME_CURVE_FITTING_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;deregister<sp/>%s<sp/>calibration<sp/>scheme&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Curve<sp/>Fitting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>adc_cali_delete_scheme_curve_fitting(cal_handle)<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>ADC_CALI_SCHEME_LINE_FITTING_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;deregister<sp/>%s<sp/>calibration<sp/>scheme&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Line<sp/>Fitting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(<sp/>adc_cali_delete_scheme_line_fitting(cal_handle)<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1gafe725213331255cb80b1f2eabc9fb010" kindref="member">s12sd_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__drivers_1ga15f16165cfb4b322efe163ac65f02cdd" kindref="member">s12sd_config_t</ref><sp/>*s12sd_config,<sp/><ref refid="group__drivers_1ga7bd30cb31497500d06f7189146fcca08" kindref="member">s12sd_handle_t</ref><sp/>*s12sd_handle)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__drivers_1ga7bd30cb31497500d06f7189146fcca08" kindref="member">s12sd_handle_t</ref><sp/><sp/>out_handle;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>s12sd_config<sp/>&amp;&amp;<sp/>s12sd_handle<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle<sp/>=<sp/>(<ref refid="group__drivers_1ga7bd30cb31497500d06f7189146fcca08" kindref="member">s12sd_handle_t</ref>)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_handle));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_FALSE(out_handle,<sp/>ESP_ERR_NO_MEM,<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>adc<sp/>s12sd<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structs12sd__context__t_1ac4e5cffa8a1a6f47c218af44df2beca7" kindref="member">dev_config</ref><sp/>=<sp/>*s12sd_config;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_oneshot_unit_init_cfg_t<sp/>init_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unit_id<sp/>=<sp/>out_handle-&gt;<ref refid="structs12sd__context__t_1ac4e5cffa8a1a6f47c218af44df2beca7" kindref="member">dev_config</ref>.<ref refid="structs12sd__config__s_1a57fbbfb60781af698c4dcd7cd1381af1" kindref="member">adc_unit</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(adc_oneshot_new_unit(&amp;init_conf,<sp/>&amp;out_handle-&gt;<ref refid="structs12sd__context__t_1a574554647b831c66115ed6322e1faae4" kindref="member">adc_handle</ref>),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;adc<sp/>s12sd<sp/>device<sp/>new<sp/>one-shot<sp/>handle<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_oneshot_chan_cfg_t<sp/>os_conf<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bitwidth<sp/>=<sp/><ref refid="group__drivers_1ga1bcf8e85722aac11e4c36c84fdcbaf3a" kindref="member">ADC_S12SD_DIGI_BIT_WIDTH</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.atten<sp/><sp/><sp/><sp/>=<sp/>ADC_S12SD_ATTEN,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_GOTO_ON_ERROR(adc_oneshot_config_channel(out_handle-&gt;<ref refid="structs12sd__context__t_1a574554647b831c66115ed6322e1faae4" kindref="member">adc_handle</ref>,<sp/>out_handle-&gt;<ref refid="structs12sd__context__t_1ac4e5cffa8a1a6f47c218af44df2beca7" kindref="member">dev_config</ref>.<ref refid="structs12sd__config__s_1a4fea492036f39c812cbada5718176922" kindref="member">adc_channel</ref>,<sp/>&amp;os_conf),<sp/>err,<sp/>TAG,<sp/></highlight><highlight class="stringliteral">&quot;adc<sp/>s12sd<sp/>device<sp/>configuration<sp/>(one-shot)<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>out_handle-&gt;<ref refid="structs12sd__context__t_1a2881059d405ea46bf53dfe34a111e665" kindref="member">adc_calibrate</ref><sp/>=<sp/>s12sd_calibration_init(s12sd_config,<sp/>&amp;out_handle-&gt;<ref refid="structs12sd__context__t_1a592f72af7f896d9d94d01e04687e1d96" kindref="member">adc_cal_handle</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*s12sd_handle<sp/>=<sp/>out_handle;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>err:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_handle<sp/>&amp;&amp;<sp/>out_handle-&gt;<ref refid="structs12sd__context__t_1a574554647b831c66115ed6322e1faae4" kindref="member">adc_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_oneshot_del_unit(out_handle-&gt;<ref refid="structs12sd__context__t_1a574554647b831c66115ed6322e1faae4" kindref="member">adc_handle</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(out_handle);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga219c7f2cf38372bf720a29ff7eb1748f" kindref="member">s12sd_measure</ref>(<ref refid="group__drivers_1ga7bd30cb31497500d06f7189146fcca08" kindref="member">s12sd_handle_t</ref><sp/>handle,<sp/>uint8_t<sp/>*uv_index)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_sum<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_volt<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>&amp;&amp;<sp/>uv_index<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;ADC_S12SD_SAMPLE_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adc_raw;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adc_volt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>adc_oneshot_read(handle-&gt;<ref refid="structs12sd__context__t_1a574554647b831c66115ed6322e1faae4" kindref="member">adc_handle</ref>,<sp/>handle-&gt;<ref refid="structs12sd__context__t_1ac4e5cffa8a1a6f47c218af44df2beca7" kindref="member">dev_config</ref>.<ref refid="structs12sd__config__s_1a4fea492036f39c812cbada5718176922" kindref="member">adc_channel</ref>,<sp/>&amp;adc_raw);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_OK<sp/>&amp;&amp;<sp/>handle-&gt;<ref refid="structs12sd__context__t_1a2881059d405ea46bf53dfe34a111e665" kindref="member">adc_calibrate</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>adc_cali_raw_to_voltage(handle-&gt;<ref refid="structs12sd__context__t_1a592f72af7f896d9d94d01e04687e1d96" kindref="member">adc_cal_handle</ref>,<sp/>adc_raw,<sp/>&amp;adc_volt);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/>ESP_OK)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;<sp/></highlight><highlight class="comment">//<sp/>abort<sp/>altogether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_sum<sp/>+=<sp/>adc_volt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handle-&gt;<ref refid="structs12sd__context__t_1a2881059d405ea46bf53dfe34a111e665" kindref="member">adc_calibrate</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_STATE;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;<sp/></highlight><highlight class="comment">//<sp/>abort<sp/>altogether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>average<sp/>voltage<sp/>(mV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>avg_volt<sp/>=<sp/>avg_sum<sp/>/<sp/>ADC_S12SD_SAMPLE_SIZE;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>voltage<sp/>to<sp/>uv<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>*uv_index<sp/>=<sp/>s12sd_convert_uv_index(avg_volt);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_LOGI(TAG,<sp/>&quot;ADC%d<sp/>Channel[%d]<sp/>Samples(%d)<sp/>Cali<sp/>Voltage:<sp/>%.2f<sp/>mV&quot;,<sp/>s12sd_handle-&gt;adc_unit,<sp/>s12sd_handle-&gt;adc_channel,<sp/>ADC_UV_SAMPLE_SIZE,<sp/>avg_volt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ESP_LOGI(TAG,<sp/>&quot;Unit:<sp/>1,<sp/>Channel:<sp/>0,<sp/>Value<sp/>(mV):<sp/>%.2f,<sp/>UV<sp/>Index:<sp/>%u&quot;,<sp/>avg_volt,<sp/>*uv_index);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">esp_err_t<sp/><ref refid="group__drivers_1ga701d5eb60680b39ba39ee56241838d89" kindref="member">s12sd_delete</ref>(<ref refid="group__drivers_1ga7bd30cb31497500d06f7189146fcca08" kindref="member">s12sd_handle_t</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ARG_CHECK(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>adc_oneshot_del_unit(handle-&gt;<ref refid="structs12sd__context__t_1a574554647b831c66115ed6322e1faae4" kindref="member">adc_handle</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structs12sd__context__t_1a2881059d405ea46bf53dfe34a111e665" kindref="member">adc_calibrate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s12sd_calibration_delete(handle-&gt;<ref refid="structs12sd__context__t_1a592f72af7f896d9d94d01e04687e1d96" kindref="member">adc_cal_handle</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__drivers_1ga44d0ad127b85de655a7340e091f8e3f5" kindref="member">s12sd_get_fw_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S12SD_FW_VERSION_STR;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">int32_t<sp/><ref refid="group__drivers_1ga9be3443ef114eb41b77a82057ae97b60" kindref="member">s12sd_get_fw_version_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S12SD_FW_VERSION_INT32;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/peripherals/adc/esp_s12sd/s12sd.c"/>
  </compounddef>
</doxygen>
